edit-officer 


<?php
$accessarray = array (
		'1',
		'14',
		'19',
		'12' 
);
include ('session/session.php');

$tempOfficerDAO = new OfficerDAO ();

$seniorityerror = false;
$tempStgPostingsDAO = new StgPostingsDAO ();
if ($_GET['id'] != '' && !isset($_REQUEST ['actionType'])) {

	unset ( $_SESSION ['officerid'] );
	unset ( $_SESSION ['officerVO'] );
}
if ($_REQUEST ['id'] != '') {
	if (isset ( $_SESSION ['officerid'] )) {
		unset ( $_SESSION ['officerid'] );
		$_SESSION ['officerid'] = $_REQUEST ["id"];
	} else {
		$_SESSION ['officerid'] = $_REQUEST ["id"];
	}
}
/* if ($_REQUEST ['actionType'] == 'continue') {
	// changed by Vandana on 4-feb-2010 to avoid any updates on continue
	 $tempResult = $tempOfficerDAO->populatevofrompostarray();
	 $tempOfficerDAO->updatetable('officers');
	if($_REQUEST ['actionType'] == 'continue' &&!isset($_SESSION['error']) && !isset($_SESSION['mobile_error']) && !isset($_SESSION['employeeError']))
	{
		$url = "edit-postings.php?req_officer_id=".$_REQUEST ["id"];
		header ( "location:$url" );
	}
	
} else */if (($_REQUEST ['actionType'] == 'save') ||($_REQUEST ['actionType'] == 'continue')) {
	$tempOfficerVO = $tempOfficerDAO->populatevofrompostarray ();
	$tempOfficerDAO->updatetable ( 'officers' );
	$tempJoiningDate = $_POST [joiningDate];
	
	if (is_array ( $_FILES ) && $_POST ['profileoption'] != 1) {
		
		if (is_uploaded_file ( $_FILES ['userImage'] ['tmp_name'] )) {
			
			$sourcePath = $_FILES ['userImage'] ['tmp_name'];
			
			$targetPath = "profilepic/" . time () . '_' . $_FILES ['userImage'] ['name'];
			
			define ( "MAX_SIZE", "5120" );
			
			$errors = 0;
			
			if ($targetPath) {
				
				$extension = strtolower ( AppBase::getExtension ( $targetPath ) );
				
				if (($extension != "jpg") && ($extension != "jpeg") && ($extension != "png") && ($extension != "gif")) {
					
					$errors = 1;
				} else {
					
					$size = filesize ( $_FILES ['userImage'] ['tmp_name'] );
					
					if ($size > MAX_SIZE * 1024) {
						
						$errors = 1;
					}
					
					if ($extension == "jpg" || $extension == "jpeg") {
						
						$uploadedfile = $_FILES ['userImage'] ['tmp_name'];
						
						$src = imagecreatefromjpeg ( $uploadedfile );
					} else if ($extension == "png") {
						
						$uploadedfile = $_FILES ['userImage'] ['tmp_name'];
						
						$src = imagecreatefrompng ( $uploadedfile );
					} else {
						
						$src = imagecreatefromgif ( $uploadedfile );
					}
					
					list ( $width, $height ) = getimagesize ( $uploadedfile );
					
					$newwidth = 100;
					
					$newheight = ($height / $width) * $newwidth;
					
					$tmp = imagecreatetruecolor ( $newwidth, $newheight );
					
					imagecopyresampled ( $tmp, $src, 0, 0, 0, 0, $newwidth, $newheight, $width, $height );
					
					imagejpeg ( $tmp, $targetPath, 100 );
					
					imagedestroy ( $src );
					
					imagedestroy ( $tmp );
				}
			}
			
			if ($errors == 1) {
				
				$err = "Please upload valid image file(PNG, JPEG, JPG, GIF).";
			} else {
				
				$save = $tempOfficerDAO->update_profile_pic ( $targetPath, $tempOfficerVO->getId () );
			}
		}
	} else if ($_POST ['profileoption'] == 1) {
		
		$dele = $tempOfficerDAO->delete_profile_pic ( $tempOfficerVO->getId () );
	}
	if($_REQUEST ['actionType'] == 'continue' &&!isset($_SESSION['error']) && !isset($_SESSION['mobile_error']) && !isset($_SESSION['employeeError']))
	{
		$url = "edit-postings.php?req_officer_id=".$_REQUEST ["id"];
		header ( "location:$url" );
	}
	
	if(!isset($_SESSION['error']) && !isset($_SESSION['mobile_error']) && !isset($_SESSION['employeeError']))
	{	
	?>
		<script language="javascript">
				//alert("Officer details updated.");
				alert("Officer details updated.");
		</script>
<?php

	}
} else {
	/*
	 * In in session pick from session else instantiate a new vo
	 */
	if (! empty ( $_SESSION ['officerVO'] )) {
		$tempOfficerVO = unserialize ( $_SESSION ['officerVO'] );
		$postingList = $tempOfficerVO->getPostingList ();
		$stgPostingList = $tempStgPostingsDAO->getPostingListForOfficer ( $tempOfficerVO->getId () );
		if (count ( $postingList ) > 0) {
			$tempPostingVO = $postingList [count ( $postingList ) - 1];
			$tempFirstPostingVO = $postingList [0];
			$tempJoiningDate = $tempFirstPostingVO->getFromDate ();
			$diff = date_diffnew ( '2006-12-31', $tempPostingVO->getToDate () );
			// If to date is greater than 31-12-2006 than pending authentication
			// else Unaudited
			if ($diff [days] > 0) {
				// $tempOfficerVO->setProfilestatus("Pending Authentication");
			} else {
				// $tempOfficerVO->setProfilestatus("Unaudited");
			}
			$postDescription = $tempPostingVO->getDescription ();
			$tempPostid = $tempPostingVO->getPostid ();
		} else {
			$tempPostingVO = new PostingVO ();
			$tempFirstPostingVO = new PostingVO ();
			$tempJoiningDate = '';
			$postDescription = $tempPostingVO->getDescription ();
			$tempPostid = $tempPostingVO->getPostid ();
		}
	} else {
		$tempOfficerVO = $tempOfficerDAO->getOfficer ( $_REQUEST ['id'], $_REQUEST [autoid] );
		// removed echo -kanika 29.10.2009
		$postingList = $tempOfficerVO->getPostingList ();
		$stgPostingList = $tempStgPostingsDAO->getPostingListForOfficer ( $_REQUEST ['id'] );
		if (count ( $postingList ) > 0) {
			$tempPostingVO = $postingList [count ( $postingList ) - 1];
			$tempFirstPostingVO = $postingList [0];
			$tempJoiningDate = $tempFirstPostingVO->getFromDate ();
			$diff = date_diffnew ( '2006-12-31', $tempPostingVO->getToDate () );
			// If to date is greater than 31-12-2006 than pending authentication
			// else Unaudited
			if ($diff [days] > 0) {
				// $tempOfficerVO->setProfilestatus("Pending Authentication");
			} else {
				// $tempOfficerVO->setProfilestatus("Unaudited");
			}
			$postDescription = $tempPostingVO->getDescription ();
			$tempPostid = $tempPostingVO->getPostid ();
		} else {
			$tempPostingVO = new PostingVO ();
			$tempFirstPostingVO = new PostingVO ();
			$postDescription = $tempPostingVO->getDescription ();
			$tempPostid = $tempPostingVO->getPostid ();
			$tempJoiningDate = '';
		}
		$_SESSION ['officerVO'] = serialize ( $tempOfficerVO );
	}
}
$lastPostingSts=$tempOfficerDAO->getOfficerLastPosting($_REQUEST ['id']);
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Edit Officer</title>
<link href="css/style.css" rel="stylesheet" type="text/css" />
<script src="js/jquery.js"></script>
<!--
		Modification		:	End year limit in calender changed from 2009 to current year.
		Modified BY			:	Vishal Sahu
		Date				:   17-02-2010
		-->
<script>
            $(document).ready(function(){
                //For date of birth
                $('#dob').datepicker({ yearRange: '1930:<?php echo date(Y)?>' } );
                //For joining date
                $('#joiningdate').datepicker({ yearRange: '1965:<?php echo date(Y)?>' } );
                //For appointment date
                $('#apntdate').datepicker({ yearRange: '1965:<?php echo date(Y)?>' } );
                //For demise date
                $('#demiseDate').datepicker({ yearRange: '1965:<?php echo date(Y)?>' } );
                //For retirement date
                $('#retiredate').datepicker({ yearRange: '1970:<?php echo date(Y)?>' } );
                //For exit date
                $('#exitdate').datepicker({ yearRange: '1970:<?php echo date(Y)?>' } );
				
				$("#removepicture").click(function(){
					if(confirm("Do you want to remove profile picture for this officer?")){
						$('input[name="profileoption"]').val('1');
						$('input[name="actionType"]').val('save');
						$('#addofficerform').submit();
					}
				});
				getRankGradeData(<?php echo $tempOfficerVO->getRankid (); ?>, <?php echo $tempOfficerVO->getGradeid (); ?>);
            });
        </script>
<script language='JavaScript' type='text/javascript'
	src='js/validate.js'></script>
<script language='JavaScript' type='text/javascript' src='js/ajax.js'></script>
<script language='JavaScript' type='text/javascript'
	src='JScript/formValidator.js'></script>

<script>
            function submitOfficerForm(action,formid)
            {    
            	if(document.getElementById("lastPostingSts").value!='' && document.getElementById("status").value!='5' ){
            		if(confirm('Officer has pending posting, want to delete posting?')){
            			document.getElementById("lastPostingDel").value=1;
            		}
            	}
            	if(document.getElementById("categoryid").value!='11')
                {
             	   document.getElementById("subCategory").value= '-1';
                }           
                var tempForm = document.getElementById(formid);
                
                if(validateaddofficerform(tempForm))
                {
                    tempForm.actionType.value=action;
                    tempForm.submit();
                }
                else
                {
                    return false;
                }

            }
            
            function validateaddofficerform(formNode){
               var formValidatorInstance = new FormValidator(formNode);
				formValidatorInstance.addRule('civilCode','Enter Civil Code','required');
				formValidatorInstance.addRule('name','Enter name','required');
				formValidatorInstance.addRule('civilCode','Civil Code should be between 5 to 7 characters','rangelength',Array(5,7));
				formValidatorInstance.addRule('dateOfBirth','Enter date of birth','required');
				formValidatorInstance.addRule('retirementDate','Enter Retirement date.','required');
				//formValidatorInstance.addRule('email','Enter your email','required');
				formValidatorInstance.addRule('profilestatus','Enter status of profile','required');
				//formValidatorInstance.addRule('mobileNumber','Enter mobile number','required');
//				formValidatorInstance.addRule('employeeCode','Enter Employee Code','required');
				
				if(formValidatorInstance.validate())
				{
					
					var numbers = /^[0-9]+$/;
					var at = /^@+$/;
					if(validateRankid())
					{
						if(validateOfficerDates())
						{
							if(validateExitDate())
							{
								if(!validateDemiseDate())
								{
									return false;
								}
							}
							else
							{
								return false;
							}
						}
						else
						{
							return false;
						}
						
					}
					else
					{
						return false;
					}
					/* if(!(document.getElementById("mobileNumber").value).match(numbers))
					{
						alert("Phone number should be numeric");
						return false;
					}else if((document.getElementById("mobileNumber").value).length<10 || (document.getElementById("mobileNumber").value).length>10){
						alert("Mobile number should be 10 digit only ");
						return false;
						
					}else if((document.getElementById('email').value).match(at)){
							alert('Please choose dropdown for @domain');
							return false;
					}else if((document.getElementById('domain').value)==""){
						alert("Please select domain of email");
						document.getElementById('domain').focus();
						$("#domain").css("border-color","red");
						return false;
					}else{
						return true;
					} */
					//
					if(document.getElementById("mobileNumber").value != '') {
						if(!(document.getElementById("mobileNumber").value).match(numbers))
						{
							alert("Phone number should be numeric");
							return false;
						}else if((document.getElementById("mobileNumber").value).length<10 || (document.getElementById("mobileNumber").value).length>10){
							alert("Mobile number should be 10 digit only ");
							return false;
						}
					}
					/*
					if(document.getElementById('email').value != '') {
						if((document.getElementById('email').value).match(at)){
								alert('Please choose dropdown for @domain');
								return false;
						}else if((document.getElementById('domain').value)==""){
							alert("Please select domain of email");
							document.getElementById('domain').focus();
							$("#domain").css("border-color","red");
							return false;
						}
					} */
					return true;
				}
				else
				{
					return false;
				}
			}
        </script>
<script language="javascript">
		function ValidateNum(input,event){
			var keyCode = event.which ? event.which : event.keyCode;
			if(parseInt(keyCode)>=48 && parseInt(keyCode)<=57 || parseInt(keyCode) == 8)
            {
				return true;
			}
			if(parseInt(keyCode)==45)
            {
				return true;
			}
			return false;
		}
        </script>
</head>
<body>
<?php 
include('includes/header.php');
include ('includes/topnav.php');
if ($_SESSION ['role'] == 12) {
		$href = "cca-dashboard.php";
} else {
	$href = "dashboard.php";
} ?>
<h1><a href="<?php echo $href; ?>">Officer</a> &rsaquo; Edit Officer</h1>
	<div class="tabs-bttn">
		<table border="0" align="left" cellpadding="0" cellspacing="0">
		<tr>
				<td width="160" class="tabs-bttn-selectd">Personal Info</td>
				<td width="68" class="tabs-bttn-unselectd"><a 
					href="edit-postings.php?req_officer_id=<?php echo $_REQUEST ['id']; ?>">Postings</a></td>
				<td width="212" class="tabs-bttn-unselectd"><a
					href="edit-ecireport.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">ECI History</a></td>
				<td width="212" class="tabs-bttn-unselectd"><a
					href="edit-spouse.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Spouse</a></td>
				<td width="328" class="tabs-bttn-unselectd"><a
					href="edit-children.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Children</a></td>
				<td width="68" class="tabs-bttn-unselectd"><a
					href="edit-education.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Education</a></td>
				<td width="68" class="tabs-bttn-unselectd"><a
					href="edit-training.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Training</a></td>
				<td width="68" class="tabs-bttn-unselectd"><a
					href="edit-achievement.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Achievement</a></td>
				<td width="68" class="tabs-bttn-unselectd"><a
					href="edit-leave-record.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">Leaves</a></td>
				<td width="74" class="tabs-bttn-unselectd"><a href="edit-acr.php?req_officer_id=<?php echo $_REQUEST['id']; ?>">ACR</a></td>
				<td width="74" class="tabs-bttn-unselectd"><a
					href="edit-scrapbook.php?id=<?php echo $_REQUEST['id']; ?>">Scrapbook</a></td>
		</tr>
			<!--<tr>
				<td width="160" class="tabs-bttn-selectd">Personal Info</td>
				<td width="68" class="tabs-bttn-unselectd">Postings</td>
				<td width="212" class="tabs-bttn-unselectd">ECI History</td>
				<td width="212" class="tabs-bttn-unselectd">Spouse</td>
				<td width="328" class="tabs-bttn-unselectd">Children</td>
				<td width="68" class="tabs-bttn-unselectd">Education</td>
				<td width="68" class="tabs-bttn-unselectd">Training</td>
				<td width="68" class="tabs-bttn-unselectd">Achievement</td>
				<td width="68" class="tabs-bttn-unselectd">Leaves</td>
				<td width="74" class="tabs-bttn-unselectd">ACR</td>
				<td width="74" class="tabs-bttn-unselectd">Scrapbook</td>
			</tr>-->
		</table>
	</div>
	<span style="color:red;"><?php echo (isset($_SESSION['error'])) ? $_SESSION['error']:'';  unset($_SESSION['error']);?></span>
	<span style="color:red;"><?php echo (isset($_SESSION['mobile_error'])) ? $_SESSION['mobile_error']:'';  unset($_SESSION['mobile_error']);?></span>
	<span style="color:red;"><?php echo (isset($_SESSION['employeeError'])) ? $_SESSION['employeeError']:'';  unset($_SESSION['employeeError']);?></span>
	<form action="#" method="post" enctype="multipart/form-data" name="addofficerform" id="addofficerform" onSubmit="return validateaddofficerform(this)">
		<input type="hidden" name="actionType" value="continue" /> 
		<input type="hidden" name="id" value="<?php if(isset($_GET['id'])) echo $_GET['id']; else echo $tempOfficerVO->getId();?>" />
		<input type="hidden" name="oldseniority" value="<?php echo $tempOfficerVO->getSeniority()?>" />
		<table border="0" cellpadding="0" cellspacing="0" class="formtable-long">
			<tr>
				<td colspan="4" class="form-long-tbl"><strong>Civil Code: </strong><?php echo $tempOfficerVO->getCivilcode();?>, <strong>Name:
				</strong><?php echo $tempOfficerVO->getName();?> </td>
			</tr>
			<tr>
				<td height="4" colspan="4"></td>
			</tr>
			<tr>
				<td colspan="4" class="form-long-tbl-hd"><strong>Personal Information </strong></td>
			</tr>
<?php if ($seniorityerror == false) { ?>
            <tr>
				<td height="5" colspan="4"></td>
			</tr>
<?php } else { ?>
			<tr>
				<td height="10" colspan="4" style="color: #FF0000"><strong>Seniority already existing</strong></td>
			</tr>
<?php } ?>
            <tr>
				<td><strong>Civil Code:</strong></td>
				<td>
					<input name="civilCode" type="text" class="text-field" size="25" 
					onBlur="javascript:populateEditBatch(this.value,'<?php echo $tempOfficerVO->getCivilCode()?>')"
					value="<?php echo $tempOfficerVO->getCivilCode()?>" tabindex="1" readonly />
				</td>
				<td><strong>Employee Code:</strong></td>
				<td>
					<input name="employeeCode" type="text" class="text-field" size="25" value="<?php echo $tempOfficerVO->getEmployeeCode()?>" tabindex="2" />
				</td>
			</tr>
			<tr>
				<td height="5" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Name:</strong></td>
				<td width="250">
					<input name="name" type="text" class="text-field" size="25" value="<?php echo $tempOfficerVO->getName()?>" tabindex="3" />
				</td>
				<td><strong>Date of Birth:</strong></td>
				<link rel="stylesheet" href="css/ui.datepicker.css" type="text/css" media="screen" title="Flora (Default)" />
				<script src="js/ui.datepicker.js"></script>
				<td nowrap>
					<?php if (1 != 1) {  //($_SESSION ['role'] == 14) ?>
							<input name="dateOfBirth" type="hidden" id="dob" value="<?php echo getFormattedDate($tempOfficerVO->getDateOfBirth())?>" />
					<?php echo getFormattedDate ( $tempOfficerVO->getDateOfBirth () ); 
					} else { ?>
							<input name="dateOfBirth" type="text" class="text-field" size="25" id="dob" value="<?php echo getFormattedDate($tempOfficerVO->getDateOfBirth())?>" onChange="javascript:getRetirementDate(this.value)" tabindex="4" readonly /><br />
					<!--a href="javascript:getRetirementDate(document.addofficerform.dateOfBirth.value)">Calculate Retirement Date</a-->
					<?php
						}
					?>
				</td>
			</tr>
			<tr>
				<td height="5" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Retirement Date:</strong></td>
				<td colspan="3">
					<div id="retirement1">
						<input name="retirementDate" id="retiredate" type="text" class="text-field" size="25"
							value="<?php echo getFormattedDate($tempOfficerVO->getRetirementDate())?>"
							tabindex="13" readonly />
					</div>
				</td>
			</tr>
			<!-- changes by abhishek on 10 nov 2009 -->
			<tr>
				<td height="5" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Gender:</strong></td>
				<td>
					<?php
					echo Dropdown::getGenderList ( "list-menu", $tempOfficerVO->getGender (), '5' );
					?>
					</td>
				<td><strong>Batch:</strong></td>
				<td>
					<input name="hiddenbatch" type="text" class="text-field" value="" size="25" value="<?php echo $tempOfficerVO->getBatch()?>" disabled tabindex="6" />
				</td>
				<input name="batch" type="hidden" class="text-field" value="" size="25" value="<?php echo $tempOfficerVO->getBatch()?>" />
			</tr>
			<tr>
				<td height="5" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Domicile State:</strong></td>
				<td>
					<?php
						echo Dropdown::getOfficerStateList ( "list-menu", "domicileState", $tempOfficerVO->getDomicileState (), '7' );
					?>
                </td>
				<td><strong>Date of Joining IRS:</strong></td>
				<td><?php echo getFormattedDate($tempJoiningDate); ?>
					<input name="joiningDate" type="hidden" class="text-field" size="25" id="joiningdate" value="<?php  echo getFormattedDate($tempJoiningDate)?>" tabindex="8" readonly >
				</td>
			</tr>
			<tr>
				<td height="10" colspan="4"></td>
			</tr>

			<tr>
				<td><strong>Rank:</strong></td>
				<td>
					<?php
						echo Dropdown::getRankGradeList ( "list-menu", $tempOfficerVO->getRankid () );
					?>
                </td>
				<td><strong>Grade:</strong></td>
				<td>
					<div id='gradediv'>
						<?php
							echo Dropdown::getGradeList ( "list-menu", $tempOfficerVO->getGradeid (), '9' );
						?>
					</div>
				</td>
			</tr>
			<tr>
				<td height="10" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Seniority:</strong></td>
				<td>
					<input name="seniority" type="text" class="text-field" tabindex="10" value="<?php echo $tempOfficerVO->getSeniority()?>" size="4" maxlength="4" />
				</td>
				<td><strong>Post Code:</strong></td>
				<td><?php echo $tempPostid; ?></td>
			</tr>
			<tr>
				<td><strong>Add Profile Picture:</strong></td>
				<td colspan="2">
					<input name="userImage" type="file" class="inputFile" />
				</td>
				<td>
					<?php if(isset($tempOfficerVO)) { ?>
						<img src="<?php echo $tempOfficerDAO->getOfficer($tempOfficerVO->getId())->getProfilePic(); ?>" width="70" height="70" alt="" />
						<?php if($tempOfficerDAO->getOfficer($tempOfficerVO->getId())->getProfilePic() != "profilepic/no_photo.jpg") 
						{ ?>
							<a href="#" id="removepicture">Remove Profile Picture</a> <input type="hidden" name="profileoption" value="" />
			<?php 		} 
					}?>
				</td>
			</tr>
			<tr>
				<td colspan="2" height="10"></td>
			</tr>
			<tr>
				<td colspan="4" class="form-long-tbl-hd"><strong>Category/Community Information</strong></td>
			</tr>
			<tr>
				<td height="10" colspan="4"></td>
			</tr>
			<tr>
				<td><strong>Category:</strong></td>
				<td colspan="3">
					<div id='categorydiv'>
                        <?php
							echo Dropdown::getCategoryList ( "list-menu", $tempOfficerVO->getCategoryid (), '11' );
						?>
                    </div>
				</td>
			</tr>
			<tr>
				<td height="5" colspan="4"></td>
			</tr>
			<tr style="display: none" id="subcategoryid">
					<td><strong>PH Options :</strong></td>
					<td colspan="3">
						<?php
							echo Dropdown::getsubCategoryList ( "list-menu", $tempOfficerVO->getsubCategory () );
						?>
					</td>
			</tr>
			<tr>
				<td height="10" colspan="4"></td>
			</tr>
				<!-- chg by saurabh -->
			<tr>
				<td><strong>Are You From Minority Community:</strong></td>
				<td>
					<?php
						echo Dropdown::getMinorityList ( "list-menu", $tempOfficerVO->getMinority () );
					?>

				</td>
				<td><strong>Religion:</strong></td>
				<td>
				  <?php
						echo Dropdown::getReligionList ( "list-menu", $tempOfficerVO->getReligionid () );
					?>
				</td>
			</tr>
				<tr style="display: none" id="minorityremarkstd">
					<td><strong>Minority Remarks:</strong></td>
					<td colspan="3">
						<input type="text" name="minorityRemarks" class="text-field" size="25" id="minorityRemarks" maxlength="25" />
					</td>
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr>
					<td height="10" colspan="4" class="form-long-tbl-hd"><strong>Officer Status</strong></td>
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Status: </strong></td>
					<td colspan="3">
						<?php
							echo Dropdown::getStatusList ( "list-menu", $tempOfficerVO->getOfficerStatus (), '12' );
						?>
						<input type="hidden" id="lastPostingSts" name="lastPostingSts" value="<?php echo $lastPostingSts; ?>">
						<input type="hidden" id="lastPostingDel" name="lastPostingDel" value="0">
					</td>
					<!-- 
                                <td ><strong>Retirement Date:</strong></td>
                                <td>
                                    <div id="retirement1">
                                    <input name="retirementDate1" id="retiredate" type="text" class="text-field" size="25" value="<?php //echo getFormattedDate($tempOfficerVO->getRetirementDate())?>" tabindex="13"/>
                                    </div>
                                </td>
								 -->
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Profile Status:</strong></td>
					<td colspan="3">
						<?php
							echo Dropdown::getProfileStatusList ( "list-menu", $tempOfficerVO->getProfilestatus (), '13' );
						?>
                                </td>
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr id="exitTr" style="display: none">
					<td valign="top"><strong>Exit Date:</strong></td>
					<td valign="top">
						<input name="exitDate" id="exitdate" type="text" class="text-field" size="25"
						value="<?php echo getFormattedDate($tempOfficerVO->getExitDate())?>" tabindex="14" />
					</td>
					<td valign="top"><strong>Exit Remark:</strong></td>
					<td><textarea name="exitRemark" cols="30" class="text-area" id="exitRemark" rows="2"><?php echo $tempOfficerVO->getExitRemark()?></textarea></td>
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr id="demiseTr" style="display: none">
					<td width="150"><strong>Date of Demise</strong></td>
					<td colspan="3">
						<input name="demiseDate" id="demiseDate" type="text" class="text-field" size="25" value="<?php echo getFormattedDate($tempOfficerVO->getDemiseDate())?>" tabindex="16" />
					</td>
				</tr>
				<tr>
					<td height="5" colspan="4" class="form-long-tbl-hd"><strong>Residential Contact Information </strong></td>
				</tr>
				<tr>
					<td height="10" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Current Address:</strong></td>
					<td>
						<input name="currentAddress" type="text" class="text-field" size="25" value="<?php echo $tempOfficerVO->getCurrentAddress()?>" tabindex="17" />
						</td>
					<td><strong>Permanent Address:</strong></td>
					<td><input name="permanentAddress" type="text" class="text-field"
						size="25" value="<?php echo $tempOfficerVO->getPermanentAddress()?>" tabindex="23" />
					</td>
				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Current City:</strong></td>
					<td><input name="currentCity" type="text" class="text-field"
						size="25" value="<?php echo $tempOfficerVO->getCurrentCity()?>"
						tabindex="18" /></td>
					<td><strong>Permanent City:</strong></td>
					<td><input name="permanentCity" type="text" class="text-field" size="25" value="<?php echo $tempOfficerVO->getPermanentCity()?>" tabindex="24" /></td>
				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Current State:</strong></td>
					<td>
						<?php
						echo Dropdown::getOfficerStateList ( "list-menu", "currentState", $tempOfficerVO->getCurrentState (), '19' );
						?>
					</td>
					<td><strong>Permanent State:</strong></td>
					<td>
                                    <?php
									echo Dropdown::getOfficerStateList ( "list-menu", "permanentState", $tempOfficerVO->getPermanentState (), '25' );
									?>
					</td>
				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Current Postal Code:</strong></td>
					<td><input name="currentPostalCode" type="text" class="text-field"
						size="25"
						value="<?php echo $tempOfficerVO->getCurrentPostalCode()?>"
						tabindex="20" /></td>
					<td><strong>Permanent Postal Code:</strong></td>
					<td><input name="permanentPostalCode" type="text"
						class="text-field" size="25"
						value="<?php echo $tempOfficerVO->getPermanentPostalCode()?>"
						tabindex="26" /></td>

				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Phone No.:</strong></td>
					<td><input name="phoneNumberRes" type="text" class="text-field"
						size="25" value="<?php echo $tempOfficerVO->getPhoneNumberRes()?>"
						tabindex="21" onKeyPress="return ValidateNum(this,event)" /></td>
					<td><strong>Email:</strong></td>
					<td>
						<?php //$email_match = explode('@',$tempOfficerVO->getEmail());
						$email_match = $tempOfficerVO->getEmail();
						?>
				
					<!--input name="email_text" type="text" class="text-field" id="email" onKeyPress="return myKeyFunction(event)" style="float: left;width: 127px;" size="25" value="<?php echo $email_match[0];?>" tabindex="27" /-->
					<input name="email_text" type="text" class="text-field" id="email" onKeyPress="return myKeyFunction(event)"  size="25" value="<?php echo $email_match;?>" tabindex="27" />
					
				 <br/>
				<span style="color: red; font-size:11px;">Note: Email Address should be valid. The URL to reset password will be sent to this email.</span>
					</td>
				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>
				<tr>
					<td><strong>Mobile No.:</strong></td>
					<td colspan="3"><input name="mobileNumber" type="text" id="mobileNumber" onKeyPress="return ValidateNum(this,event)"
						class="text-field" size="25" value="<?php echo $tempOfficerVO->getMobileNumber()?>" tabindex="22" maxlength="10" />
					</td>

				</tr>
				<tr>
					<td height="5" colspan="4"></td>
				</tr>

				<tr>
					<td colspan="4"><a href="manage-officer.php?fromurl=backfromedit"><img
							src="gifs/cancel-button.gif" width="79" height="21" border="0"
							align="right" hspace="5" tabindex="30" /></a><a href="#"
						onClick="javascript:submitOfficerForm('continue','addofficerform');"><img
							src="gifs/save-continue-btn.png" height="21" border="0"
							align="right" tabindex="29" /></a><a href="#"
						onClick="javascript:submitOfficerForm('save','addofficerform');"><img
							src="gifs/save-button.gif" border="0" align="right" hspace="5"
							tabindex="28" /></a></td>
				</tr>
				<tr>
					<td height="15" colspan="4"></td>
				</tr>
		
		</table>
	</form>
  <?php include('includes/footer.php');?>
	<script type="text/javascript">
		toggleDateTr();
		populateEditBatch('<?php echo $tempOfficerVO->getCivilCode()?>','<?php echo $tempOfficerVO->getCivilCode()?>');
		otherReligion();
		phCategory();
		function myKeyFunction(data)
		{	
			var charr = data.which || data.keyCode;
			if(charr==64){
				//var value = $("#email").val();
				//alert("@ is not allowed");
				var res = value.split("@");
				var txt = value.replace(res[0]);
				$("#email").attr('readonly','readonly');
			}
		}
		$("#email").click(function(){
			$("#email").removeAttr('readonly');
		});
	</script>
</body>
</html>






officer -dao

<?php

class OfficerDAO {

    public function insertintotable() {
        if (isset($_SESSION ['officerVO'])) {
            $tempOfficerVO = unserialize($_SESSION ['officerVO']);
            $civilCode = $tempOfficerVO->getCivilCode();
            $employeeCode = $tempOfficerVO->getEmployeeCode();
            $name = $tempOfficerVO->getName();
            $dateOfBirth = getSQLDate($tempOfficerVO->getDateOfBirth());
            $gender = $tempOfficerVO->getGender();
            $batch = $tempOfficerVO->getBatch();
            $domicileState = $tempOfficerVO->getDomicileState();
            $joiningDate = getSQLDate($tempOfficerVO->getJoiningDate());
            $rankid = $tempOfficerVO->getRankid();
            $gradeid = $tempOfficerVO->getGradeid();
            $postcode = $tempOfficerVO->getPostcode();
            $appointmentDate = getSQLDate($tempOfficerVO->getAppointmentDate());
            $confirmationDate = getSQLDate($tempOfficerVO->getDateOfConfirmation());
            $seniority = $tempOfficerVO->getSeniority();
            $officerStatus = $tempOfficerVO->getOfficerStatus();
            $retirementDate = getSQLDate($tempOfficerVO->getRetirementDate());
            $exitDate = getSQLDate($tempOfficerVO->getRetirementDate());
            $demiseDate = getSQLDate($tempOfficerVO->getDemiseDate());
            $exitRemark = $tempOfficerVO->getExitRemark();
			$exitRemark = addslashes($exitRemark);
            $currentAddress = $tempOfficerVO->getCurrentAddress();
            $currentState = $tempOfficerVO->getCurrentState();
            $currentCity = $tempOfficerVO->getCurrentCity();
            $currentPostalCode = $tempOfficerVO->getCurrentPostalCode();
            $phoneNumberRes = $tempOfficerVO->getPhoneNumberRes();
            $mobileNumber = $tempOfficerVO->getMobileNumber();
            $permanentAddress = $tempOfficerVO->getPermanentAddress();
            $permanentState = $tempOfficerVO->getPermanentState();
            $permanentCity = $tempOfficerVO->getPermanentCity();
            $permanentPostalCode = $tempOfficerVO->getPermanentPostalCode();
            $email = $tempOfficerVO->getEmail();
            $profilestatus = $tempOfficerVO->getProfilestatus();
            $id = $tempOfficerVO->getId();
            $religionid = $tempOfficerVO->getReligionid();
            $categoryid = $tempOfficerVO->getCategoryid();

			$userId = $_SESSION['userId'] ;
            // chg by saurabh  , modifiedBy='$userId' $userId = $_SESSION['userId'] ;
            $subCategory = $tempOfficerVO->getsubCategory();
            $minorityid = $tempOfficerVO->getMinority();
            $minorityRemarks = $tempOfficerVO->getminorityRemarks();
            // chg ends
            $seniority = trim($_POST ['seniority']);

            if ($seniority != '') {
                $selectquery = "select * from officers where seniority>='$seniority' AND gradeid='$gradeid'";
                $selectresult = mysql_query($selectquery);
                if (mysql_num_rows($selectresult) > 0) {

                    while ($selectrow = mysql_fetch_array($selectresult)) {
                        $newseniority = $selectrow ['seniority'] + 1;
                        $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$userId' WHERE id='$selectrow[id]'";
                        mysql_query($updatepostquery);
                    }
                }
            } else {
                $seniority = 0;
            }

            $entry_exist = $this->same_civil_code($civilCode);

            if ($entry_exist != 0) {
                return $msg = "Civil code is already exist.";
            }
			if(!empty($_REQUEST['email_text'])) {
			$email = $tempOfficerVO->getEmail();
			$same_email = $this->same_email($email, $civilCode);
		} else
			$email = '';
		
           // $same_email = $this->same_email($email, $dummy = '');

            if ($same_email != 0) {
                return $msg = "Email should be unique.";
            }
			if(!empty($_REQUEST['mobileNumber'])) {
			$mobileNumber = $tempOfficerVO->getMobileNumber();
			$same_mobileNumber = $this->same_mobileNumber($mobileNumber, $civilCode);
		} else
			$mobileNumber = '';
		
           // $same_mobileNumber = $this->same_mobileNumber($mobileNumber, $dummy = '');
            if ($same_mobileNumber != 0) {
                return $msg = "Mobile number should be unique.";
            }

//            $same_employeeCode = $this->same_employeeCode($employeeCode, $dummy = '');
            $same_employeeCode = 0;
            if ($same_employeeCode != 0) {
                return $msg = "Employee code should be unique.";
            } else {
                $insertquery = "INSERT into officers(id,employeeCode,civilCode,name,batch,gender,currentAddress,currentCity,currentState,currentCountry,currentPostalCode,permanentAddress,permanentCity,permanentState,permanentCountry,permanentPostalCode,email,password,mobileNumber,phoneNumberRes,dateOfBirth,retirementDate,exitDate,exitRemark,reportingTo,joiningDate,appointmentDate, dateOfConfirmation, rankid,gradeid,domicileState,officerStatus,createdBy,createdOn,modifiedOn,isActive,demiseDate,seniority,profilestatus,religionid,categoryid,minority,minorityRemarks,subCategory)";
                $insertquery = $insertquery . " values('$id','$employeeCode','$civilCode','$name','$batch','$gender','$currentAddress','$currentCity','$currentState','$currentCountry','$currentPostalCode','$permanentAddress','$permanentCity','$permanentState','$permanentCountry','$permanentPostalCode','$email','','$mobileNumber','$phoneNumberRes','$dateOfBirth','$retirementDate','$exitDate','$exitRemark','','$joiningDate','$appointmentDate','$confirmationDate','$rankid','$gradeid','$domicileState','$officerStatus','$_SESSION[userId]',CURRENT_TIMESTAMP,'0000-00-00','1','$demiseDate','$seniority','$profilestatus','$religionid','$categoryid','$minorityid','$minorityRemarks','$subCategory')";
                //echo $insertquery;die();
                mysql_query($insertquery);
                // Insert into child tables
                $this->insertintochildtables($id, $civilCode);

                $usercheck = "select * from users where officerid='$id'";
                $userresult = mysql_query($usercheck);
                if (mysql_num_rows($userresult) == 0) {
                    // Generate password
                    $pass = createRandomPassword();
                    // insert the data in user table
                    // changed by Vandana on 30-Jan-2010 for paasing createdon and modifiedon to datetime for datasynch
                    $insertuserquery = "INSERT INTO users(officerid,roleid,username,password,createdBy,createdDate,isActive,orgpassword)";
                    $insertuserquery = $insertuserquery . " values('$id','11','$civilCode',md5('$pass'),'$_SESSION[userId]',now(),'1','$pass')";
                    mysql_query($insertuserquery); // Changes done by niraj.lal.rahi on 31-03-2017
                    /* if(mysql_query ( $insertuserquery )){
                      $insertadminlogquery = "INSERT INTO admin_approval_log(officerid,createdOn,createdBy,modifiedBy,modifiedOn)";
                      $insertadminlogquery = $insertadminlogquery." VALUES('$id',now(),'$_SESSION[userId]','$_SESSION[userId]',now())";
                      mysql_query ( $insertadminlogquery );
                      } */
                    $success = 'success';
                }
            }
        }
        return $success;
    }

    // added for adding records in eci_reports --by saurabh
    public function InsertEciFormatAResult($format, $officer_Approvedid, $year, $electionDutyType, $stateid, $constituency, $remarks) {
        $tempinsertQuery = "INSERT INTO eci_reports (officer_Approvedid,format,year,electionDutyType,stateid,constituency,remarks,createdBy,CreatedOn) values ('$officer_Approvedid','$format','$year','$electionDutyType','$stateid','$constituency','$remarks','$_SESSION[userId]',CURRENT_TIMESTAMP)";
        mysql_query($tempinsertQuery);
        // echo $tempinsertQuery;
    }

    public function InsertEciFormatBResult($format, $officer_Approvedid, $sparabilityPeriod, $NonSparabilityTypeList, $fulldetails) {
        $tempinsertQuery = "INSERT INTO eci_reports (officer_Approvedid,format,sparabilityPeriod,nonSparabilityReason,nonSparabilityDetail,createdBy,CreatedOn) values ('$officer_Approvedid','$format','$sparabilityPeriod','$NonSparabilityTypeList','$fulldetails','$_SESSION[userId]',CURRENT_TIMESTAMP)";
        mysql_query($tempinsertQuery);
        // echo $tempinsertQuery;
    }

    // ends
    // added by saurabh on 16/11/2009 for nomination report by saurabh
    public function InsertInEciReport($officer_Approvedid, $format, $year) {
        $tempinsertQuery = "INSERT INTO eci_reports (officer_Approvedid,format,year,createdBy,CreatedOn,isActive) values ('$officer_Approvedid','$format','$year','$_SESSION[userId]',CURRENT_TIMESTAMP,1)";
        mysql_query($tempinsertQuery);
        // echo $tempinsertQuery;
    }

    /*
     * for eci report format A
     */
    /*
     * added by saurabh for eci report search results    function --getEciFormatASearchResults()
     */

    public function InsertEciFormatAResults() {
        $ParamArray = $_SESSION ['ParamArray'];
        $format = $ParamArray ['format'];
        $id = $ParamArray ['$officerApprovedId'];
        $officerid = $ParamArray ['officerId'];
        $ecicode = $ParamArray ['eciCodeFormatA'];
        $year = $ParamArray ['year'];
        $stateid = $ParamArray ['stateid'];
        $constituency = $ParamArray ['constituency'];
        $electionDutyType = $ParamArray ['electionDutyType'];
        $remarks = $ParamArray ['remarks'];
        // echo $format." ".$id." ".$ecicode." ".$year." ".$stateid." ".$constituency." ".$electionDutyType." ".$remarks;
        $tempinsertQuery = "INSERT INTO officers_approved (id,officerid,ecicode,createdBy,CreatedOn,isActive ) values ('$id','$officerid','$ecicode','$_SESSION[userId]',CURRENT_TIMESTAMP,'1')";

        mysql_query($tempinsertQuery);
        $tempinsertQuery1 = "INSERT INTO eci_reports (officer_Approvedid ,format,year,electionDutyType,stateid,constituency,remarks,createdBy,CreatedOn) values ('$id','$format','$year','$electionDutyType','$stateid','$constituency','$remarks','$_SESSION[userId]',CURRENT_TIMESTAMP)";
        mysql_query($tempinsertQuery1);
    }

    /*
     * ends
     */
    /* public function InsertReportFormatA()
      {$ParamArray=$_SESSION['ParamArray'];
      $format=$ParamArray['format'];
      $id=$ParamArray['$officerApprovedId'];
      $officerid=$ParamArray['officerId'];
      $ecicode= $ParamArray['eciCodeFormatA'];
      $year=$ParamArray['year'];
      $stateid=$ParamArray['stateid'];
      $constituency=$ParamArray['constituency'];
      $electionDutyType=$ParamArray['electionDutyType'];
      $remarks=$ParamArray['remarks'];
      // echo $format."   ".$id."    ".$ecicode."   ".$year."   ".$stateid."    ".$constituency."  ".$electionDutyType."   ".$remarks;

      $tempinsertQuery ="INSERT INTO eci_reports (officer_Approvedid ,format,year,electionDutyType,stateid,constituency,remarks,createdBy,CreatedOn) values ('$id','$format','$year','$electionDutyType','$stateid','$constituency','$remarks','$_SESSION[userId]',CURRENT_TIMESTAMP)";

      mysql_query($tempinsertQuery);


      } */

    /*
     * ends
     */


    /*
     * added by saurabh for eci report search results function getEciFormatBSearchResults()
     */

    public function InsertEciFormatBResults() {
        $ParamArray = $_SESSION ['ParamArray'];
        $format = $ParamArray ['format'];

        $id = $ParamArray ['$officerApprovedId'];
        $officerId = $ParamArray ['officerId'];
        $ecicode = $ParamArray ['eciCodeFormatB'];
        // $year=$ParamArray['year'];
        $sparabilityPeriod = $ParamArray ['sparabilityPeriod'];
        $nonSparabilityReasons = $ParamArray ['nonSparabilityReasons'];
        $nonSparabilityDetails = $ParamArray ['nonSparabilityDetails'];
        // $remarks=$ParamArray['remarks'];
        // echo $format." ".$id." ".$ecicode." ".$nonSparabilityReasons." ".$sparabilityPeriod." ".$nonSparabilityDetails." ";
        $tempinsertQuery = "INSERT INTO officers_approved (id,officerid,ecicode,createdBy,CreatedOn) values ('$id','$officerId','$ecicode','$_SESSION[userId]',CURRENT_TIMESTAMP)";
        mysql_query($tempinsertQuery);
        // echo " ".$tempinsertQuery." ";
        $tempinsertQuery1 = "INSERT INTO eci_reports (officer_Approvedid,format,sparabilityPeriod,nonSparabilityReason,nonSparabilityDetail,createdBy,CreatedOn) values ('$id','$format','$sparabilityPeriod','$nonSparabilityReasons','$nonSparabilityDetails','$_SESSION[userId]',CURRENT_TIMESTAMP)";
        mysql_query($tempinsertQuery1);
        // echo " ".$tempinsertQuery1." ";
        // return //to reset the displayed value after operation
    }

    /*
     * check if officer exists in eci table
     */

    public function CheckOfficer($id) {
        $squery = "select * from officers_approved where officerid='$id'";
        $sresults = mysql_query($squery);
        $srow = mysql_fetch_array($sresults);

        if ($srow ['officerid'] != $id) {

            return '';
        } else {

            return $srow ['officerid'];
        }
    }

    /*
     * ends
     */
    /*
     * update eci_results in format A
     */

    public function UpdateEciFormatAResult() {
        $ParamArray = $_SESSION ['ParamArray'];
        $format = $ParamArray ['format'];
        $id = $ParamArray ['id'];
        $officerId = $ParamArray ['officerId'];
        $ecicode = $ParamArray ['eciCodeFormatA'];
        $year = $ParamArray ['year'];
        $stateid = $ParamArray ['stateid'];
        $constituency = $ParamArray ['constituency'];
        $electionDutyType = $ParamArray ['electionDutyType'];
        $remarks = $ParamArray ['remarks'];
        $updatequery = "update eci_reports set format='$format', modifiedBy='$_SESSION[userId]' ";
        /*
         * if($format!='') { $updatequery=$updatequery."format='$format' "; }
         */

        if ($year != '') {
            $updatequery = $updatequery . ",year='$year' ";
        }
        if ($stateid != '') {
            $updatequery = $updatequery . ",stateid='$stateid' ";
        }
        if ($constituency != '') {
            $updatequery = $updatequery . ",constituency='$constituency' ";
        }
        if ($electionDutyType != '') {
            $updatequery = $updatequery . ",electionDutyType='$electionDutyType' ";
        }
        if ($remarks != '') {
            $updatequery = $updatequery . ",remarks='$remarks' ";
        }
        $updatequery = $updatequery . "where id='$id' ";
        // echo $updatequery;
        mysql_query($updatequery);

        if ($ecicode != '') {
            $updatequery1 = "update officers_approved set ecicode='$ecicode', modifiedBy='$_SESSION[userId]' where officerid='$officerId'  ";
            mysql_query($updatequery1);
        }
    }

    /*
     * ends
     */

    /*
     * update in format B
     */

    public function UpdateEciFormatBResult() { // echo "updateEciFormatBResult()";
        $ParamArray = $_SESSION ['ParamArray'];
        $format = $ParamArray ['format'];
        $id = $ParamArray ['id'];
        $officerId = $ParamArray ['officerId'];
        $ecicode = $ParamArray ['eciCodeFormatB'];
        // $year=$ParamArray['year'];
        $sparabilityPeriod = $ParamArray ['sparabilityPeriod'];
        $nonSparabilityReasons = $ParamArray ['nonSparabilityReasons'];
        $nonSparabilityDetails = $ParamArray ['nonSparabilityDetails'];
        $updatequery = "update eci_reports set format='$format', modifiedBy='$_SESSION[userId]' ";
        /*
         * if($format!='') { $updatequery=$updatequery."format='$format' "; }
         */

        if ($sparabilityPeriod != '') {
            $updatequery = $updatequery . ",sparabilityPeriod='$sparabilityPeriod' ";
        }
        if ($nonSparabilityReasons != '') {
            $updatequery = $updatequery . ",nonSparabilityReason='$nonSparabilityReasons' ";
        }
        if ($nonSparabilityDetails != '') {
            $updatequery = $updatequery . ",nonSparabilityDetail='$nonSparabilityDetails' ";
        }
        $updatequery = $updatequery . "where id='$id' ";
        // echo $updatequery;
        mysql_query($updatequery);
        if ($ecicode != '') {
            $updatequery1 = "update officers_approved set ecicode='$ecicode' , modifiedBy='$_SESSION[userId]' where officerid='$officerId'  ";
            mysql_query($updatequery1);
        }
    }

    /*
     * eci edit results
     */


    /*
     * function to delete officer from eci table by saurabh
     */

    public function DeleteOfficer($delete) {
        $tempDeleteQuery = " delete from eci_reports where id='$delete'";
        // echo " ".$tempDeleteQuery;
        mysql_query($tempDeleteQuery);
    }

    /*
     * ends
     */

    public function getDomicileState($domicileId) {
        $squery = "select name from states s where s.id='$domicileId'";
        $sresults = mysql_query($squery);
        $srow = mysql_fetch_array($sresults);
        if ($srow ['name'] != "") {
            return $srow ['name'];
        } else {
            return "-";
        }
    }

    public function getECIDutyState($stateId) {
        $squery = "select name from states s where s.id='$stateId'";
        $sresults = mysql_query($squery);
        $srow = mysql_fetch_array($sresults);
        if ($srow ['name'] != "") {
            return $srow ['name'];
        } else {
            return "-";
        }
    }

    // added for reports eci on 16/11/2009 by saurabh
    public function EciEditResult() {
        if (isset($_SESSION ['eciOfficerCategoryEditResult'])) {
            unset($_SESSION ['eciOfficerCategoryEditResult']);
        }

        $tempSearchQuery = "select o.*,e.*,a.ecicode,a.officerid ,p.address as officeAddress,p.description as postname,p.extensionNo as officecontact,p.posttypeid as posttypeid,s.grouppost as offposting,s.address as offaddress,s.extensionNo as offextension from officers o right outer join officers_approved a on o.id=a.officerid left outer join stg_postings s on o.id=s.officerid left outer join posts p on s.postid=p.code left outer join eci_reports e on a.id=e.officer_Approvedid where s.isLastPosting=1 order by civilCode";
        // echo $tempSearchQuery;
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['eciOfficerCategoryEditResult'] = serialize($officerArray);

        return $officerArray;
    }

    // added by saurabh
    public function GetEciEditResult() {
        if (isset($_SESSION ['nominationEditResult'])) {
            unset($_SESSION ['nominationEditResult']);
        }
        // REMOVE hardcoding for year -make it $currentyear -kanika
        $tempSearchQuery = "select o.*,e.*,a.ecicode,a.officerid ,p.address as officeAddress,p.description as postname,p.extensionNo as officecontact,p.posttypeid as posttypeid,s.grouppost as offposting,s.address as offaddress,s.extensionNo as offextension from officers o right outer join officers_approved a on o.id=a.officerid left outer join stg_postings s on o.id=s.officerid left outer join posts p on s.postid=p.code left outer join eci_reports e on a.id=e.officer_Approvedid where s.isLastPosting=1  and e.year =(SELECT year(now())) order by civilCode";
        // echo $tempSearchQuery;
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['nominationEditResult'] = serialize($officerArray);

        return $officerArray;
    }

    public function EciFormatAResultSearch($id) {  // added for displaying data in view-io-profile
        $officerArray = array();
		$tempSearchQuery = "select e.*,s.name as currentState from eci_reports e left outer join states s on e.stateid=s.id where e.officer_Approvedid ='$id'";
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempECI_VO = new ECI_VO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempECI_VO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempECI_VO;
            // echo $tempOfficerVO->getId();
        }
        // $_SESSION['eciOfficerCategoryEditResult']=serialize($officerArray);

        return $officerArray;
    }

    // added by saurabh
    public function SearchEciFormatAResult($id) {
        // $ParamArray=$_SESSION['ParamArray'];
        // $format=$ParamArray['format'];
        // $id=$ParamArray['officerId'];
        // $ecicode= $ParamArray['eciCodeFormatA'];
        // $year=$ParamArray['year'];
        // $stateid=$ParamArray['stateid'];
        // $constituency=$ParamArray['constituency'];
        // $electionDutyType=$ParamArray['electionDutyType'];
        // $remarks=$ParamArray['remarks'];
        $tempSearchQuery = "select e.*,s.name as currentState,a.ecicode from eci_reports e left outer join states s on e.stateid=s.id left outer join officers_approved a on e.officer_Approvedid=a.id where e.officer_Approvedid ='$id'";
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        // $_SESSION['eciOfficerCategoryEditResult']=serialize($officerArray);

        return $officerArray;
    }

    public function DeleteEciFormatAResult($rowid) {
        $tempDeleteQuery = " delete from eci_reports where id='$rowid'";
        // echo " ".$tempDeleteQuery;
        mysql_query($tempDeleteQuery);
    }

    // added by saurabh
    public function UpdateEciAResults($rowid, $format_A, $year, $electionDutyType, $stateid, $constituency, $remarks) {
        $updatequery = "update eci_reports set format='$format_A',modifiedBy='$_SESSION[userId]'";

        if ($year != '') {
            $updatequery = $updatequery . ",year='$year' ";
        }
        if ($stateid != '') {
            $updatequery = $updatequery . ",stateid='$stateid' ";
        }
        if ($constituency != '') {
            $updatequery = $updatequery . ",constituency='$constituency' ";
        }
        if ($electionDutyType != '') {
            $updatequery = $updatequery . ",electionDutyType='$electionDutyType' ";
        }
        if ($remarks != '') {
            $updatequery = $updatequery . ",remarks='$remarks' ";
        }
        $updatequery = $updatequery . "where id='$rowid' ";
        // echo $updatequery;
        mysql_query($updatequery);
    }

    // added by saurabh
    public function UpdateEciBResults($rowid, $format_B, $sparabilityPeriod, $NonSparabilityTypeList, $fulldetails) {
        $updatequery = "update eci_reports set format='$format_B',modifiedBy='$_SESSION[userId]'";

        if ($sparabilityPeriod != '') {
            $updatequery = $updatequery . ",sparabilityPeriod ='$sparabilityPeriod' ";
        }
        if ($NonSparabilityTypeList != '') {
            $updatequery = $updatequery . ",nonSparabilityReason ='$NonSparabilityTypeList' ";
        }
        if ($fulldetails != '') {
            $updatequery = $updatequery . ",nonSparabilityDetail ='$fulldetails' ";
        }
        $updatequery = $updatequery . "where id='$rowid' ";
        // echo $updatequery;
        mysql_query($updatequery);
    }

    // added by saurabh
    public function UpdateEciCode($txtECICode, $officerid) {
        $updatequery = "update officers_approved set modifiedBy='$_SESSION[userId]'";

        if ($txtECICode != '') {
            $updatequery = $updatequery . ",ecicode='$txtECICode' ";
        }

        $updatequery = $updatequery . "where officerid='$officerid' ";
        // echo $updatequery;
        mysql_query($updatequery);
    }

    // added by saurabh
    public function InsertEciCode($officer_approvedid, $id, $txtECICode) { // echo $_SESSION[userId];
        $tempinsertQuery = "INSERT INTO officers_approved(id,officerid,ecicode,createdBy,CreatedOn,isActive) values ('$officer_approvedid','$id','$txtECICode','$_SESSION[userId]',CURRENT_TIMESTAMP,'1')";
        mysql_query($tempinsertQuery);

        // echo " ".$tempinsertQuery." ";
    }

    public function SearchCodeECI($officerid) {
        $tempsearchQuery = "select ecicode from officers_approved where officerid='$officerid'";

        $sresults = mysql_query($tempsearchQuery);
        $srow = mysql_fetch_array($sresults);

        if ($srow ['ecicode'] != "") {
            return $srow ['ecicode'];
        } else {
            return "";
        }
    }

    // added by saurabh
    public function GetOfficerId($officerid) {
        $tempsearchQuery = "select id from officers_approved where officerid='$officerid'";

        $sresults = mysql_query($tempsearchQuery);
        $srow = mysql_fetch_array($sresults);
        if ($srow ['id'] != "") {
            return $srow ['id'];
        } else {
            return "";
        }
    }

    // added by saurabh
    public function CountRecords() {
        $tempsearchQuery = "select count(*) as count from officers_approved ";

        $sresults = mysql_query($tempsearchQuery);
        $srow = mysql_fetch_array($sresults);
        if ($srow ['count'] != "") {
            return $srow ['count'];
        } else {
            return "";
        }
    }

    public function SearchOfficersApproved($officerid) {
        $tempsearchQuery = "select * from officers_approved where officerid='$officerid'";
        // echo $tempsearchQuery;
        $sresults = mysql_query($tempsearchQuery);
        $srow = mysql_fetch_array($sresults);
        if ($srow ['officerid'] != "") {
            return $srow ['officerid'];
        } else {
            return "";
        }
    }

    // added by saurabh
    public function GetEciEditResults() {
        if (isset($_SESSION ['nominationEditResults'])) {
            unset($_SESSION ['nominationEditResults']);
        }
        $profileValutParamArray = $_SESSION ['nominationParamArray'];
        $civilcode = $profileValutParamArray ['civilCode'];
        $format = $profileValutParamArray ['format'];
        $ecirankid = $profileValutParamArray ['ecirankid'];
        $FromBatchList = $profileValutParamArray ['fromBatchList'];
        $ToBatchList = $profileValutParamArray ['toBatchList'];
        $multipleregion = $profileValutParamArray ['multipleregion'];
        $t = 0;
        while ($t < count($multipleregion)) {
            $regionid = $regionid . $multipleregion [$t] . ',';
            ++$t;
        }
        $regionid = substr($regionid, 0, strlen($regionid) - 1);

        // echo $civilcode." "." ".$ecirankid." ".$FromBatchList." ".$ToBatchList." ".$multipleregion." ";
        $tempSearchQuery = "select o.*,e.*,a.ecicode,a.officerid,p.address as officeAddress,p.description as postname,p.extensionNo as officecontact,p.posttypeid as posttypeid,s.grouppost as offposting,s.address as offaddress,s.extensionNo as offextension from officers o right outer join officers_approved a on o.id=a.officerid left outer join stg_postings s on o.id=s.officerid left outer join posts p on p.code=s.postid right outer join eci_reports e on a.id =e.officer_Approvedid  where s.isLastPosting=1 and e.year =(SELECT year(now()))";
        // if($civilcode!=''|| ($format!='' || $format!='-1') || ($ecirankid !='' || $ecirankid !='-1') || ($FromBatchList!='' || $FromBatchList!='-1') || ($multipleregion!=''||$multipleregion!='-1'))
        // {
        // $tempSearchQuery= $tempSearchQuery." where ";

        if ($civilcode != '') {
            $tempSearchQuery = $tempSearchQuery . " and o.civilCode= '$civilcode' ";
        }
        if (($format != '-1') && ($format != '')) {
            $tempSearchQuery = $tempSearchQuery . " and e.format= '$format'";
        }
        if (($ecirankid != '-1') && ($ecirankid != '')) {
            $tempSearchQuery = $tempSearchQuery . " and o.rankid='$ecirankid'";
        }
        if (($FromBatchList != '-1') && ($FromBatchList != '')) {
            if (($ToBatchList != '-1') && ($ToBatchList != '')) {
                $tempSearchQuery = $tempSearchQuery . " and (o.batch between '$FromBatchList' and '$ToBatchList') ";
            } else {
                $tempSearchQuery = $tempSearchQuery . " and o.batch= '$FromBatchList'";
            }
        }
        if (($regionid != '') && ($regionid != '-1')) {
            $tempSearchQuery = $tempSearchQuery . " and s.region in ($regionid) ";
        }
        // }
        $tempSearchQuery = $tempSearchQuery . "order by civilCode";
        // echo $tempSearchQuery;
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['nominationEditResults'] = serialize($officerArray);
        // echo " ".$tempOfficerVO->getId()." this is officer's id ";
        return $officerArray;
    }

    /*
     * edit results ends
     */

    // added for eci reports on 16/11/2009 by saurabh
    public function EciEditResults() {
        if (isset($_SESSION ['eciOfficerCategoryEditResults'])) {
            unset($_SESSION ['eciOfficerCategoryEditResults']);
        }
        $profileValutParamArray = $_SESSION ['eciParamArray'];
        $civilcode = $profileValutParamArray ['civilCode'];
        $format = $profileValutParamArray ['format'];
        $ecirankid = $profileValutParamArray ['ecirankid'];
        $FromBatchList = $profileValutParamArray ['fromBatchList'];
        $ToBatchList = $profileValutParamArray ['toBatchList'];
        $multipleregion = $profileValutParamArray ['multipleregion'];
        $t = 0;
        while ($t < count($multipleregion)) {
            $regionid = $regionid . $multipleregion [$t] . ',';
            ++$t;
        }
        $regionid = substr($regionid, 0, strlen($regionid) - 1);

        // echo $civilcode." "." ".$ecirankid." ".$FromBatchList." ".$ToBatchList." ".$multipleregion." ";
        $tempSearchQuery = "select o.*,e.*,a.ecicode,a.officerid,p.address as officeAddress,p.description as postname,p.extensionNo as officecontact,p.posttypeid as posttypeid,s.grouppost as offposting,s.address as offaddress,s.extensionNo as offextension from officers o right outer join officers_approved a on o.id=a.officerid left outer join stg_postings s on o.id=s.officerid left outer join posts p on p.code=s.postid right outer join eci_reports e on a.id =e.officer_Approvedid  where s.isLastPosting=1 ";
        // if($civilcode!=''|| ($format!='' || $format!='-1') || ($ecirankid !='' || $ecirankid !='-1') || ($FromBatchList!='' || $FromBatchList!='-1') || ($multipleregion!=''||$multipleregion!='-1'))
        // {
        // $tempSearchQuery= $tempSearchQuery." where ";

        if ($civilcode != '') {
            $tempSearchQuery = $tempSearchQuery . " and o.civilCode= '$civilcode' ";
        }
        if (($format != '-1') && ($format != '')) {
            $tempSearchQuery = $tempSearchQuery . " and e.format= '$format'";
        }
        if (($ecirankid != '-1') && ($ecirankid != '')) {
            $tempSearchQuery = $tempSearchQuery . " and o.rankid='$ecirankid'";
        }
        if (($FromBatchList != '-1') && ($FromBatchList != '')) {
            if (($ToBatchList != '-1') && ($ToBatchList != '')) {
                $tempSearchQuery = $tempSearchQuery . " and (o.batch between '$FromBatchList' and '$ToBatchList') ";
            } else {
                $tempSearchQuery = $tempSearchQuery . " and o.batch= '$FromBatchList'";
            }
        }
        if (($regionid != '') && ($regionid != '-1')) {
            $tempSearchQuery = $tempSearchQuery . " and s.region in ($regionid) ";
        }
        // }
        $tempSearchQuery = $tempSearchQuery . "order by civilCode";
        // echo $tempSearchQuery;
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['eciOfficerCategoryEditResults'] = serialize($officerArray);
        // echo " ".$tempOfficerVO->getId()." this is officer's id ";
        return $officerArray;
    }

    /*
     * added by saurabh for eci report search results while sending search parameters 09/10/2009 function --getEciSearchResults()
     */

    public function GetEciSearchResults() {
        if (isset($_SESSION ['nominationSearchResults'])) {
            unset($_SESSION ['nominationSearchResults']);
        }
        $profileValutParamArray = $_SESSION ['nominationParamArray'];
        $civilcode = $profileValutParamArray ['civilCode'];
        $format = $profileValutParamArray ['format'];
        $ecirankid = $profileValutParamArray ['ecirankid'];
        $FromBatchList = $profileValutParamArray ['fromBatchList'];
        $ToBatchList = $profileValutParamArray ['toBatchList'];
        $multipleregion = $profileValutParamArray ['multipleregion'];
        $t = 0;
        while ($t < count($multipleregion)) {
            $regionid = $regionid . $multipleregion [$t] . ',';
            ++$t;
        }
        $regionid = substr($regionid, 0, strlen($regionid) - 1);

        // echo $civilcode." "." ".$ecirankid." ".$FromBatchList." ".$ToBatchList." ".$multipleregion." ";
        $tempSearchQuery = "select distinct o.*,e.*,p.address as officeAddress,p.description as postname,p.extensionNo as officecontact,p.posttypeid as posttypeid,s.grouppost as offposting,s.address as offaddress,s.extensionNo as offextension from officers o left outer join officers_approved a on o.id=a.officerid left outer join stg_postings s on o.id=s.officerid left outer join posts p on p.code=s.postid  left outer join eci_reports e on a.id=e.officer_Approvedid where s.isLastPosting=1 and o.id not in (select a.officerid from officers_approved a where a.id in (select e.officer_Approvedid from eci_reports e where e.year= (SELECT year(now())) ))";
        // if($civilcode!=''|| ($format!='' || $format!='-1') || ($ecirankid !='' || $ecirankid !='-1') || ($FromBatchList!='' || $FromBatchList!='-1') || ($multipleregion!=''||$multipleregion!='-1'))
        // {
        // $tempSearchQuery= $tempSearchQuery." where ";

        if ($civilcode != '') {
            $tempSearchQuery = $tempSearchQuery . " and o.civilCode= '$civilcode' ";
        }
        /*
         * if($format!='-1') { $tempSearchQuery=$tempSearchQuery." and e.format= ''"; ///$format }
         */
        if (($ecirankid != '-1') && ($ecirankid != '')) {
            $tempSearchQuery = $tempSearchQuery . " and o.rankid='$ecirankid'";
        }
        if (($FromBatchList != '-1') && ($FromBatchList != '')) {
            if (($ToBatchList != '-1') && ($ToBatchList != '')) {
                $tempSearchQuery = $tempSearchQuery . " and (o.batch between '$FromBatchList' and '$ToBatchList') ";
            } else {
                $tempSearchQuery = $tempSearchQuery . " and o.batch= '$FromBatchList'";
            }
        }
        if (($regionid != '') && ($regionid != '-1')) {
            $tempSearchQuery = $tempSearchQuery . " and s.region in ($regionid) ";
        }
        // }
        // commented by kanika
        // $tempSearchQuery=$tempSearchQuery." and o.id not in (select officerid from officers_approved)";
        // echo " ".$tempSearchQuery." ";
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['nominationSearchResults'] = serialize($officerArray);
        // echo " ".$tempOfficerVO->getId()." this is officer's id ";
        return $officerArray;
    }

    /*
     * ends
     */

    // added by saurabh 03-10-2009
    // updated by kanika on 2.6.2010 as the data was incorrect
    public function getminorityCommunitySearchResults() {

        // minority
        $tempSearchQuery5 = "select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where o.rankid = '1'  and o.officerstatus='5' and  o.minority = 'Yes'";
        $tempSearchQuery5 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '5' and o.officerstatus='5'  AND  o.minority = 'Yes'";
        $tempSearchQuery5 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '4' and o.officerstatus='5' AND  o.minority = 'Yes'";
        $tempSearchQuery5 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '3' and o.officerstatus='5'  AND  o.minority = 'Yes'";
        $tempSearchQuery5 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '8' and o.officerstatus='5'  AND  o.minority = 'Yes'";
        $tempSearchQuery5 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '9' and o.officerstatus='5'  AND  o.minority = 'Yes'";
        // non minority
        $tempSearchQuery6 = "select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left outer join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where  o.rankid = '1' and o.officerstatus='5'  and o.officerstatus='5'  and  o.minority = 'NO'";
        $tempSearchQuery6 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '5' and o.officerstatus='5'  AND  o.minority = 'NO'";
        $tempSearchQuery6 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '4'  and o.officerstatus='5' AND  o.minority = 'NO'";
        $tempSearchQuery6 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '3'  and o.officerstatus='5'  AND  o.minority = 'NO'";
        $tempSearchQuery6 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '8'  and o.officerstatus='5'  AND  o.minority = 'NO'";
        $tempSearchQuery6 .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '9'  and o.officerstatus='5'  AND  o.minority = 'NO'";

        $officerResults5 = mysql_query($tempSearchQuery5);
        $officerResults6 = mysql_query($tempSearchQuery6);
        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields5 = mysql_num_fields($officerResults5);
        $numfields6 = mysql_num_fields($officerResults6);
        // echo "result ".$officerArray." inside ".$officerResults;
        // Now we put the names of fields in a Array
        // echo $numfields;
        // general
        // minority
        for ($i = 0; $i < $numfields5; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults5, $i);
        }

        while ($row = mysql_fetch_object($officerResults5)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields5; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getRankid();
            // echo $tempOfficerVO->getId();
        }
        // non minority

        for ($i = 0; $i < $numfields6; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults6, $i);
        }

        while ($row = mysql_fetch_object($officerResults6)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields6; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getRankid();
            // echo $tempOfficerVO->getId();
        }

        $_SESSION ['officerminoritySearchResults'] = serialize($officerArray);
        // echo $_SESSION['officerSearchResults'];
        return $officerArray;
    }

    public function getcategoryid() {
        $tempSearchQuery = "select id from category";
        $officerResults = mysql_query($tempSearchQuery);
        $numfields = mysql_num_fields($officerResults);
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResults, $i);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['officercategorySearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // Modified by: Sonal Singhal
    // Modified on: 11-03-10
    // Changes: replace rightouterjoin with leftouter join for fetching exact data in stat cat/community report
    // Updated by kanika on 27.1.2010 as unneccesary joins of stg posting was there
    public function getsubcategorySearchResults() {
        $tempSearchQuery = "select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o
					left outer join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where  o.rankid = '1' and o.officerstatus='5' and o.subCategory ='Orthopedic:PH-OH' ";
        $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '5' and o.officerstatus='5' AND  o.subCategory = 'Orthopedic:PH-OH' ";
        $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o  
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '4' and o.officerstatus='5' AND  o.subCategory = 'Orthopedic:PH-OH' ";
        $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '3' and o.officerstatus='5' AND  o.subCategory = 'Orthopedic:PH-OH' ";
        $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '8' and o.officerstatus='5' AND  o.subCategory = 'Orthopedic:PH-OH' ";
        $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id','Orthopedic:PH-OH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '9' and o.officerstatus='5' AND  o.subCategory = 'Orthopedic:PH-OH' ";

        $tempSearchQuery1 = "select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o 
					 left outer join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where o.rankid = '1' and o.officerstatus='5' and o.subCategory ='Visually:PH-VH' ";
        $tempSearchQuery1 .= " UNION select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o 
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '5' and o.officerstatus='5' AND  o.subCategory = 'Visually:PH-VH' ";
        $tempSearchQuery1 .= " UNION select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '4' and o.officerstatus='5' AND  o.subCategory = 'Visually:PH-VH' ";
        $tempSearchQuery1 .= " UNION select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '3' and o.officerstatus='5' AND  o.subCategory = 'Visually:PH-VH' ";
        $tempSearchQuery1 .= " UNION select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '8' and o.officerstatus='5' AND  o.subCategory = 'Visually:PH-VH' ";
        $tempSearchQuery1 .= " UNION select r.name as 'rankid',count(*) as 'id','Visually:PH-VH' as 'subCategory' from officers o
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '9' and o.officerstatus='5' AND  o.subCategory = 'Visually:PH-VH' ";

        $tempSearchQuery2 = "select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					 left outer join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where o.rankid = '1' and o.officerstatus='5' and o.subCategory ='Hearing:PH-HH' ";
        $tempSearchQuery2 .= " UNION select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where  o.rankid = '5' and o.officerstatus='5' AND  o.subCategory = 'Hearing:PH-HH' ";
        $tempSearchQuery2 .= " UNION select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					 left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '4' and o.officerstatus='5' AND  o.subCategory = 'Hearing:PH-HH' ";
        $tempSearchQuery2 .= " UNION select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '3' and o.officerstatus='5' AND  o.subCategory = 'Hearing:PH-HH'";
        $tempSearchQuery2 .= " UNION select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '8' and o.officerstatus='5' AND  o.subCategory = 'Hearing:PH-HH'";
        $tempSearchQuery2 .= " UNION select r.name as 'rankid',count(*) as 'id','Hearing:PH-HH' as 'subCategory' from officers o 
					  left outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '9' and o.officerstatus='5' AND  o.subCategory = 'Hearing:PH-HH'";
        // echo $tempSearchQuery2;

        $officerResults = mysql_query($tempSearchQuery);
        $officerResults1 = mysql_query($tempSearchQuery1);
        $officerResults2 = mysql_query($tempSearchQuery2);
        $numfields = mysql_num_fields($officerResults);
        $numfields1 = mysql_num_fields($officerResults1);
        $numfields2 = mysql_num_fields($officerResults2);

        for ($j = 0; $j < $numfields; $j ++) {
            $fieldname [$j] = mysql_field_name($officerResults, $j);
        }

        while ($row = mysql_fetch_object($officerResults)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($k = 0; $k < $numfields; $k ++) {
                $tempOfficerVO->$fieldname [$k] = $row->$fieldname [$k];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getRankid();
            // echo $tempOfficerVO->getId();
        }
        for ($j = 0; $j < $numfields1; $j ++) {
            $fieldname [$j] = mysql_field_name($officerResults1, $j);
        }

        while ($row = mysql_fetch_object($officerResults1)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($k = 0; $k < $numfields1; $k ++) {
                $tempOfficerVO->$fieldname [$k] = $row->$fieldname [$k];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getRankid();
            // echo $tempOfficerVO->getId();
        }
        for ($j = 0; $j < $numfields2; $j ++) {
            $fieldname [$j] = mysql_field_name($officerResults2, $j);
        }

        while ($row = mysql_fetch_object($officerResults2)) {
            $tempOfficerVO = new OfficerVO ();

            // Finally we assign the new variables
            for ($k = 0; $k < $numfields2; $k ++) {
                $tempOfficerVO->$fieldname [$k] = $row->$fieldname [$k];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // echo $tempOfficerVO->getRankid();
            // echo $tempOfficerVO->getId();
        }
        $_SESSION ['officersubCategorySearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // updated by kanika on 2.6.2010 as the data was coming incorrect
    public function getCategoryCommunitySearchResults() {
        // $tempOfficerVO= new OfficerVO;
        $tempcategory = $this->getcategoryid();
        $list = unserialize($_SESSION ['officercategorySearchResults']);
        for ($i = 0; $i < count($list); $i ++) {
            $tempOfficerVO = $list [$i];
            $tempcat = $tempOfficerVO->getId();

            // general
            $tempSearchQuery = "select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer join ranks r on r.id=o.rankid where o.rankid = '1' and o.officerstatus='5' and o.categoryid =$tempcat";
            $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '5' and o.officerstatus='5' AND  o.categoryid = $tempcat";
            $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '4' and o.officerstatus='5' AND  o.categoryid = $tempcat";
            $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '3' and o.officerstatus='5'  AND  o.categoryid = $tempcat";
            $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '8' and o.officerstatus='5'  AND  o.categoryid = $tempcat";
            $tempSearchQuery .= " UNION select r.name as 'rankid',count(*) as 'id',c.name as 'categoryid' from officers o right outer join category c on c.id=o.categoryid right outer  join ranks r on r.id=o.rankid where o.rankid = '9' and o.officerstatus='5'  AND  o.categoryid = $tempcat";

            $officerResults [$i] = mysql_query($tempSearchQuery);
            // echo $tempSearchQuery;
            $numfields [$i] = mysql_num_fields($officerResults [$i]);

            for ($j = 0; $j < $numfields [$i]; $j ++) {
                $fieldname [$j] = mysql_field_name($officerResults [$i], $j);
            }

            while ($row = mysql_fetch_object($officerResults [$i])) {
                $tempOfficerVO = new OfficerVO ();

                // Finally we assign the new variables
                for ($k = 0; $k < $numfields [$i]; $k ++) {
                    $tempOfficerVO->$fieldname [$k] = $row->$fieldname [$k];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
                // echo $tempOfficerVO->getRankid();
                // echo $tempOfficerVO->getId();
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        // echo $_SESSION['officerSearchResults'];
        return $officerArray;
    }

    // ends
    // added by saurabh
    public function getRetiredCount() {
        $squery = "select * from officers o where o.civilCode like 'RE%'";
        $sresults = mysql_query($squery);

        $num_rows = mysql_num_rows($sresults);

        if ($num_rows != '') {
            return ($num_rows + 1);
        } else {
            return ($num_rows + 1);
        }
    }

    // ends
    // chg ends
    public function insertintotableretiredofficer() {
        if (isset($_SESSION ['officerVO'])) {
            $tempOfficerVO = unserialize($_SESSION ['officerVO']);
            $civilCode = $tempOfficerVO->getCivilCode();
            $name = $tempOfficerVO->getName();
            $dateOfBirth = getSQLDate($tempOfficerVO->getDateOfBirth());
            $gender = $tempOfficerVO->getGender();
            $domicileState = $tempOfficerVO->getDomicileState();
            $rankid = $tempOfficerVO->getRankid();
            $exitDate = getSQLDate($tempOfficerVO->getRetirementDate());
            $currentAddress = $tempOfficerVO->getCurrentAddress();
            $phoneNumberRes = $tempOfficerVO->getPhoneNumberRes();
            $fax = $tempOfficerVO->getFax();
            $mobileNumber = $tempOfficerVO->getMobileNumber();
            $permanentAddress = $tempOfficerVO->getPermanentAddress();
            $email = $tempOfficerVO->getEmail();
            $id = "MO" . $civilCode;
            // echo $id." this is id";
            // echo $civilCode." this is civilcode ";
            $othernumber = $tempOfficerVO->getOthernumber();
            $otheraddress = $tempOfficerVO->getOtheraddress();
            $batch = $tempOfficerVO->getBatch();
            if (empty($fax)) {
                $fax = 0;
            }
            $insertquery = "INSERT into officers(id,civilCode,name,gender,currentAddress,permanentAddress,email,password,mobileNumber,phoneNumberRes,dateOfBirth,exitDate,rankid,domicileState,createdBy,createdOn,modifiedBy,modifiedOn,isActive,fax,othernumber,otheraddress,batch)";
            $insertquery = $insertquery . " values('$id','$civilCode','$name','$gender','$currentAddress','$permanentAddress','$email','','$mobileNumber','$phoneNumberRes','$dateOfBirth','$exitDate','$rankid','$domicileState','$_SESSION[userId]',CURRENT_TIMESTAMP,'0','0000-00-00','1','$fax','$othernumber','$otheraddress','$batch')";

            mysql_query($insertquery) or die(mysql_error());

            // Insert into child tables
            $this->insertintochildtables($id, $civilCode);

            $usercheck = "select * from users where officerid='$id'";
            $userresult = mysql_query($usercheck);
            if (mysql_num_rows($userresult) == 0) {
                // Generate password
                $pass = createRandomPassword();
                // insert the data in user table
                // changed by Vandana on 30-Jan-2010 for paasing createdon and modifiedon to datetime for datasynch
                $insertuserquery = "INSERT INTO users(officerid,roleid,username,password,createdBy,createdDate,isActive,orgpassword)";
                $insertuserquery = $insertuserquery . " values('$id','11','$civilCode',md5('$pass'),'$_SESSION[userId]',now(),'1','$pass')";
                mysql_query($insertuserquery);
            }
        }
    }

    /**
     * This is an email account creation mail for a officer
     * It will take email,jobseekerid,authcode and name as the input
     */
    public function sentaccountpassword($email, $username, $password) {
        require_once ($_SERVER ['DOCUMENT_ROOT'] . '/config.php'); include (ROOTPATH . 'phpmailer/class.phpmailer.php');
        // Get the template name
        $templateName = AppBase::getEmailTemplatesPath() . 'password.html';

        $fileContents = file_get_contents($templateName);
        $fileContents = str_replace("{####username####}", $username, $fileContents);
        $fileContents = str_replace("{####password####}", $password, $fileContents);

        // Create url
        $tempUrl = AppBase::getHTTPRoot();
        $fileContents = str_replace("{####url####}", $tempUrl, $fileContents);

        $mail = new PHPMailer ();
        $mail->From = "vandana@rvsolutions.in";
        $mail->Subject = "New Officer Email";

        // echo $mail->Subject;
        $mail->FromName = "System Admin";

        $mail->Body = $fileContents;
        $mail->AltBody = $fileContents;
        if ($email != '') {
            $mail->AddAddress($email, $name);
        } else {
            $mail->AddAddress('heldesk@rvsolutions.in', $name);
        }

        $tempResult = $mail->Send();

        if (!$tempResult) {
            $mail->ClearAddresses();
            return false;
        } else {
            $mail->ClearAddresses();
            return true;
        }
    }

    /*
     * This function gets the search for a name
     */

    public function getSearchResultsConstant() {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];
        $constant = $searchOfficerParamArray ['constant'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        if ($constant == - 1) {
            $tempSearchQuery = "select officers.* from officers,users";
        } else {
            $tempSearchQuery = "select officers.* from officers,users,officerconstants";
        }
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $constant != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            $qstring = "(officers.name like '%$name%' OR officers.name LIKE '%$expname[$t]%'";
                        } elseif ($t == count($expname) - 1) {
                            $qstring .= " OR officers.name LIKE '%$expname[$t]%')";
                        } else {
                            $qstring .= " OR officers.name LIKE '%$expname[$t]%'";
                        }
                        $t ++;
                    }
                    $tempAppendStr = $qstring;
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($constant != '-1') {
                $tempAppendStr = "officerconstants.constantid ='$constant'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId";
            if ($constant != '-1') {
                $tempSearchQuery .= " and officerconstants.officerid=officers.id";
            }
            $tempSearchQuery .= " order by officers.civilCode";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId";
            if ($constant != '-1') {
                $tempSearchQuery .= " and officerconstants.officerid=officers.id";
            }
            $tempSearchQuery .= " order by officers.civilCode";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the search for a name
     */

    public function getSearchResults() {
        // updated by kanika on 9.11.09 with status rpt changes
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $flagid = $searchOfficerParamArray ['flagid'];
        if ($flagid != - 1) {
           /* $tempSearchQuery = "SELECT officers.*,officerflags.flagid as flag 
                                FROM officers
                                CROSS JOIN officerflags on  officerflags.officerid = officers.id
                                LEFT JOIN stg_postings s on officers.id=s.officerid
                                LEFT JOIN posts ps on ps.code=s.postid"; */
			/////added to rectify query for assign flag		--09-02-2018								
			 $tempSearchQuery = "SELECT officers.*,officerflags.flagid as flag 
                                FROM officers
                                JOIN officerflags on  officerflags.officerid = officers.id";
        } else {
            $tempSearchQuery = "select distinct officers.* from officers 
			LEFT OUTER JOIN users ON officers.id=users.officerId 
			LEFT JOIN stg_postings s on officers.id=s.officerid 
			LEFT JOIN posts ps on ps.code=s.postid ";
        }
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') { // echo $civilCode." civil code ";
                $tempAppendStr = "officers.civilCode = '$civilCode'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
                // echo $tempSubQuery." this is query ";
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%' AND officers.name!='$name'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring = "(officers.name LIKE '%$newname%'";
                            }
                        } elseif ($t == count($expname) - 1) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%')";
                            }
                        } else {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%'";
                            }
                        }
                        $t ++;
                    }
                    $tempAppendStr = $qstring;
                    $tempAppendStr .= " AND officers.name!='$name'";
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
				///changes done to make results equal in profile vault and manage officer
               // $tempAppendStr = " officers.rankid = '$rankid' AND s.isLastPosting=1 and ps.posttypeid in (2,17,3,18,16,23) ";
				$tempAppendStr = " officers.rankid = '$rankid'";

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                if ($officerStatus == 0) {
                    $tempAppendStr = "(officers.officerStatus ='$officerStatus' OR officers.officerStatus is NULL) ";
                } else {
                    $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                }
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($flagid != '-1') {
                $tempAppendStr = "officerflags.flagid = '$flagid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }

        if ($tempSubQuery != "") {
            if ($flagid != '-1') {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  AND officerflags.isActive=1 AND officers.id=officerflags.officerid order by officers.civilCode";
            } else {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
            }
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
        }
//        echo $tempSearchQuery;die;
        $_SESSION ['searchQuery'] = $tempSearchQuery;

        $officerResult = mysql_query($tempSearchQuery) or die(mysql_error());

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCity());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == 6) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 180) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 9) {
                        if ($tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 355) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 14) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 7) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 180 or $tempPostingVO->getCity() == 355) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 15) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        //echo count($officerArray); die;
        //echo"<pre>";
        //print_r($officerArray); die; 
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the search for a name
     */

    public function getSearchResultsFlagName() {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $flagid = $searchOfficerParamArray ['flagid'];
        if ($flagid != - 1) {
            $tempSearchQuery = "select officers.*,officerflags.flagid as flag from officers,users,officerflags";
        } else {
            $tempSearchQuery = "select officers.* from officers,users";
        }

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $tempAppendStr = "officers.name='$name'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($flagid != '-1') {
                $tempAppendStr = "officerflags.flagid = '$flagid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            if ($flagid != '-1') {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId AND officers.id=officerflags.officerid order by officers.civilCode";
            } else {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId order by officers.name";
            }
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId order by officers.name";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // chg by saurabh
    // changes made by Sonal on 08-03-10 in getSearch_Results function for proper result of category/community report
    public function getSearch_Results() { // echo "inside get results";
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        // $name = $searchOfficerParamArray['name'];
        $rankid = $searchOfficerParamArray ['rankid'];

        $grade = $searchOfficerParamArray ['grade'];
        $categoryid = $searchOfficerParamArray ['categoryid'];
        // $domicileState=$searchOfficerParamArray['domicileState'];
        $minorityid = $searchOfficerParamArray ['minorityid'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $pending = $searchOfficerParamArray ['pending'];

        /*
         * Changed by Pulkit to implement IslastPostin on Relieved As on 12th-Nov-09 2 Cases added in Firet part of Query and rest Query changes Added in all if and else...
         */

        if ($pending == '-1') {
            // echo $civilCode;
            // $tempSearchQuery= "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,s.regionname,s.cityname,s.postdescription as postdescription,o.minority as minorityid from officers o left outer join stg_postings s on o.id=s.officerid left outer join category c on c.id=o.categoryid where s.isLastPosting=1";
            $tempSearchQuery = "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,
						    case when (select count(postingId) from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED') > 0 
						    then (select newRegionName from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED' limit 1) 
						    else s.regionname end as regionname,
						s.cityname,s.postdescription,o.minority as minorityid 
						 from officers o   left outer join stg_postings s on o.id = s.officerid and
						   isLastPosting = 1
                           left outer join category c on c.id = o.categoryid where 1=1 ";
        } elseif ($pending == 'Pending Minority') {
            // $tempSearchQuery= "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,s.regionname,s.cityname,s.postdescription as postdescription,o.minority as minorityid from officers o left outer join stg_postings s on o.id=s.officerid left outer join category c on c.id=o.categoryid where s.isLastPosting=1 and (o.minority is null or o.minority='-1')";
            $tempSearchQuery = "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,
						    case when (select count(postingId) from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED') > 0 
						    then (select newRegionName from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED' limit 1) 
						    else s.regionname end as regionname,
						s.cityname,s.postdescription,o.minority as minorityid
						 from officers o left outer join stg_postings s on o.id = s.officerid and
						   isLastPosting = 1
                           left outer join category c on c.id = o.categoryid where (o.minority is null or o.minority='-1')  ";
        } else {
            // $tempSearchQuery= "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,s.regionname,s.cityname,s.postdescription as postdescription,o.minority as minorityid from officers o left outer join stg_postings s on o.id=s.officerid left outer join category c on c.id=o.categoryid where s.isLastPosting=1 and (o.categoryid='-1' or o.categoryid is null )";
            $tempSearchQuery = "select distinct o.id,o.civilCode,o.Name as name,s.rankname as rankid,c.name as categoryid,
						    case when (select count(postingId) from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED') > 0 
						    then (select newRegionName from transfer_order_officer_view where officer_id = o.id and status ='RELIEVED' limit 1) 
						    else s.regionname end as regionname,
						s.cityname,s.postdescription,o.minority as minorityid
						from officers o left outer join stg_postings s on o.id = s.officerid and
						   isLastPosting = 1
                           left outer join category c on c.id = o.categoryid where (o.categoryid is null or o.categoryid='-1') ";
        }
        // echo "category id".$categoryid." category";
        // Check for where clause
        if ($civilCode != '' || $categoryid != '' || $minorityid != '' || $rankid != '-1' || $region != '-1' || $grade != '-1') {
            // $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                // echo "inside get results";
                $tempAppendStr = "  and o.civilCode='$civilCode'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
                // /$tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            // echo "category id".$categoryid." category";
            if ($categoryid != '-1') {
                // echo "inside get results";
                $tempAppendStr = " and o.categoryid = '$categoryid'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
                // $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($minorityid != '-1') {
                // echo "inside get results";
                $tempAppendStr = " and o.minority ='$minorityid'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
                // $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                // echo "inside get results";
                $tempAppendStr = " and o.rankid = '$rankid'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
                // $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($region != '-1' && $region != '') {
                // echo "inside get results";
                $tempAppendStr = " and s.region ='$region'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = " and o.gradeid = '$grade'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
            }
            if (($officerStatus != '-1') && ($officerStatus != '')) {
                $tempAppendStr = " and o.officerStatus= '$officerStatus'";
                $tempSearchQuery = $tempSearchQuery . $tempAppendStr;
            }
            $tempSearchQuery = $tempSearchQuery . " order by o.batch";
        }
        // echo " query ends ";

        $_SESSION ['searchQuery'] = $tempSearchQuery;
        // echo $tempSearchQuery; die;
        $officerResult = mysql_query($tempSearchQuery);
        // echo $officerResult;
        // echo "query ends";
        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);
        // echo $numfields;
        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
            // echo $fieldname[$i]." ";
        }
        // echo $fieldname[$i];
        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            /*
             * if($region==-1) {
             */
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                if ($fieldname [$i] == 'minorityid') {
                    // echo "minorityid value ".$tempOfficerVO->$fieldname[$i]."doon";
                }
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
            // }
            /*
             * else { echo "outside" ; //$tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id); // $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCity()); //$expcity = explode("|",$tempCityValue); if($expcity[0]!="" OR $expcity[0]!=0) { if($region==6) { if($tempPostingVO->getCity()==152 OR $tempPostingVO->getCity()==180) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } elseif($region==$tempPostingVO->getRegion()) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } elseif($region==9) { if($tempPostingVO->getCity()==163 OR $tempPostingVO->getCity()==355) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } elseif($region==$tempPostingVO->getRegion()) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } elseif($region==14) { if($tempPostingVO->getCity()==234 OR $tempPostingVO->getCity()==480) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } elseif($region==$tempPostingVO->getRegion()) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } elseif($region==7) { if($tempPostingVO->getCity()==152 OR $tempPostingVO->getCity()==163 OR $tempPostingVO->getCity()==180 OR $tempPostingVO->getCity()==355) { } elseif($region==$tempPostingVO->getRegion()) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } elseif($region==15) { if($tempPostingVO->getCity()==234 OR $tempPostingVO->getCity()==480) { } elseif($region==$tempPostingVO->getRegion()) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } elseif($region==$expcity[0]) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } } }
             */
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // changes ends
    /*
     * This function gets the search for a name
     */
    public function getSearchResultsName() {
        $officerArray = array();
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $tempSearchQuery = "select officers.* from officers,users";

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "officers.civilCode = '$civilCode'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $tempAppendStr = "officers.name LIKE'%$name%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId order by officers.name";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId order by officers.name";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        // echo $tempSearchQuery;

        $officerResult = mysql_query($tempSearchQuery);

        $officerArray = array();

        $numfields = mysql_num_fields($officerResult);

        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
//        echo "<pre>"; print_r($fieldname); die; 

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();

            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCity());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == 6) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 180) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 9) {
                        if ($tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 355) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 14) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 7) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 180 or $tempPostingVO->getCity() == 355) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 15) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function results for Dynamic Report
     */

    public function getDynamicSearchResults() {
        $officerArray = array();
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
		$selectStr = $totalStayDuration = '';
        // echo "<pre>"; print_r($searchOfficerParamArray); die;
        $params_list = $_SESSION['dispparams_list'];
        $civilCode = $searchOfficerParamArray ['civilCode'];  //mysql_real_escape_string(
        $name = mysql_real_escape_string($searchOfficerParamArray ['name']);
        $batch = mysql_real_escape_string($searchOfficerParamArray ['batch']);
        $rankid = mysql_real_escape_string($searchOfficerParamArray ['rankid']);
        $grade = mysql_real_escape_string($searchOfficerParamArray ['grade']);
        $region = mysql_real_escape_string($searchOfficerParamArray ['region']);
        $station = mysql_real_escape_string($searchOfficerParamArray ['station']);
       
       
		if(isset($searchOfficerParamArray ['searchparam'])){
			  $searchparam = mysql_real_escape_string($searchOfficerParamArray['searchparam']);
			  $otherRegion = mysql_real_escape_string($searchOfficerParamArray ['otherRegion']);
              $otherStation = mysql_real_escape_string($searchOfficerParamArray ['otherStation']);
			  $contStayOption = (isset($searchOfficerParamArray ['contStayOption'])?$searchOfficerParamArray ['contStayOption']:'');
              $contStayDuration = (isset($searchOfficerParamArray ['contStayDuration'])?$searchOfficerParamArray ['contStayDuration']:'');
			  if($searchOfficerParamArray ['searchparam'] == 'total_stay'){ 
					$totalStayDuration = $searchOfficerParamArray ['searchparam'];
				} else {
					$totalStayDuration = '';
				} 
		}
        
        $dispparams = $searchOfficerParamArray ['dispparams'];        
		$ddlSort = (isset($searchOfficerParamArray['ddlSort'])?$searchOfficerParamArray['ddlSort']:'');
		
        $course = mysql_real_escape_string($searchOfficerParamArray ['qualification_id']);
        $officerStatus = mysql_real_escape_string($searchOfficerParamArray ['officerStatus']);
        foreach ($dispparams as $value) {
            $key = array_search($value, $params_list);
            if ($key) {
                $headingArr[] = $key;
            }
        }
        ////////////if "all" exists in heading unset it 
        if (in_array("all", $dispparams)) {
            unset($dispparams[0]);
        }
        $selectStr .= implode(",", $dispparams);
		
        if (in_array("latest_order", $dispparams)) {
            $selectStr = str_replace(",latest_order", "", $selectStr);
            $selectStr .= " , concat(seq_no,'/',year,'/',dept) order_no ";
        }
        if (in_array("duration", $dispparams)) {
            $selectStr = str_replace(",duration", "", $selectStr);
        }
        $_SESSION ['headingArr'] = $headingArr;

        /*if ($searchparam == "total_stay") {
            $selectStr .= ", SUM(DATEDIFF(`toDate`, `fromDate`)) as totalStayDuration";
        } 
		deleted from query AND postings.isActive=1  AND  postings.`isLastposting` in (1) 
		*/
		
        $tempSearchQuery = "SELECT $selectStr ,postings.officerid, posts.regionid,`postings`.`station`                       
							 FROM officers 
							 LEFT JOIN `postings` ON officers.id=`postings`.`officerid` 
							 LEFT JOIN `posts` on `postings`.`postid`=posts.code
							 LEFT JOIN `posttypes` on `posts`.`posttypeid`=posttypes.id
							 LEFT JOIN `cities` on `postings`.`station`=`cities`.id
							 LEFT JOIN `regions`  ON `cities`.`regionid` = `regions`.`id`
							 LEFT JOIN `category` on `officers`.`categoryid`=`category`.id
							 LEFT JOIN `educations` on `officers`.`id`=`educations`.`officerid` 
							 LEFT JOIN `ranks` on `officers`.`rankid`=`ranks`.`id` 
							 LEFT JOIN `grades` on `officers`.`gradeid`=`grades`.`id` 
							 LEFT JOIN `states` on `officers`.`domicileState`=`states`.`id` 
							 LEFT JOIN `status` on `officers`.`officerStatus`=`status`.`id` 
							 LEFT JOIN `religion` on `officers`.`religionid`=`religion`.`id` 
							 LEFT JOIN `qualifications` on `qualifications`.id=`educations`.`new_courseid` 
							 LEFT JOIN `transfer_order_officer` on `officers`.`id`=`transfer_order_officer`.`officer_id` 
							 LEFT JOIN `transfer_orders` on `transfer_orders`.`id`=`transfer_order_officer`.`order_id` 
							WHERE 1=1 ";
        
		// Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1' || $station != '-1' || $course != '-1') {

            /*if ($civilCode != '') {
                $tempSearchQuery .= " AND `officers`.`civilCode` = '$civilCode'";
            } 
			if (count($civil_arr) != 1) {

            $temp_arr = array();

            foreach ($civil_arr as $val) {

                $temp_arr[] = trim($val);
            }

            $civil = implode("','", $temp_arr);

            $cond .= " AND civilCode IN ('" . $civil . "') ";
        } else {

            $cond .= " AND civilCode = '" . trim($civil_arr[0]) . "'";
        }	*/
			if ($civilCode != '') {
							
			$temp_civil_codes = explode( ',', $civilCode);
			if (count($civil_arr) != 1) {
			$temp_arr = array ();
			
				foreach ( $temp_civil_codes as $val ) {
					$temp_arr [] = trim($val);
				}
			$civils = implode ( "','", $temp_arr );
			$tempSearchQuery .= " AND `officers`.`civilCode` IN ('" . $civils . "') ";
			
		    }  else {
               $tempSearchQuery .= " AND `officers`.`civilCode` = '" . trim($temp_civil_codes[0]) . "'";
				}
			}
			
            if ($name != '') {
                $tempSearchQuery .= " AND `officers`.`name`  LIKE '%$name%'";
            }
            if ($batch != '') {
                $tempSearchQuery .= " AND `officers`.`batch` = '$batch'";
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempSearchQuery .= " AND `officers`.`rankid` = '$rankid'";
            }
            if ($grade != '-1' && $grade != '') {
                $tempSearchQuery .= " AND `officers`.`gradeid` = '$grade'";
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempSearchQuery .= " AND `officers`.`officerStatus` ='$officerStatus'";
            }

            /*if ($state != '-1' && $state != '') {
                $tempSearchQuery .= " AND `officers`.`currentState` ='$state'";
            } */

            if ($region != '-1') {  ////data for current region 
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$region' AND  postings.`isLastposting` in (1) ";
            }
            if ($station != '-1') {
                $tempSearchQuery .= " AND `postings`.`station` = '$station' AND  postings.`isLastposting` in (1) ";
            }
            if ($otherRegion != '-1') {
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$otherRegion' ";
				//AND `postings`.`isLastposting` in (0)
                //$tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($otherStation != '-1' && $otherStation != '') {
                $tempSearchQuery .= " AND `postings`.`station` = '$otherStation' "; // AND `postings`.`isLastposting` in (0)
//                $tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($course != '-1' && $course != '') {
                $tempSearchQuery .= " AND `educations`.`new_courseid` ='$course'";
            }
            /*if ($totalStayDuration != '') {
                $days1 = 365 * $totalStayDuration;
                $tempSearchQuery .= " AND dateDiff >= $days1";
            }*/
		}
		$tempSearchQuery .= " GROUP BY officers.id";
		if ($ddlSort != '') {
                if ($ddlSort == 1){
					$tempSearchQuery .= " ORDER BY `officers`.name";
				} else if($ddlSort == 2){
					$tempSearchQuery .= " ORDER BY `officers`.`civilCode`";
				}else if($ddlSort == 3){
					$tempSearchQuery .= " ORDER BY `officers`.`batch`";
				}
            }
        //echo $tempSearchQuery;
        //die;

        $officerResult = mysql_query($tempSearchQuery);
        $returnArr = array();
        while ($row = mysql_fetch_array($officerResult)) {
            if ($row['Gender'] == -1) {
                $row['Gender'] = "-";
            }
			if ($row['DomicileState'] == -1 || $row['DomicileState'] == null ) {
                $row['DomicileState'] = "-";
            }
            $returnArr[] = $row;
        }
        $_SESSION ['officerDynamicSearchResults'] = $returnArr;
        return $returnArr;
    }
	
	////Added by ???
	////////////////All Postings
    public function getAllOfficersPostingDetails() {
		
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
		$searchOfficerParamArray ['state'] = (isset($searchOfficerParamArray ['state'])? $searchOfficerParamArray ['state']:'');
        $civilCode = mysql_real_escape_string($searchOfficerParamArray ['civilCode']);
        $name = mysql_real_escape_string($searchOfficerParamArray ['name']);
        $batch = mysql_real_escape_string($searchOfficerParamArray ['batch']);
        $rankid = mysql_real_escape_string($searchOfficerParamArray ['rankid']);
        $grade = mysql_real_escape_string($searchOfficerParamArray ['grade']);
        $state = mysql_real_escape_string($searchOfficerParamArray ['state']);
        $region = mysql_real_escape_string($searchOfficerParamArray ['region']);
        $station = mysql_real_escape_string($searchOfficerParamArray ['station']);
        $otherRegion = mysql_real_escape_string($searchOfficerParamArray ['otherRegion']);
        $otherStation = mysql_real_escape_string($searchOfficerParamArray ['otherStation']);
//        $dispparams = $searchOfficerParamArray ['dispparams'];
//        $searchparam = $searchOfficerParamArray ['searchparam'];// $searchparam = $searchOfficerParamArray ['searchparam'];
//        $course = mysql_real_escape_string($searchOfficerParamArray ['qualification_id']);
        $officerStatus = mysql_real_escape_string($searchOfficerParamArray ['officerStatus']);

        $tempSearchQuery = "SELECT `postings`.`id`, `postings`.`officerid`,`po`.`posttypeid` ,  
		( CASE WHEN(`pt`.`tobetreatedas` = -(1)) THEN 'NC' ELSE `pt`.`grouppost` END ) AS `grouppost`,  `postings`.`postid` , `postings`.`station` as city, `postings`.`fromDate`, `postings`.`toDate`, 
                        `postings`.`postingType`, `postings`.`gradeid`, `postings`.`isLastPosting`   , po.regionid  ,
                    (CASE
                            WHEN
                                (`postings`.`islastposting` = 1)
                            THEN
                                GETCURRENTDATEDIFF(`postings`.`toDate`,
                                        `postings`.`fromDate`,
                                        `postings`.`officerid`,
                                        `postings`.`islastposting`)
                            ELSE GETCOMMONDATEDIFF(`postings`.`toDate`, `postings`.`fromDate`)
                        END) AS `dateDiff`,
                        (CASE
                            WHEN
                                (`postings`.`islastposting` = 1)
                            THEN
                                GETPOLICYDATEDIFF(`postings`.`toDate`,
                                        `postings`.`fromDate`,
                                        `postings`.`officerid`,
                                        `postings`.`islastposting`)
                            ELSE GETCOMMONDATEDIFF(`postings`.`toDate`, `postings`.`fromDate`)
                        END) AS `policydatediff`,
                         GETFIXEDPOLICYDATEDIFF(`postings`.`toDate`,
                                `postings`.`fromDate`,
                                `postings`.`officerid`,
                                `postings`.`islastposting`) AS `policyDayTotal`, regions.name as regionname ,regions.id as region,po.description as postdescription,po.code as sequence
                        FROM `postings` 
                       INNER JOIN `posts` po ON po.code=postings.postid 
                       INNER JOIN `officers` `of` on `of`.`id` = `postings`.`officerid`
                       INNER JOIN `cities` `c` on `postings`.`station` = `c`.`id`
					   INNER join regions on c.regionid = regions.id
					   LEFT JOIN `posttypes` `pt` on `po`.`posttypeid` = `pt`.`id`
                       WHERE `postings`.`isActive` = 1";

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1' || $station != '-1' || $course != '-1') {

            /*if ($civilCode != '') {
                $tempSearchQuery .= " AND of.civilCode='$civilCode'";
            }*/
			if ($civilCode != '') {
				if (strpos($civilCode, ',') !== false){
						$temp_civil_codes = explode ( ',', trim ( $civilCode ) );
						$temp_arr = array ();
							foreach ( $temp_civil_codes as $val ) {
								$temp_arr [] = trim ( $val );
							}
						$civils = implode ( "','", $temp_arr );
						$tempSearchQuery .= " AND `of`.`civilCode` IN ('" . $civils . "') ";
				} else {
					$tempSearchQuery .= " AND of.civilCode='$civilCode'";
				}
			}
			
            if ($name != '') {
                $tempSearchQuery .= " AND of.name='$name'";
            }
            if ($batch != '') {
                $tempSearchQuery .= " AND of.batch = '$batch'";
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempSearchQuery .= " AND po.rankid = '$rankid'";
            }
            if ($grade != '-1' && $grade != '') {
                $tempSearchQuery .= " AND postings.gradeid = '$grade'";
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempSearchQuery .= " AND of.officerStatus ='$officerStatus'";
            }
        }

		$tempSearchQuery.=" order by postings.fromDate";
		//echo $tempSearchQuery ; die;
        $postingsResult = mysql_query($tempSearchQuery);
        $associativeArray = array();

        $numfields=mysql_num_fields($postingsResult);

        for($i=0;$i<$numfields;$i++)
        {
            $fieldname[$i]=mysql_field_name($postingsResult, $i);
        }
	
       while ($row = mysql_fetch_object($postingsResult)) {
			$tempPostVO = new StgPostingsVO();
			 if ($row->officerid) {
				for($i=0;$i<$numfields;$i++)
				{
					$tempPostVO->$fieldname[$i]=$row->$fieldname[$i];
				}
				$associativeArray[$row->officerid][]= $tempPostVO;
			 }
            //$returnArr[] = $row;
        }
	//echo "<pre>"; print_r($associativeArray); die;

        return $associativeArray;
    }

  


    ////////////////All Postings
    public function getPostingDetails() {

        $tempSearchQuery = '';
		$searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
//        $params_list = $_SESSION['dispparams_list'];
		$civilCode = mysql_real_escape_string($searchOfficerParamArray ['civilCode']);
        $name = mysql_real_escape_string($searchOfficerParamArray ['name']);
        $batch = mysql_real_escape_string($searchOfficerParamArray ['batch']);
        $rankid = mysql_real_escape_string($searchOfficerParamArray ['rankid']);
        $grade = mysql_real_escape_string($searchOfficerParamArray ['grade']);
        //$state = mysql_real_escape_string($searchOfficerParamArray ['state']);
        $region = mysql_real_escape_string($searchOfficerParamArray ['region']);
        $station = mysql_real_escape_string($searchOfficerParamArray ['station']);
        $otherRegion = mysql_real_escape_string($searchOfficerParamArray ['otherRegion']);
        $otherStation = mysql_real_escape_string($searchOfficerParamArray ['otherStation']);
//        $dispparams = $searchOfficerParamArray ['dispparams'];
//        $searchparam = $searchOfficerParamArray ['searchparam'];// $searchparam = $searchOfficerParamArray ['searchparam'];
//        $course = mysql_real_escape_string($searchOfficerParamArray ['qualification_id']);
        $officerStatus = mysql_real_escape_string($searchOfficerParamArray ['officerStatus']);

        $tempSearchQuery .= "SELECT `postings`.`id`, `postings`.`officerid`,`po`.`posttypeid` as PostTypeId, `postings`.`postid`, `postings`.`station`, `postings`.`fromDate`, `postings`.`toDate`, 
                        `postings`.`postingType`, `postings`.`gradeid`, `postings`.`islastposting`   , po.regionid  ,
                    (CASE
                            WHEN
                                (`postings`.`islastposting` = 1)
                            THEN
                                GETCURRENTDATEDIFF(`postings`.`toDate`,
                                        `postings`.`fromDate`,
                                        `postings`.`officerid`,
                                        `postings`.`islastposting`)
                            ELSE GETCOMMONDATEDIFF(`postings`.`toDate`, `postings`.`fromDate`)
                        END) AS `dateDiff`,
                        (CASE
                            WHEN
                                (`postings`.`islastposting` = 1)
                            THEN
                                GETPOLICYDATEDIFF(`postings`.`toDate`,
                                        `postings`.`fromDate`,
                                        `postings`.`officerid`,
                                        `postings`.`islastposting`)
                            ELSE GETCOMMONDATEDIFF(`postings`.`toDate`, `postings`.`fromDate`)
                        END) AS `policydatediff`,
                         GETFIXEDPOLICYDATEDIFF(`postings`.`toDate`,
                                `postings`.`fromDate`,
                                `postings`.`officerid`,
                                `postings`.`islastposting`) AS `policyDayTotal`
                        FROM `postings` 
                       INNER JOIN `posts` po ON po.code=postings.postid 
                       INNER JOIN `officers` `of` on `of`.`id` = `postings`.`officerid`
                       INNER JOIN `cities` `c` on `postings`.`station` = `c`.`id`
                       WHERE `postings`.`isActive` = 1";

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1' || $station != '-1' || $course != '-1') {

            if ($civilCode != '') {
				if (strpos($civilCode, ',') !== false){
						$temp_civil_codes = explode ( ',', trim ( $civilCode ) );
						$temp_arr = array ();
							foreach ( $temp_civil_codes as $val ) {
								$temp_arr [] = trim ( $val );
							}
						$civils = implode ( "','", $temp_arr );
						$tempSearchQuery .= " AND `of`.`civilCode` IN ('" . $civils . "') ";
				} else {
					$tempSearchQuery .= " AND of.civilCode='$civilCode'";
				}
			}
            if ($name != '') {
                $tempSearchQuery .= " AND of.name='$name'";
            }
            if ($batch != '') {
                $tempSearchQuery .= " AND of.batch = '$batch'";
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempSearchQuery .= " AND po.rankid = '$rankid'";
            }
            if ($grade != '-1' && $grade != '') {
                $tempSearchQuery .= " AND postings.gradeid = '$grade'";
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempSearchQuery .= " AND of.officerStatus ='$officerStatus'";
            }
//            if ($otherRegion != '-1') {
//                $tempSearchQuery .= " AND  `po`.`regionid` ='$otherRegion'";
//            } else {
//                if ($region != '-1') {
//                    $tempSearchQuery .= " AND  `po`.`regionid` ='$region'";
//                }
//            }
//            if ($station != '-1') {
//                $tempSearchQuery .= " AND `postings`.`station` = '$station'";
//            }
//            if ($course != '-1' && $course != '') {
//                $tempSearchQuery .= " AND new_courseid ='$course'";
//            }
        }
//        echo $tempSearchQuery;
//        die;
        $postingsResult = mysql_query($tempSearchQuery);
        $returnArr = array();

        while ($row = mysql_fetch_object($postingsResult)) {
            $returnArr[] = $row;
        }
        $associativeArray = array();
        foreach ($returnArr as $key => $value) {
            if ($value->officerid) {
                $associativeArray[$value->officerid][] = $value;
            }
        }  //associativeArray
        return $associativeArray;
    }

    /*
     * This function gets the search for a name
     */

    public function getAllProfileSearchResults() {
		$data = array();
		//echo "<pre>"; print_r($_POST ); die;
        if ($_POST ['transfer'] == 'Both') {
            if ($_POST ['civilcode'] != '') {
                $tempSearchQuery = "select id,civilCode,name,rankid from officers ";

                if ($_POST ['duestatus'] == 'Due') {
                    $tempSearchQuery .= ", officerremarks";
                }

                $tempSearchQuery .= " where ";
                $tempSearchQuery .= $tempSearchQuery . " civilCode= '$_POST[civilcode]'";
                if ($_POST ['rank'] != - 1) {
                    $tempSearchQuery = $tempSearchQuery . " and rankid= '$_POST[rank]'";
                }
            } else {
                $tempSearchQuery = "select id,civilCode,name,rankid from officers where rankid='$_POST[rank]'";
            }
            if ($_POST ['officerStatus'] != - 1) {
                $tempSearchQuery = $tempSearchQuery . " and officerStatus= '".$_POST['officerStatus']."'";
            }
            if ($_POST ['batchfrom'] != '') {
                $tempSearchQuery = $tempSearchQuery . " and (batch between '$_POST[batchfrom]' and '$_POST[batchto]')";
            }
            if ($_POST ['duestatus'] == 'Due') {
                $tempSearchQuery .= " and officerremarks.DUE = \"Yes\" and officerremarks.officerid = officers.id";
            }
        } else {
            if ($_POST ['civilcode'] != '') {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.rankid from officers,options where ";
                $tempSearchQuery = $tempSearchQuery . " officers.civilCode= '$_POST[civilcode]'";
                if ($_POST ['rank'] != - 1) {
                    $tempSearchQuery = $tempSearchQuery . " and officers.rankid= '$_POST[rank]'";
                }
            } else {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.rankid from officers,options";

                if ($_POST ['duestatus'] == 'Due') {
                    $tempSearchQuery .= ", officerremarks";
                }

                $tempSearchQuery .= " where officers.rankid='$_POST[rank]'";
            }

            if ($_POST ['officerStatus'] != - 1) {
                $tempSearchQuery = $tempSearchQuery . " and officers.officerStatus= '".$_POST['officerStatus']."'";
            }
            if ($_POST ['transfer'] != 'Both' && $_POST ['transfer'] != - 1) {
                $tempSearchQuery = $tempSearchQuery . " and options.transfer= '$_POST[transfer]'";
            }
            if ($_POST ['batchfrom'] != '') {
                $tempSearchQuery = $tempSearchQuery . " and (officers.batch between '$_POST[batchfrom]' and '$_POST[batchto]')";
            }
            $tempSearchQuery = $tempSearchQuery . " AND officers.id=options.officerid";
            if ($_POST ['duestatus'] == 'Due') {
                $tempSearchQuery .= " and officerremarks.DUE = \"Yes\" and officerremarks.officerid = officers.id and options.officerid = officerremarks.officerid";
            }
        }

        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);
        $tempPostingDAO = new PostingDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempCityDAO = new CityDAO ();
        while ($row = mysql_fetch_array($officerResult)) {
            $regionFlag = false;
            $includeflag = false;
            $tempAreaRegionList = $tempPostingDAO->getAreaRegionForOfficerFromStgpostings($row ['id']);

            /*
             * if($_POST[duestatus]=='Due') { $tempRemarksList = $tempOfficerDAO->getDueListSearchResultsForOfficer($row[rankid],$row[id]); for($k=0;$k<count($tempRemarksList);$k++) { $tempOfficerDetails = $tempRemarksList[$k]; $lastcivilcode = $tempOfficerDetails[civilcode]; $lastofficerid = 'MO'.$tempOfficerDetails[civilcode]; $dueVoList = $tempOfficerDetails['duelist']; for($l=0;$l<count($dueVoList);$l++) { $tempDueVO=$dueVoList[$l]; $pos1 = stripos($tempDueVO->getRemarks(), 'Due '); if($pos1!==false) { $includeflag = true; } } } if($includeflag) { $expList = explode("|",$tempAreaRegionList); if(count($_POST[region1])==0 OR (count($_POST[region1])==1 AND $_POST[region1][0]==-1)) { $regionFlag = true; $tempOfficerVO = new OfficerVO(); $tempOfficerVO->setId($row[id]); $tempOfficerVO->setName($row[name]); $tempOfficerVO->setCivilCode($row[civilCode]); $tempOfficerVO->setRegion($expList[1]); $tempOfficerVO->setSequence($expList[2]); $officerArray[count($officerArray)] = $tempOfficerVO; $data[] = array('id' => $row[id], 'name' => $row[name], 'civilcode' => $row[civilCode], 'region' => $expList[1], 'sequence' => $expList[2]); } else { if($expList[1]!="") { if(in_array($expList[1],$_POST[region1])) { $regionFlag = true; $tempOfficerVO = new OfficerVO(); $tempOfficerVO->setId($row[id]); $tempOfficerVO->setName($row[name]); $tempOfficerVO->setCivilCode($row[civilCode]); $tempOfficerVO->setRegion($expList[1]); $tempOfficerVO->setSequence($expList[2]); $officerArray[count($officerArray)] = $tempOfficerVO; $data[] = array('id' => $row[id], 'name' => $row[name], 'civilcode' => $row[civilCode], 'region' => $expList[1], 'sequence' => $expList[2]); } } } } } else {
             */
            $expList = explode("|", $tempAreaRegionList);
			//if (isset($_POST ['region1'])){
            if (count($_POST ['region1']) == 0 or ( count($_POST ['region1']) == 1 and $_POST ['region1'] [0] == - 1)) {
                $regionFlag = true;
                $tempOfficerVO = new OfficerVO ();
                $tempOfficerVO->setId($row ['id']);
                $tempOfficerVO->setName($row ['name']);
                $tempOfficerVO->setCivilCode($row ['civilCode']);
                $tempOfficerVO->setRegion($expList [1]);
                $tempOfficerVO->setSequence($expList [2]);
                $officerArray [count($officerArray)] = $tempOfficerVO;
                $data [] = array(
                    'id' => $row ['id'],
                    'name' => $row ['name'],
                    'civilcode' => $row ['civilCode'],
                    'region' => $expList [1],
                    'sequence' => $expList [2]
                );
            } else {
                if ($expList [1] != "") {
                    if (in_array($expList [1], $_POST ['region1'])) {
                        $regionFlag = true;
                        $tempOfficerVO = new OfficerVO ();
                        $tempOfficerVO->setId($row ['id']);
                        $tempOfficerVO->setName($row ['name']);
                        $tempOfficerVO->setCivilCode($row ['civilCode']);
                        $tempOfficerVO->setRegion($expList [1]);
                        $tempOfficerVO->setSequence($expList [2]);
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                        $data [] = array(
                            'id' => $row ['id'],
                            'name' => $row ['name'],
                            'civilcode' => $row ['civilCode'],
                            'region' => $expList [1],
                            'sequence' => $expList [2]
                        );
                    }
                }
            }
			//}
            // }
            /*
             * if($expList[1]!="") { if($expList[1]==$_POST['area']) { $areaFlag = true; } } else { $areaFlag = true; } if(count($tempOfficerFlagList)>0) { if(count($_POST[flag1])>0) { for($k=0;$k<count($tempOfficerFlagList);$k++) { if(in_array($tempOfficerFlagList[$k],$_POST[flag1])) { $flagFlag = true; } } } } else { $flagFlag = true; } if($regionFlag == true && $areaFlag==true && $flagFlag==true) { if($regionFlag == true) { $tempOfficerVO = new OfficerVO(); $tempOfficerVO->setId($row[id]); $tempOfficerVO->setName($row[name]); $tempOfficerVO->setCivilCode($row[civilCode]); $officerArray[count($officerArray)] = $tempOfficerVO; }
             */
            // }
        }
        if (count($data) > 0) {
            foreach ($data as $key => $row) {
                $id [$key] = $row ['id'];
                $name [$key] = $row ['name'];
                $civilcode [$key] = $row ['civilcode'];
                $region [$key] = $row ['region'];
                $sequence [$key] = $row ['sequence'];
            }
            array_multisort($sequence, SORT_ASC, $civilcode, SORT_STRING, $data);
        }
        return $data;
    }

    /*
     * This function gets the search for a name //updated by kanika on 3.11.09 for the view profile change //updated by kanika on 12.01.2010 for getting the officer data when the postings is nt there
     */

    public function getProfileSearchResults($Sort = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select officers.* from officers left outer join users on officers.id=users.officerId
			left outer join (SELECT  id from  stg_postings WHERE isLastPosting=1)a on officers.id=a.ID";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilcode = $profileValutParamArray ['civilcode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];
        // Check for where clause
        if ($civilcode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where   ";

            if ($civilcode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilcode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                /*
                 * $mystring = $name; $findme = ' '; $pos = strpos($mystring, $findme); if ($pos === false) { $tempAppendStr = "officers.name like '$name' AND officers.name!='$name'"; } else { $expname = explode(" ",$name); $t = 0; $qstring = ""; while($t < count($expname)) { if($t==0) { if($expname[$t]!='') { $newname = trim($expname[$t]); $qstring = "(officers.name LIKE '%$newname%'"; } } elseif($t==count($expname)-1) { if($expname[$t]!='') { $newname = trim($expname[$t]); $qstring .= " OR officers.name LIKE '%$newname%')"; } } else { if($expname[$t]!='') { $newname = trim($expname[$t]); $qstring .= " OR officers.name LIKE '%$newname%'"; } } $t++; } $tempAppendStr = $qstring; $tempAppendStr .= " AND officers.name!='$name'"; } $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
                 */
                $tempAppendStr = "officers.name LIKE '$name'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId "; // removed order -> order by officers.civilCode --By pulkit as on 27-10-09
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId "; // removed order -> order by officers.civilCode --By pulkit as on 27-10-09
        }

        // -----Added By Pulkit--to Sort on batch and the no civiCode as on 27-Oct-2009
        if ($Sort != "") {
            $tempSearchQuery = $tempSearchQuery . " order by officers.batch, officers.civilCode ";
        } else {
            $tempSearchQuery = $tempSearchQuery . " order by officers.civilCode";
        }

        // --Changes Ends for pulkit--------------
        // ---------------------------------------------------------

        $_SESSION [searchQuery] = $tempSearchQuery;

//         echo "</br>".$tempSearchQuery; die;
        $officerResult = mysql_query($tempSearchQuery) or die();

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the search for a name //ADDED by kanika on 24.11.09 for the view profile-cca CHANGE
     */

    public function getProfileSearchResultscca($Sort = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select officers.* from officers left outer join users on officers.id=users.officerId
			left outer join stg_postings s on officers.id=s.officerid";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilcode = $profileValutParamArray ['civilcode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];
        // Check for where clause
        if ($civilcode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where s.isLastPosting=1 and s.posttypeid!=4  and  ";

            if ($civilcode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilcode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%' AND officers.name!='$name'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring = "(officers.name LIKE '%$newname%'";
                            }
                        } elseif ($t == count($expname) - 1) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%')";
                            }
                        } else {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%'";
                            }
                        }
                        $t ++;
                    }
                    $tempAppendStr = $qstring;
                    $tempAppendStr .= " AND officers.name!='$name'";
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId "; // removed order -> order by officers.civilCode --By pulkit as on 27-10-09
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId "; // removed order -> order by officers.civilCode --By pulkit as on 27-10-09
        }

        // -----Added By Pulkit--to Sort on batch and the no civiCode as on 27-Oct-2009
        if ($Sort != "") {
            $tempSearchQuery = $tempSearchQuery . " order by officers.batch, officers.civilCode ";
        } else {
            $tempSearchQuery = $tempSearchQuery . " order by officers.civilCode";
        }

        // --Changes Ends for pulkit--------------
        // ---------------------------------------------------------

        $_SESSION [searchQuery] = $tempSearchQuery;

        // echo "</br>".$tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                echo $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                echo $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                echo $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    echo $expcity [0] . "region";
                    die;
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);

        // echo count($officerArray);
        return $officerArray;
    }

    ////Added By Shalini 29-05-2017
    public function getProfileSearchResultsccaNew($Sort = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select officers.* , s.region from officers left outer join users on officers.id=users.officerId
			left outer join stg_postings s on officers.id=s.officerid";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilcode = $profileValutParamArray ['civilcode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        echo "region" . $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];

        if ($civilcode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where s.isLastPosting=1 and s.posttypeid!=4  and  ";

            if ($civilcode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilcode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $tempAppendStr = "officers.name like '%$name%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId ";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId ";
        }

        if ($Sort != "") {
            $tempSearchQuery = $tempSearchQuery . " order by officers.batch, officers.civilCode ";
        } else {
            $tempSearchQuery = $tempSearchQuery . " order by officers.civilCode";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;

        echo "</br>" . $tempSearchQuery;
        die;
        $officerResult = mysql_query($tempSearchQuery);

        $officerArray = array();

        $numfields = mysql_num_fields($officerResult);

        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                echo $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                echo $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                echo $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    echo $expcity [0] . "region";
                    die;
                    if ($region == $expcity [0]) {
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * Vishal Sahu
     */

    public function checkOfficerForRegion($officerid, $region) {
        if ($region == '') {
            $region = $_REQUEST ['regionid'];
        }
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select officers.* from officers left outer join users on officers.id=users.officerId
			left outer join stg_postings s on officers.id=s.officerid";
        $tempSearchQuery .= " where s.isLastPosting=1 and s.posttypeid!=4  and  ";
        $tempSubQuery = $tempSearchQuery;
        $tempSearchQuery = $tempSubQuery . "  officers.id=users.officerId and officers.id=\"$officerid\"";
        $officerResult = mysql_query($tempSearchQuery);

        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
            $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
            $expcity = explode("|", $tempCityValue);
            if ($expcity [0] != "" or $expcity [0] != 0) {
                if ($region == $expcity [0]) {
                    // Finally we assign the new variables
                    for ($i = 0; $i < $numfields; $i ++) {
                        $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                    }
                    $officerArray [count($officerArray)] = $tempOfficerVO;
                }
            }
        }

        if (count($officerArray) > 0) {
            return true;
        } else {
            return false;
        }
    }

    /*
     * This function gets the search for a name
     */

    public function getAcrSearchResults() {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select apar_import.ReportPart,apar_import.FileName, apar_import.ReportType, apar_import.CivilCode as civilCode,officers.officerStatus,officers.name,officers.batch,officers.rankid,officers.dateOfBirth from apar_import 
        inner join officers on apar_import.CivilCode=officers.civilCode 
        inner join stg_postings on apar_import.CivilCode= stg_postings.Civilcode";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilCode = $profileValutParamArray ['civilCode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];
        $yearddl = $profileValutParamArray ['yearddl'];
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "apar_import.CivilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {

                $tempAppendStr = "officers.name like '%$name%' ";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($region != '-1') {
                $tempAppendStr = "stg_postings.region = '$region' and stg_postings.isLastPosting='1'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND apar_import.YearFrom ='2008' AND apar_import.YearTo = '2009' and stg_postings.isLastPosting=1 order by apar_import.CivilCode";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE  apar_import.YearFrom ='2008'and stg_postings.isLastPosting=1 AND apar_import.YearTo = '2009' order by apar_import.CivilCode";
        }
        $_SESSION [searchQueryACR] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);
        // echo $numfields;
        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
            // print_r($fieldname[$i]);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            // $tempAcrVO= new AcrVO();
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        // print_r($officerArray);
        return $officerArray;

        /*
         * if($region==-1) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; } $officerArray[count($officerArray)]= $tempOfficerVO; } else { $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id); $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid()); $expcity = explode("|",$tempCityValue); if($expcity[0]!="" OR $expcity[0]!=0) { if($region==$expcity[0]) { //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i]; //print_r($tempOfficerVO->$fieldname[$i]); } $officerArray[count($officerArray)]= $tempOfficerVO; } } } $_SESSION['officerSearchResults']=serialize($officerArray); //print_r($officerArray); return $officerArray;
         */
    }

    /*
     * This function gets the search for a name
     */

    public function getProfileSearchResultsName() {

        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select * from officers,users";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilcode = $profileValutParamArray ['civilcode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];

        // Check for where clause
        if ($civilcode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilcode != '') {
                $tempAppendStr = "officers.civilCode = '$civilcode'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $name = trim($name);
                $tempAppendStr = "officers.name LIKE '%$name%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId order by officers.name asc";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId order by officers.name asc";
        }
        $_SESSION [searchQuery] = $tempSearchQuery;

       // echo "</br>" . $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        $officerArray = array();

        $numfields = mysql_num_fields($officerResult);

        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {

            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->officerId);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->regionId = $expcity [0];
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the search for a name
     */

    public function getAcrSearchResultsName() {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select DISTINCT officers.* from officers,users,acrs";
        $profileValutParamArray = $_SESSION ['profileValutParamArray'];
        $civilcode = $profileValutParamArray ['civilcode'];
        $name = $profileValutParamArray ['name'];
        $rankid = $profileValutParamArray ['rank'];
        $batch = $profileValutParamArray ['batch'];
        $officerStatus = $profileValutParamArray ['officerStatus'];
        $region = $profileValutParamArray ['region'];
        $grade = $profileValutParamArray ['grade'];
        $yearddl = $profileValutParamArray ['yearddl'];

        // Check for where clause
        if ($civilcode != '' || $name != '' || $batch != '' || $rankid != '-1' || $officerStatus != '-1' || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilcode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilcode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $name = trim($name);
                $tempAppendStr = "officers.name='$name'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1') {
                $tempAppendStr = "officers.officerStatus = '$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND acrs.year='$yearddl' AND officers.id=users.officerId AND officers.id=acrs.officerId order by officers.name";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId AND acrs.year='$yearddl' AND officers.id=acrs.officerId order by officers.name";
        }
        $_SESSION [searchQueryACRName] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the search for a name
     */

    public function getDueListSearchResults($rankid, $transfer, $ebatch, $constantid, $ccode = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempRegionDAO = new RegionDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempConstantDAO = new ConstantDAO ();
        $officerVOList = array();
        if ($constantid == - 1) {
            if ($transfer == '') {
                $tempSearchQuery = "select id,civilCode,name,dateOfBirth,retirementDate from officers,options WHERE rankid='$rankid' and officerStatus='5' AND id=options.officerid";
            } elseif ($transfer == 'Both') {
                $tempSearchQuery = "select id,civilCode,name,dateOfBirth,retirementDate from officers WHERE rankid='$rankid' and officerStatus='5'";
            } else {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate from officers,options WHERE officers.rankid='$rankid' and officers.officerStatus='5' and options.transfer='$transfer' AND officers.id=options.officerid";
            }
        } else {
            if ($transfer == '') {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate from officers,options,officerconstants WHERE officers.rankid='$rankid' and officers.officerStatus='5' AND officerconstants.constantid='$constantid' AND officers.id=options.officerid AND officers.id=officerconstants.officerid AND options.officerid=officerconstants.officerid";
            } elseif ($transfer == 'Both') {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate from officers,officerconstants WHERE officers.rankid='$rankid' and officers.officerStatus='5' AND officerconstants.constantid='$constantid' AND officers.id=officerconstants.officerid";
            } else {
                $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate from officers,options,officerconstants WHERE officers.rankid='$rankid' and officers.officerStatus='5' AND officerconstants.constantid='$constantid' and options.transfer='$transfer' AND officers.id=options.officerid AND officers.id=officerconstants.officerid AND options.officerid=officerconstants.officerid";
            }
        }
        if ($_POST ['batchfrom'] != '-1') {
            $tempSearchQuery = $tempSearchQuery . " AND (batch between '$_POST[batchfrom]' and '$_POST[batchto]')";
        }
        if ($ebatch != '') {
            $tempSearchQuery = $tempSearchQuery . " AND officers.batch NOT IN ($ebatch)";
        }
        // $tempSearchQuery = $tempSearchQuery." AND officers.id='MO82022'";
        $_SESSION [searchQuery] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        if (mysql_num_rows($officerResult) > 0) {
            // We find the fields number
            $numfields = mysql_num_fields($officerResult);

            // Now we put the names of fields in a Array
            for ($i = 0; $i < $numfields; $i ++) {
                $fieldname [$i] = mysql_field_name($officerResult, $i);
            }
            while ($row = mysql_fetch_array($officerResult)) {
                $tempCurrentPCityId = '';
                if (count($_POST [region]) == 0 or ( count($_POST [region]) == 1 and $_POST [region] [0] == - 1)) {
                    $newOfficerVO = new OfficerVO ();
                    $tempCurrentDetails = explode("|", $tempStgPostingsDAO->getDueListCurrentPC($row ['id']));
                    $tempCurrentPC = $tempCurrentDetails [0];
                    $tempCurrentPCity = $tempCurrentDetails [1];
                    $tempCurrentPZone = $tempCurrentDetails [2];
                    $tempCurrentPClass = $tempStgPostingsDAO->getCurrentPostingClass($row ['id']);
                    $tempRegionName = $tempCurrentDetails [4];
                    $tempCurrentPosttypeId = $tempCurrentDetails [5];
                    $tempCurrentPCityId = $tempCurrentDetails [7];

                    $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '7', '2');
                    $tempCurrentDelhiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '7', '2');

                    $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '15', '2');
                    $tempCurrentMumbaiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '15', '2');

                    if ($tempCurrentPCity != "" or $tempCurrentPCity != 0) {
                        // $tempRegionSequence = $tempRegionDAO->getRegionSequence($tempCurrentPCity);
                        $tempRegionSequence = $tempCurrentDetails [6];
                    } else {
                        $tempRegionSequence = "";
                    }

                    $newOfficerVO->setId($row ['id']);
                    $newOfficerVO->setCivilCode($row ['civilCode']);
                    $newOfficerVO->setName($row ['name']);
                    $newOfficerVO->setDateOfBirth($row ['dateOfBirth']);
                    $newOfficerVO->setRankid($rankid);
                    $newOfficerVO->setCityname($tempCurrentPC);
                    $newOfficerVO->setRegionabb($tempRegionName);
                    $newOfficerVO->setRegion($tempCurrentPCity);
                    $newOfficerVO->setSequence($tempRegionSequence);

                    // Array for areas
                    $duelistArray = array();

                    // ###################################################################
                    // Checking for SD(E)
                    $tempSAEDelList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '3');
                    $totalSAEDelDays = $tempSAEDelList;
                    if ($totalSAEDelDays > 6) {
                        $SDRLeft = $totalSAEDelDays - 6;
                    } else {
                        $SDRLeft = 0;
                    }

                    if ($totalSAEDelDays > 6) {
                        // $tempDueListVO = new DueListVO();
                        // $tempDueListVO->setRemarks('5.4');
                        // $duelistArray[count($duelistArray)]= $tempDueListVO;
                    }
                    // ###################################################################
                    // ###################################################################
                    // Checking for SM(E)
                    $tempSAEMumList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '3');
                    $totalSAEMumDays = $tempSAEMumList [0];
                    if ($totalSAEMumDays > 6) {
                        $SDMLeft = $totalSAEMumDays - 6;
                    } else {
                        $SDMLeft = 0;
                    }

                    if ($totalSAEMumDays >= 6) {
                        // $tempDueListVO = new DueListVO();
                        // $tempDueListVO->setRemarks('5.4');
                        // $duelistArray[count($duelistArray)]= $tempDueListVO;
                    }
                    // ###################################################################
                    // Checking for SA(R+E)
                    $tempSAREList = $tempOfficerDAO->calculateclasssummary($row ['id']);
                    $totalSAREDays = $tempSAREList [5];
                    // echo $totalSAREDays;
                    if ($totalSAREDays >= 18) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay in A class (Regular) greater than or equal to 18 yrs. Completed tenure in A class. [Cl. 5.3.7 of TP]');
                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for SA(R+E+D)
                    // $tempSAREDList = $tempStgPostingsDAO->getDueListSARED($row['id'],'1');
                    $totalSAREDDays = $tempSAREList [4];

                    if ($totalSAREDDays >= 22) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay in A class (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    $tempCurrentPostingList = $tempStgPostingsDAO->getCheckCurrentPosting($row ['id'], '1');

                    // Checking for CSA(R+E)
                    $tempCSAREList = $tempStgPostingsDAO->getCSPPHistory($row ['id'], '1');
                    $totalCSAREDays = $tempCSAREList;

                    if ($totalSAREDays >= 18 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('** Due for transfer to B/C class. [Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CSA(R+E) With Current Posting Class
                    if ($totalCSAREDays >= 14 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continuous stay in A class (Regular+Exempted) greater than or equal to 14 yrs. Completed continuous tenure in A class. **Due for transfer to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for SA(R+E+D) With Current Posting Class
                    if ($totalSAREDDays >= 22 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer to B/C class. [2nd Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    // ###################################################################
                    // Checking for Stay in Region(R)
                    $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDueListCurrentRegion($row ['id']);

                    $tempRegionList = $tempRegionDAO->getRegionsListWithoutDelhiMumbai();
                    if (count($tempRegionList) > 0) {
                        for ($k = 0; $k < count($tempRegionList); $k ++) {
                            $tempRegionVO = $tempRegionList [$k];
                            $tempStayRegion = $tempStgPostingsDAO->getDueListStayinRegion($row ['id'], $tempRegionVO->getId());
                            $totalStayRegionDays = $tempStayRegion;

                            // Checking for Stay in Region(E)
                            $tempSAERegList = $tempStgPostingsDAO->getDueListSARRegionClassExempted($row ['id'], $tempRegionVO->getId(), '3', '1');
                            $totalSAERegDays = $tempSAERegList;
                            if ($totalSAERegDays > 6) {
                                $SDRegLeft = $totalSAERegDays - 6;
                            } else {
                                $SDRegLeft = 0;
                            }
                            $totalStayRegionExempted = $SDRegLeft + $totalStayRegionDays;

                            if ($totalStayRegionExempted >= 16) {
                                $tempDueListVO = new DueListVO ();
                                $tempDueListVO->setRemarks('Stay on Regular postings in ' . $tempRegionVO->getName() . ' region greater or equal to 16 yrs. Completed tenure of region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                $duelistArray [count($duelistArray)] = $tempDueListVO;
                            }

                            if ($SDRegLeft > 0) {
                                $tempDueListVO = new DueListVO ();
                                $dremarks = 'Stay in Exempted Posting greater than 6 Yrs in ' . $tempRegionVO->getName() . ' [A]. Excess (' . $SDRegLeft . ') years added to Regular period in ' . $tempRegionVO->getName() . '. [Cl. 5.4 of TP]';
                                $tempDueListVO->setRemarks($dremarks);

                                $duelistArray [count($duelistArray)] = $tempDueListVO;
                            }

                            if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                                $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                            } else {
                                $tempCurrentPostCodeRegion = $tempCurrentPostCodeRegion;
                            }

                            if ($totalStayRegionExempted >= 16 && $tempCurrentPostCodeRegion == $tempRegionVO->getId() && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                $tempDueListVO = new DueListVO ();
                                $tempDueListVO->setRemarks('**Due for transfer from ' . $tempRegionVO->getName() . ' region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                $duelistArray [count($duelistArray)] = $tempDueListVO;
                            }
                        }
                    }
                    // ###################################################################
                    // Checking for SD(R)
                    $tempSARDelhiMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '2');
                    $totalSARDelhiMumbaiDays = $tempSARDelhiMumbaiList + $SDRLeft;
                    $calculateregiondelhisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '7');
                    $calculateregionmumbaisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '15');
                    if ($totalSARDelhiMumbaiDays >= 8) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay on Regular postings in Delhi greater or equal to 8 yrs. Completed tenure of Regular postings in Delhi. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    if ($SDRLeft > 0) {
                        $tempDueListVO = new DueListVO ();
                        $dremarks = 'Stay in Exempted Posting greater than 6yrs in Delhi CCA. Excess (' . $SDRLeft . ') years added to Regular period in Delhi CCA. [Cl. 5.4 of TP]';
                        $tempDueListVO->setRemarks($dremarks);

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CSD(R+E)
                    $tempCSDREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '7');
                    $totalCSDREDays = $tempCSDREList;

                    // Checking for SD(R+E+D)
                    $tempSAREDDelhiMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '7');
                    $totalSAREDDelhiMumbaiDays = $tempSAREDDelhiMumbaiList;

                    if ($calculateregiondelhisummary [0] >= 22) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay in Delhi (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                        $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                    } else {
                        $tempCurrentDelhiPosting = $tempCurrentDelhiPosting;
                    }

                    // Checking for CSD(R) With Current Posting in Delhi(R)
                    if ($totalSARDelhiMumbaiDays >= 8 && $tempCurrentDelhiPosting == 7 && $tempCurrentDelhiToPosting == '2') {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Delhi  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CSD(R+E) With Current Posting in Delhi(R+E)
                    if ($totalCSDREDays >= 14 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                    if ($calculateregiondelhisummary [0] >= 22 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    // ###################################################################
                    // Checking for SM(R)
                    $tempSARMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '2');
                    $totalSARMumbaiDays = $tempSARMumbaiList + $SDMLeft;

                    if ($totalSARMumbaiDays >= 8) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay on Regular postings in Mumbai greater or equal to 8 yrs. Completed tenure of Regular postings in Mumbai. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    if ($SDMLeft > 0) {
                        $tempDueListVO = new DueListVO ();
                        $dremarks = 'Stay in Exempted Posting greater than 6yrs in Mumbai CCA. Excess (' . $SDMLeft . ') years added to Regular period in Mumbai CCA. [Cl. 5.4 of TP]';
                        $tempDueListVO->setRemarks($dremarks);

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CSM(R+E)
                    $tempCSMREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '15');
                    $totalCSMREDays = $tempCSMREList;

                    // Checking for SM(R+E+D)
                    $tempSAREDMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '15');
                    $totalSAREDMumbaiDays = $tempSAREDMumbaiList;

                    if ($calculateregionmumbaisummary [0] >= 22) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Stay in Mumbai (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class.  [2nd  Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                        $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                    } else {
                        $tempCurrentMumbaiPosting = $tempCurrentMumbaiPosting;
                    }

                    // Checking for SM(R) With Current Posting in Mumbai(R)
                    if ($totalSARMumbaiDays >= 8 && $tempCurrentMumbaiPosting == 15 && $tempCurrentDelhiToPosting == '2') {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Mumbai  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CSM(R+E) With Current Posting in Mumbai(R+E)
                    if ($totalCSMREDays >= 14 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                    if ($calculateregionmumbaisummary [0] >= 22 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    // ###################################################################
                    // Checking for CSBC(R+E)
                    $tempCSBCREList = $tempStgPostingsDAO->getCSInBCWithRE($row ['id']);
                    $totalCSBCREDays = $tempCSBCREList;
                    $finalDateArray = $tempStgPostingsDAO->getCSInBCWithREInYM($row ['id']);

                    $tempCurrentPostingListbc = $tempStgPostingsDAO->getCheckCurrentPostingInBC($row ['id']);

                    // Checking for csbc(R+e) With Current Posting in B Or C
                    if ($totalCSBCREDays >= 6 && ($tempCurrentPClass == 2 or $tempCurrentPClass == 3) && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continously Posted in B/C for ' . $finalDateArray [year] . ' Years & ' . $finalDateArray [month] . ' Months');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CS in a Zone(R+E)
                    $tempCSinNorthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '1');
                    $tempCSinWestZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '2');
                    $tempCSinSouthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '3');
                    $tempCSinEastZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '4');
                    $tempCSinCentralZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '5');

                    $checkConstantValue = $tempConstantDAO->getOfficerConstant($row ['id']);
                    // Checking for CS in North Zone
                    if ($checkConstantValue) {
                        if ($tempCSinNorthZone >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continous stay in North Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in North Area. [Cl. 5.3 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                        if ($tempCSinNorthZone >= 16 && $tempCurrentPZone == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer out of North Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        // Checking for CS in West Zone
                        if ($tempCSinWestZone >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continous stay in West Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in West Area. [Cl. 5.3 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                        if ($tempCSinWestZone >= 16 && $tempCurrentPZone == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer out of West Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        // Checking for CS in South Zone
                        if ($tempCSinSouthZone >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continous stay in South Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in South Area. [Cl. 5.3 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                        if ($tempCSinSouthZone >= 16 && $tempCurrentPZone == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer out of South Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        // Checking for CS in East Zone
                        if ($tempCSinEastZone >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continous stay in East Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in East Area. [Cl. 5.3 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                        if ($tempCSinEastZone >= 16 && $tempCurrentPZone == 4 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer out of East Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        // Checking for CS in Central Zone
                        if ($tempCSinCentralZone >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continous stay in Central Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in Central Area. [Cl. 5.3 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                        if ($tempCSinCentralZone >= 16 && $tempCurrentPZone == 5 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer out of Central Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                    }
                    // ###################################################################
                    if ($rankid == 4) {
                        // Checking for CS at a Post(R)
                        $tempCurrentPostCodeR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '2');
                        if ($tempCurrentPostCodeR != "") {
                            $tempCSonPostRegular = $tempStgPostingsDAO->getCSOnPost($row ['id'], '2');
                            $totalCSonPostRegularDays = $tempCSonPostRegular;
                            if ($totalCSonPostRegularDays >= 3 && $tempCurrentPosttypeId == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                                $tempDueListVO = new DueListVO ();
                                $tempDueListVO->setRemarks('Continuing on the post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');

                                $duelistArray [count($duelistArray)] = $tempDueListVO;
                            }
                        } else {
                            $tempCurrentPostCodeNR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '3');
                            $tempCSonPostNotRegular = $tempStgPostingsDAO->getCSOnPostOtherR($row ['id'], '3');
                            $totalCSonPostNotRegularDays = $tempCSonPostNotRegular;

                            // $finalDateArray=getYearMonthsFromDays($totalCSonPostNotRegularDays);

                            if ($totalCSonPostNotRegularDays >= 3 && $tempCurrentPosttypeId == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                                $tempDueListVO = new DueListVO ();
                                $tempDueListVO->setRemarks('Continuing on post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');
                                $duelistArray [count($duelistArray)] = $tempDueListVO;
                            }
                        }
                    }
                    if (count($duelistArray) > 0) {
                        $newOfficerVO->setDuelist($duelistArray);
                        $officerVOList [count($officerVOList)] = $newOfficerVO;
                        $data [] = array(
                            'id' => $newOfficerVO->getId(),
                            'civilcode' => $newOfficerVO->getCivilCode(),
                            'name' => $newOfficerVO->getName(),
                            'dateofbirth' => $newOfficerVO->getDateOfBirth(),
                            'rankid' => $newOfficerVO->getRankid(),
                            'cityname' => $newOfficerVO->getCityname(),
                            'regionname' => $newOfficerVO->getRegionabb(),
                            'region' => $newOfficerVO->getRegion(),
                            'duelist' => $newOfficerVO->getDuelist(),
                            'rtdate' => $newOfficerVO->getNewRetirementDate(),
                            'sequence' => $newOfficerVO->getSequence()
                        );
                    }
                } else {
                    $tempRegionId = $tempStgPostingsDAO->getDueListCurrentRegion($row ['id']);

                    $tempCurrentDetails = explode("|", $tempStgPostingsDAO->getDueListCurrentPC($row ['id']));

                    $tempCurrentPC = $tempCurrentDetails [0];
                    $tempCurrentPCity = $tempCurrentDetails [1];

                    $tempCurrentPZone = $tempCurrentDetails [2];
                    $tempCurrentPClass = $tempStgPostingsDAO->getCurrentPostingClass($row ['id']);
                    $tempRegionName = $tempCurrentDetails [4];
                    $tempCurrentPosttypeId = $tempCurrentDetails [5];
                    $tempCurrentPCityId = $tempCurrentDetails [7];

                    // $expcity = explode("|",$tempCityValue);
                    if ($tempRegionId != 0 || $tempRegionId != '') {
                        $t = 0;
                        while ($t < count($_POST ['region'])) {
                            $rname = $_POST ['region'] [$t];
                            if ($rname == $tempRegionId) {
                                if ($tempCurrentPCity != "" or $tempCurrentPCity != 0) {
                                    // $tempRegionSequence = $tempRegionDAO->getRegionSequence($tempCurrentPCity);
                                    $tempRegionSequence = $tempCurrentDetails [6];
                                } else {
                                    $tempRegionSequence = "";
                                }

                                $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '7', '2');
                                $tempCurrentDelhiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '7', '2');

                                $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '15', '2');
                                $tempCurrentMumbaiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '15', '2');

                                $newOfficerVO = new OfficerVO ();
                                $newOfficerVO->setId($row ['id']);
                                $newOfficerVO->setCivilCode($row ['civilCode']);
                                $newOfficerVO->setName($row ['name']);
                                $newOfficerVO->setDateOfBirth($row ['dateOfBirth']);
                                $newOfficerVO->setRankid($rankid);
                                $newOfficerVO->setCityname($tempCurrentPC);
                                $newOfficerVO->setRegionabb($tempRegionName);
                                $newOfficerVO->setRegion($tempCurrentPCity);
                                $newOfficerVO->setSequence($tempRegionSequence);

                                // Array for areas
                                $duelistArray = array();

                                // ###################################################################
                                // Checking for SD(E)
                                $tempSAEDelList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '3');
                                $totalSAEDelDays = $tempSAEDelList;
                                if ($totalSAEDelDays > 6) {
                                    $SDRLeft = $totalSAEDelDays - 6;
                                } else {
                                    $SDRLeft = 0;
                                }

                                if ($totalSAEDelDays > 6) {
                                    // $tempDueListVO = new DueListVO();
                                    // $tempDueListVO->setRemarks('5.4');
                                    // $duelistArray[count($duelistArray)]= $tempDueListVO;
                                }
                                // ###################################################################
                                // ###################################################################
                                // Checking for SM(E)
                                $tempSAEMumList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '3');
                                $totalSAEMumDays = $tempSAEMumList [0];
                                if ($totalSAEMumDays > 6) {
                                    $SDMLeft = $totalSAEMumDays - 6;
                                } else {
                                    $SDMLeft = 0;
                                }

                                if ($totalSAEMumDays >= 6) {
                                    // $tempDueListVO = new DueListVO();
                                    // $tempDueListVO->setRemarks('5.4');
                                    // $duelistArray[count($duelistArray)]= $tempDueListVO;
                                }
                                // ###################################################################
                                // Checking for SA(R+E)
                                $tempSAREList = $tempOfficerDAO->calculateclasssummary($row ['id']);
                                $totalSAREDays = $tempSAREList [5];
                                // echo $totalSAREDays;
                                if ($totalSAREDays >= 18) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay in A class (Regular) greater than or equal to 18 yrs. Completed tenure in A class. [Cl. 5.3.7 of TP]');
                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for SA(R+E+D)
                                // $tempSAREDList = $tempStgPostingsDAO->getDueListSARED($row['id'],'1');
                                $totalSAREDDays = $tempSAREList [4];

                                if ($totalSAREDDays >= 22) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay in A class (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                $tempCurrentPostingList = $tempStgPostingsDAO->getCheckCurrentPosting($row ['id'], '1');

                                // Checking for CSA(R+E)
                                $tempCSAREList = $tempStgPostingsDAO->getCSPPHistory($row ['id'], '1');
                                $totalCSAREDays = $tempCSAREList;

                                if ($totalSAREDays >= 18 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('** Due for transfer to B/C class. [Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CSA(R+E) With Current Posting Class
                                if ($totalCSAREDays >= 14 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Continuous stay in A class (Regular+Exempted) greater than or equal to 14 yrs. Completed continuous tenure in A class. **Due for transfer to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for SA(R+E+D) With Current Posting Class
                                if ($totalSAREDDays >= 22 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer to B/C class. [2nd Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }
                                // ###################################################################
                                // Checking for Stay in Region(R)
                                $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDueListCurrentRegion($row ['id']);

                                $tempRegionList = $tempRegionDAO->getRegionsListWithoutDelhiMumbai();
                                if (count($tempRegionList) > 0) {
                                    for ($k = 0; $k < count($tempRegionList); $k ++) {
                                        $tempRegionVO = $tempRegionList [$k];
                                        $tempStayRegion = $tempStgPostingsDAO->getDueListStayinRegion($row ['id'], $tempRegionVO->getId());
                                        $totalStayRegionDays = $tempStayRegion;

                                        // Checking for Stay in Region(E)
                                        $tempSAERegList = $tempStgPostingsDAO->getDueListSARRegionClassExempted($row ['id'], $tempRegionVO->getId(), '3', '1');
                                        $totalSAERegDays = $tempSAERegList;
                                        if ($totalSAERegDays > 6) {
                                            $SDRegLeft = $totalSAERegDays - 6;
                                        } else {
                                            $SDRegLeft = 0;
                                        }
                                        $totalStayRegionExempted = $SDRegLeft + $totalStayRegionDays;

                                        if ($totalStayRegionExempted >= 16) {
                                            $tempDueListVO = new DueListVO ();
                                            $tempDueListVO->setRemarks('Stay on Regular postings in ' . $tempRegionVO->getName() . ' region greater or equal to 16 yrs. Completed tenure of region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                                        }

                                        if ($SDRegLeft > 0) {
                                            $tempDueListVO = new DueListVO ();
                                            $dremarks = 'Stay in Exempted Posting greater than 6 Yrs in ' . $tempRegionVO->getName() . ' [A]. Excess (' . $SDRegLeft . ') years added to Regular period in ' . $tempRegionVO->getName() . '. [Cl. 5.4 of TP]';
                                            $tempDueListVO->setRemarks($dremarks);

                                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                                        }

                                        if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                                            $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                                        } else {
                                            $tempCurrentPostCodeRegion = $tempCurrentPostCodeRegion;
                                        }
                                        if ($totalStayRegionExempted >= 16 && $tempCurrentPostCodeRegion == $tempRegionVO->getId() && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                            $tempDueListVO = new DueListVO ();
                                            $tempDueListVO->setRemarks('**Due for transfer from ' . $tempRegionVO->getName() . ' region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                                        }
                                    }
                                }
                                // ###################################################################
                                // Checking for SD(R)
                                $tempSARDelhiMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '2');
                                $totalSARDelhiMumbaiDays = $tempSARDelhiMumbaiList + $SDRLeft;
                                $calculateregiondelhisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '7');
                                $calculateregionmumbaisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '15');
                                if ($totalSARDelhiMumbaiDays >= 8) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay on Regular postings in Delhi greater or equal to 8 yrs. Completed tenure of Regular postings in Delhi. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                if ($SDRLeft > 0) {
                                    $tempDueListVO = new DueListVO ();
                                    $dremarks = 'Stay in Exempted Posting greater than 6yrs in Delhi CCA. Excess (' . $SDRLeft . ') years added to Regular period in Delhi CCA. [Cl. 5.4 of TP]';
                                    $tempDueListVO->setRemarks($dremarks);

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CSD(R+E)
                                $tempCSDREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '7');
                                $totalCSDREDays = $tempCSDREList;

                                // Checking for SD(R+E+D)
                                $tempSAREDDelhiMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '7');
                                $totalSAREDDelhiMumbaiDays = $tempSAREDDelhiMumbaiList;

                                if ($calculateregiondelhisummary [0] >= 22) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay in Delhi (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                                    $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                                } else {
                                    $tempCurrentDelhiPosting = $tempCurrentDelhiPosting;
                                }

                                // Checking for SD(R) With Current Posting in Delhi(R)
                                if ($totalSARDelhiMumbaiDays >= 8 && $tempCurrentDelhiPosting == 7 && $tempCurrentDelhiToPosting == '2') {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Delhi  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CSD(R+E) With Current Posting in Delhi(R+E)
                                if ($totalCSDREDays >= 14 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                                if ($calculateregiondelhisummary [0] >= 22 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }
                                // ###################################################################
                                // Checking for SM(R)
                                $tempSARMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '2');
                                $totalSARMumbaiDays = $tempSARMumbaiList + $SDMLeft;

                                if ($totalSARMumbaiDays >= 8) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay on Regular postings in Mumbai greater or equal to 8 yrs. Completed tenure of Regular postings in Mumbai. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                if ($SDMLeft > 0) {
                                    $tempDueListVO = new DueListVO ();
                                    $dremarks = 'Stay in Exempted Posting greater than 6yrs in Mumbai. Excess (' . $SDMLeft . ') years added to Regular period in Mumbai. [Cl. 5.4 of TP]';
                                    $tempDueListVO->setRemarks($dremarks);

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CSM(R+E)
                                $tempCSMREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '15');
                                $totalCSMREDays = $tempCSMREList;

                                // Checking for SM(R+E+D)
                                $tempSAREDMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '15');
                                $totalSAREDMumbaiDays = $tempSAREDMumbaiList;

                                if ($calculateregionmumbaisummary [0] >= 22) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Stay in Mumbai (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class.  [2nd  Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                                    $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                                } else {
                                    $tempCurrentMumbaiPosting = $tempCurrentMumbaiPosting;
                                }

                                // Checking for SM(R) With Current Posting in Mumbai(R)
                                if ($totalSARMumbaiDays >= 8 && $tempCurrentMumbaiPosting == 15 && $tempCurrentDelhiToPosting == '2') {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Mumbai  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CSM(R+E) With Current Posting in Mumbai(R+E)
                                if ($totalCSMREDays >= 14 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                                if ($calculateregionmumbaisummary [0] >= 22 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }
                                // ###################################################################
                                // Checking for CSBC(R+E)
                                $tempCSBCREList = $tempStgPostingsDAO->getCSInBCWithRE($row ['id']);
                                $totalCSBCREDays = $tempCSBCREList;
                                $finalDateArray = $tempStgPostingsDAO->getCSInBCWithREInYM($row ['id']);

                                $tempCurrentPostingListbc = $tempStgPostingsDAO->getCheckCurrentPostingInBC($row ['id']);

                                // Checking for csbc(R+e) With Current Posting in B Or C
                                if ($totalCSBCREDays >= 6 && ($tempCurrentPClass == 2 or $tempCurrentPClass == 3) && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                    $tempDueListVO = new DueListVO ();
                                    $tempDueListVO->setRemarks('Continously Posted in B/C for ' . $finalDateArray [year] . ' Years & ' . $finalDateArray [month] . ' Months');

                                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                                }

                                // Checking for CS in a Zone(R+E)
                                $tempCSinNorthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '1');
                                $tempCSinWestZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '2');
                                $tempCSinSouthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '3');
                                $tempCSinEastZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '4');
                                $tempCSinCentralZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '5');

                                $checkConstantValue = $tempConstantDAO->getOfficerConstant($row ['id']);
                                // Checking for CS in North Zone
                                if ($checkConstantValue) {
                                    if ($tempCSinNorthZone >= 16) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('Continous stay in North Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in North Area. [Cl. 5.3 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                    if ($tempCSinNorthZone >= 16 && $tempCurrentPZone == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('**Due for transfer out of North Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }

                                    // Checking for CS in West Zone
                                    if ($tempCSinWestZone >= 16) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('Continous stay in West Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in West Area. [Cl. 5.3 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                    if ($tempCSinWestZone >= 16 && $tempCurrentPZone == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('**Due for transfer out of West Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }

                                    // Checking for CS in South Zone
                                    if ($tempCSinSouthZone >= 16) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('Continous stay in South Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in South Area. [Cl. 5.3 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                    if ($tempCSinSouthZone >= 16 && $tempCurrentPZone == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('**Due for transfer out of South Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }

                                    // Checking for CS in East Zone
                                    if ($tempCSinEastZone >= 16) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('Continous stay in East Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in East Area. [Cl. 5.3 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                    if ($tempCSinEastZone >= 16 && $tempCurrentPZone == 4 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('**Due for transfer out of East Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }

                                    // Checking for CS in Central Zone
                                    if ($tempCSinCentralZone >= 16) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('Continous stay in Central Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in Central Area. [Cl. 5.3 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                    if ($tempCSinCentralZone >= 16 && $tempCurrentPZone == 5 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                        $tempDueListVO = new DueListVO ();
                                        $tempDueListVO->setRemarks('**Due for transfer out of Central Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                                    }
                                }
                                // ###################################################################
                                if ($rankid == 4) {
                                    // Checking for CS at a Post(R)
                                    $tempCurrentPostCodeR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '2');
                                    if ($tempCurrentPostCodeR != "") {
                                        $tempCSonPostRegular = $tempStgPostingsDAO->getCSOnPost($row ['id'], '2');
                                        $totalCSonPostRegularDays = $tempCSonPostRegular;
                                        if ($totalCSonPostRegularDays >= 3 && $tempCurrentPosttypeId == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                            $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                                            $tempDueListVO = new DueListVO ();
                                            $tempDueListVO->setRemarks('Continuing on the post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');

                                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                                        }
                                    } else {
                                        $tempCurrentPostCodeNR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '3');
                                        $tempCSonPostNotRegular = $tempStgPostingsDAO->getCSOnPostOtherR($row ['id'], '3');
                                        $totalCSonPostNotRegularDays = $tempCSonPostNotRegular;

                                        // $finalDateArray=getYearMonthsFromDays($totalCSonPostNotRegularDays);

                                        if ($totalCSonPostNotRegularDays >= 3 && $tempCurrentPosttypeId == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                                            $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                                            $tempDueListVO = new DueListVO ();
                                            $tempDueListVO->setRemarks('Continuing on post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');
                                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                                        }
                                    }
                                }
                                if (count($duelistArray) > 0) {
                                    $newOfficerVO->setDuelist($duelistArray);
                                    $officerVOList [count($officerVOList)] = $newOfficerVO;
                                    $data [] = array(
                                        'id' => $newOfficerVO->getId(),
                                        'civilcode' => $newOfficerVO->getCivilCode(),
                                        'name' => $newOfficerVO->getName(),
                                        'dateofbirth' => $newOfficerVO->getDateOfBirth(),
                                        'rankid' => $newOfficerVO->getRankid(),
                                        'cityname' => $newOfficerVO->getCityname(),
                                        'regionname' => $newOfficerVO->getRegionabb(),
                                        'region' => $newOfficerVO->getRegion(),
                                        'duelist' => $newOfficerVO->getDuelist(),
                                        'rtdate' => $newOfficerVO->getNewRetirementDate(),
                                        'sequence' => $newOfficerVO->getSequence()
                                    );
                                }
                            }
                            $t ++;
                        }
                    }
                }
            }
            if (count($data) > 0) {
                foreach ($data as $key => $row) {
                    $id [$key] = $row ['id'];
                    $civilcode [$key] = $row ['civilcode'];
                    $name [$key] = $row ['name'];
                    $dateofbirth [$key] = $row ['dateofbirth'];
                    $rankid [$key] = $row ['rankid'];
                    $cityname [$key] = $row ['cityname'];
                    $regionname [$key] = $row ['regionname'];
                    $region [$key] = $row ['region'];
                    $sequence [$key] = $row ['sequence'];
                    $rtdate [$key] = $row ['rtdate'];
                    $duelist [$key] = $row ['duelist'];
                }
                if ($ccode == 'ccode') {
                    array_multisort($civilcode, SORT_ASC, $data);
                } else {
                    array_multisort($sequence, SORT_ASC, $data);
                }
            }
        }
        // print_r($data);
        // return $officerVOList;
        return $data;
    }

    /*
     * This function gets the search for a name
     */

    // public function getDueListSearchResults($rankid,$transfer,$ebatch,$constantid,$ccode='')
    public function getAllDueListSearchResults($rankid, $transfer, $ebatch, $flagid, $ccode = '', $due, $civilCode) {
        // die($_POST[repFrom]);
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempRegionDAO = new RegionDAO ();
        $tempConstantDAO = new ConstantDAO ();
        $data = array();
        $groupBY = $t = $rp = "";
        $order = "";
        if (strlen($civilCode) > 0) {
            /*
             * $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate, region, regions.sequence, All_Remarks, Due from officers, officerremarks, stg_postings where officers.id=\"MO$civilCode\" and officers.officerStatus='5' and officers.id=stg_postings.officerid and officers.id=officerremarks.officerid and officerremarks.officerid=stg_postings.officerid and isLastPosting=1 ";
             */
            $tempSearchQuery = "SELECT officers.id, officers.civilCode, officers.name, officers.dateOfBirth, officers.retirementDate, region, stg_postings.sequence, All_Remarks, Due FROM officers, officerremarks, stg_postings WHERE officers.civilCode = \"$civilCode\" AND officers.officerStatus = '5' AND officers.id = stg_postings.officerid AND officers.id = officerremarks.officerid AND officerremarks.officerid = stg_postings.officerid AND isLastPosting =1
        	";

            // die($tempSearchQuery);
            // echo $tempSearchQuery ."<br/>Vishal<br/>";
        } else {
            $tempSearchQuery = "select officers.id,officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate, region, regions.sequence, All_Remarks, Due from officers
join  stg_postings  on officers.id = stg_postings.officerid
join officerremarks on stg_postings.officerid = officerremarks.officerid
join regions on regions.id = stg_postings.region";

            if (($transfer != "Both" && $transfer != - 1 && $transfer != "REP") || ((isset($_POST ['optionRegion']) && $_POST ['optionRegion'] != - 1) || (isset($_POST ['city']) && $_POST ['city'] != - 1))) {
                $t = "yes";
                $tempSearchQuery .= " join options on options.officerid = officers.id";
                $groupBY = " group by officers.id";
            } else if ($transfer == "REP") {

                $frmrep = getSQLDate($_POST [repFrom]);
                $torep = getSQLDate($_POST [repTo]);
                $rp = "yes";
                $tempSearchQuery .= " join representations on representations.officerid = officers.id ";
                $groupBY = " group by officers.id";
            }
			if (isset($_POST ['region'])){
            if (count($_POST ['region']) > 0 ) { //$_POST ['region'] [0] != - 1
                $r = "yes";
                // $tempSearchQuery .= ", stg_postings";
            } }

            $tempSearchQuery .= " where ";
            /*
             * if(!isset($_POST['option_order_53'])) { $tempSearchQuery .= " officers.rankid='$rankid' "; }
             */

            if (isset($_POST ['option_order_53'])) {
                $tempSearchQuery .= " officers.officerStatus='5' and isLastPosting=1 
         and officers.id=stg_postings.officerid and officers.id=officerremarks.officerid and officerremarks.officerid=stg_postings.officerid and stg_postings.region=regions.id";
            } else {
                $tempSearchQuery .= "  officers.rankid='$rankid'  ";
                $tempSearchQuery .= " and officers.officerStatus='5' and isLastPosting=1 
         and officers.id=stg_postings.officerid and officers.id=officerremarks.officerid and officerremarks.officerid=stg_postings.officerid and stg_postings.region=regions.id";
            }

            if ($t == "yes") {
                if ($transfer != "Both" && $transfer != - 1 && $transfer != "REP") {
                    $tempSearchQuery .= " and transfer =\"$transfer\" ";
                }
                $tempSearchQuery .= " and officers.id=options.officerid and stg_postings.officerid=options.officerid ";
            } else if ($rp == "yes") {
                $tempSearchQuery .= " and officers.id=representations.officerid and stg_postings.officerid=representations.officerid";

                if ($frmrep != "" && $frmrep != "0000-00-00") {
                    $tempSearchQuery .= " and representations.createdon >=\"$frmrep\" ";
                }

                if ($torep != "" && $torep != "0000-00-00") {
                    $tempSearchQuery .= " and representations.createdon <=\"$torep\" ";
                }
            }

            if (isset($_POST ['optionRegion']) && $_POST ['optionRegion'] != - 1) {

                if ($rp == "yes") {
                    $tempSearchQuery .= " and ( repcity1=$_POST[optionRegion] || repcity2=$_POST[optionRegion] || repcity3=$_POST[optionRegion] )";
                } else {
                    $tempSearchQuery .= " and ( optioncity1=$_POST[optionRegion] || optioncity2=$_POST[optionRegion] || optioncity3=$_POST[optionRegion] )";
                }
            }

            if (isset($_POST ['city']) && $_POST ['city'] != - 1) {
                if ($rp == "yes") {
                    $tempSearchQuery .= " and ( repcity1=".$_POST['city']." || repcity2=".$_POST['city']." || repcity3= ".$_POST['city']." )";
                } else {
                    $tempSearchQuery .= " and ( optioncity1=".$_POST['city']." || optioncity2=".$_POST['city']." || optioncity3= ".$_POST['city']." )";
                }
            }

            if ($due == "Due") {
                $tempSearchQuery .= " and  officerremarks.Due=\"Yes\"";
            }

            if (isset($_POST ['region'])){
			if (count($_POST ['region']) > 0 && $_POST ['region'] [0] != - 1) {
                $tempSearchQuery .= " AND stg_postings.region IN (";
                $cnt = 0;
                foreach ($_POST [region] as $region) {
                    $tempSearchQuery .= "'" . $region . "'";
                    if ($cnt != count($_POST [region]) - 1) {
                        $tempSearchQuery .= ', ';
                    }
                    $cnt ++;
                }

                $tempSearchQuery .= " ) ";

                /*
                 * if($f == "yes") { $tempSearchQuery .= " and stg_postings.officerid=officerflags.officerid"; }
                 */
            }
		}

            if ($_POST ['batchfrom'] != '-1') {
                $tempSearchQuery .= " AND (officers.batch between '$_POST[batchfrom]' and '$_POST[batchto]')";
            }
            if ($ebatch != '') {
                $tempSearchQuery .= " AND officers.batch NOT IN ($ebatch)";
            }

            if (isset($_POST ['option_order_53'])) {

                $officerindOrder53 = AppBase::civilCodeforoption2011();
                // echo count(array_unique($officerindOrder53));
                $officers = "";
                for ($cnt = 0; $cnt < count($officerindOrder53); $cnt ++) {
                    $officers .= "'MO" . $officerindOrder53 [$cnt] . "'";
                    if ($cnt != count($officerindOrder53) - 1) {
                        $officers .= ",";
                    }
                }

                $tempSearchQuery .= "  and  officers.id IN  ($officers)";
            }

            /**
             * *********
             */
            if ($flagid != - 1) {
                $tempSearchQuery .= " UNION select officerflags.officerid as id, officers.civilCode,officers.name,officers.dateOfBirth,officers.retirementDate, region, regions.sequence, All_Remarks, Due from officerflags, officers, officerremarks,  stg_postings, regions";

                if (($transfer != "Both" && $transfer != - 1 && $transfer != "REP") || ((isset($_POST ['optionRegion']) && $_POST ['optionRegion'] != - 1) || (isset($_POST ['city']) && $_POST ['city'] != - 1))) {
                    /*
                     * $t="yes"; $tempSearchQuery .= " , options" ; $groupBY = " group by officers.id";
                     */
                } else if ($transfer == "REP") {

                    /*
                     * $rp = "yes"; $tempSearchQuery .= " , representations" ; $groupBY = " group by officers.id"; $frmrep = getSQLDate($_POST[repFrom]); $torep = getSQLDate($_POST[repTo]);
                     */
                }

                if (count($_POST ['region']) > 0 && $_POST ['region'] [0] != - 1) {
                    $r = "yes";
                }

                $tempSearchQuery .= " where officerflags.officerid=officers.id and officerflags.flagid=\"$flagid\" and  officers.officerStatus='5' and isLastPosting=1 
	        and officerflags.officerid=stg_postings.officerid 
	        and officerflags.id=officerremarks.officerid and officerremarks.officerid=stg_postings.officerid
	        and stg_postings.region=regions.id";

                /*
                 * if($t=="yes") { if($transfer!="Both" && $transfer!=-1) { $tempSearchQuery .= " and transfer =\"$transfer\" and YEAR(options.CreatedOn)=YEAR(CURRENT_DATE())"; } $tempSearchQuery .= " and officerflags.officerid=options.officerid and stg_postings.officerid=options.officerid " ; } else if($rp == "yes") { $tempSearchQuery .= " and officerflags.officerid=representations.officerid and stg_postings.officerid=representations.officerid " ; if(!in_array(array('', '0000-00-00'), $frmrep )) { //echo 'test'; $tempSearchQuery .= " and representations.createdon >=\"$frmrep\" "; } if($torep!="" && $torep!='0000-00-00') { $tempSearchQuery .= " and representations.createdon <=\"$torep\" "; } } if(isset($_POST[optionRegion]) && $_POST[optionRegion]!=-1 ) { if($rp == "yes") { $tempSearchQuery .= " and ( repcity1=$_POST[optionRegion] || repcity2=$_POST[optionRegion] || repcity3=$_POST[optionRegion] )"; } else { $tempSearchQuery .= " and ( optioncity1=$_POST[optionRegion] || optioncity2=$_POST[optionRegion] || optioncity3=$_POST[optionRegion] )"; } } if(isset($_POST[city]) && $_POST[city]!=-1) { if($rp == "yes") { $tempSearchQuery .= " and ( repcity1=$_POST[city] || repcity2=$_POST[city] || repcity3= $_POST[city] )"; } else { $tempSearchQuery .= " and ( optioncity1=$_POST[city] || optioncity2=$_POST[city] || optioncity3= $_POST[city] )"; } }
                 */

                if (count($_POST ['region']) > 0 && $_POST ['region'] [0] != - 1) {
                    $tempSearchQuery .= " AND stg_postings.region IN (";
                    $cnt = 0;
                    foreach ($_POST [region] as $region) {
                        $tempSearchQuery .= "'" . $region . "'";
                        if ($cnt != count($_POST [region]) - 1) {
                            $tempSearchQuery .= ', ';
                        }
                        $cnt ++;
                    }

                    $tempSearchQuery .= " ) ";

                    // $tempSearchQuery .= " and stg_postings.officerid=officerflags.officerid";
                }

                if ($_POST ['batchfrom'] != '-1') {
                    $tempSearchQuery .= " AND (officers.batch between '$_POST[batchfrom]' and '$_POST[batchto]')";
                }
                if ($ebatch != '') {
                    $tempSearchQuery .= " AND officers.batch NOT IN ($ebatch)";
                }

                if ($due == "Due") {
                    $tempSearchQuery .= " and  officerremarks.Due=\"Yes\"";
                }
            }

            if ($ccode == "CC") {
                $tempSearchQuery .= " $groupBY order by id asc ";
            } else {
                $tempSearchQuery .= " $groupBY order by sequence asc, id asc";
            }
        }

        // echo "Query - ".$tempSearchQuery;
        $_SESSION ['searchQuery'] = $tempSearchQuery;
        // die($tempSearchQuery);

        $officerResult = mysql_query($tempSearchQuery) or die(mysql_error() . "<br> test" . $tempSearchQuery);

        if (mysql_num_rows($officerResult) > 0) {
            while ($officerResultRow = mysql_fetch_array($officerResult)) {

                $data [] = $officerResultRow ['id'] . '&&&' . $officerResultRow ['Due'] . '&&&' . $officerResultRow ['All_Remarks'];
            }
        }

        return $data;
    }

    /*
     * This function gets the search for a name
     */

    public function getDueListSearchResultsForOfficer($rankid, $officerid) {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempRegionDAO = new RegionDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempConstantDAO = new ConstantDAO ();
        $officerVOList = array();

        $tempSearchQuery = "select id,civilCode,name,dateOfBirth,retirementDate from officers WHERE rankid='$rankid' and id='$officerid' and officerStatus='5'";

        $_SESSION [searchQuery] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        if (mysql_num_rows($officerResult) > 0) {
            // We find the fields number
            $numfields = mysql_num_fields($officerResult);

            // Now we put the names of fields in a Array
            for ($i = 0; $i < $numfields; $i ++) {
                $fieldname [$i] = mysql_field_name($officerResult, $i);
            }
            while ($row = mysql_fetch_array($officerResult)) {
                $newOfficerVO = new OfficerVO ();
                $tempCurrentPCityId = '';
                $tempCurrentDetails = explode("|", $tempStgPostingsDAO->getDueListCurrentPC($row ['id']));
                $tempCurrentPC = $tempCurrentDetails [0];
                $tempCurrentPCity = $tempCurrentDetails [1];
                $tempCurrentPZone = $tempCurrentDetails [2];
                // $tempCurrentPClass = $tempStgPostingsDAO->getCurrentPostingClass($row['id']);
                $tempRegionName = $tempCurrentDetails [4];
                $tempCurrentPosttypeId = $tempCurrentDetails [5];
                $tempCurrentPCityId = $tempCurrentDetails [7];

                $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '7', '2');
                $tempCurrentDelhiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '7', '2');

                $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDueListCurrentRegionRPosting($row ['id'], '15', '2');
                $tempCurrentMumbaiToPosting = $tempStgPostingsDAO->getDueListCurrentRegionToPosting($row ['id'], '15', '2');

                if ($tempCurrentPCity != "" or $tempCurrentPCity != 0) {
                    // $tempRegionSequence = $tempRegionDAO->getRegionSequence($tempCurrentPCity);
                    $tempRegionSequence = $tempCurrentDetails [6];
                } else {
                    $tempRegionSequence = "";
                }

                $newOfficerVO->setId($row ['id']);
                $newOfficerVO->setCivilCode($row ['civilCode']);
                $newOfficerVO->setName($row ['name']);
                $newOfficerVO->setDateOfBirth($row ['dateOfBirth']);
                $newOfficerVO->setRankid($rankid);
                $newOfficerVO->setCityname($tempCurrentPC);
                $newOfficerVO->setRegionabb($tempRegionName);
                $newOfficerVO->setRegion($tempCurrentPCity);
                $newOfficerVO->setSequence($tempRegionSequence);

                // Array for areas
                $duelistArray = array();

                // ###################################################################
                // Checking for SD(E)
                $tempSAEDelList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '3');
                $totalSAEDelDays = $tempSAEDelList;
                if ($totalSAEDelDays > 6) {
                    $SDRLeft = $totalSAEDelDays - 6;
                } else {
                    $SDRLeft = 0;
                }

                if ($totalSAEDelDays > 6) {
                    // $tempDueListVO = new DueListVO();
                    // $tempDueListVO->setRemarks('5.4');
                    // $duelistArray[count($duelistArray)]= $tempDueListVO;
                }
                // ###################################################################
                // ###################################################################
                // Checking for SM(E)
                $tempSAEMumList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '3');
                $totalSAEMumDays = $tempSAEMumList [0];
                if ($totalSAEMumDays > 6) {
                    $SDMLeft = $totalSAEMumDays - 6;
                } else {
                    $SDMLeft = 0;
                }

                if ($totalSAEMumDays >= 6) {
                    // $tempDueListVO = new DueListVO();
                    // $tempDueListVO->setRemarks('5.4');
                    // $duelistArray[count($duelistArray)]= $tempDueListVO;
                }
                // ###################################################################
                // Checking for SA(R+E)
                $tempSAREList = $tempOfficerDAO->calculateclasssummary($row ['id']);
                $totalSAREDays = $tempSAREList [5];

                if ($totalSAREDays >= 18) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay in A class (Regular) greater than or equal to 18 yrs. Completed tenure in A class. [Cl. 5.3.7 of TP]');
                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for SA(R+E+D)
                // $tempSAREDList = $tempStgPostingsDAO->getDueListSARED($row['id'],'1');
                $totalSAREDDays = $tempSAREList [4];

                if ($totalSAREDDays >= 22) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay in A class (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                $tempCurrentPostingList = $tempStgPostingsDAO->getCheckCurrentPosting($row ['id'], '1');

                // Checking for CSA(R+E)
                $tempCSAREList = $tempStgPostingsDAO->getCSPPHistory($row ['id'], '1');
                $totalCSAREDays = $tempCSAREList;

                if ($totalSAREDays >= 18 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('** Due for transfer to B/C class. [Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CSA(R+E) With Current Posting Class

                if ($totalCSAREDays >= 14 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Continuous stay in A class (Regular+Exempted) greater than or equal to 14 yrs. Completed continuous tenure in A class. **Due for transfer to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for SA(R+E+D) With Current Posting Class

                if ($totalSAREDDays >= 22 && $tempCurrentPClass == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer to B/C class. [2nd Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }
                // ###################################################################
                // Checking for Stay in Region(R)
                $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDueListCurrentRegion($row ['id']);

                $tempRegionList = $tempRegionDAO->getRegionsListWithoutDelhiMumbai();
                if (count($tempRegionList) > 0) {
                    for ($k = 0; $k < count($tempRegionList); $k ++) {
                        $tempRegionVO = $tempRegionList [$k];
                        $tempStayRegion = $tempStgPostingsDAO->getDueListStayinRegion($row ['id'], $tempRegionVO->getId());
                        $totalStayRegionDays = $tempStayRegion;

                        // Checking for Stay in Region(E)
                        $tempSAERegList = $tempStgPostingsDAO->getDueListSARRegionClassExempted($row ['id'], $tempRegionVO->getId(), '3', '1');
                        $totalSAERegDays = $tempSAERegList;
                        if ($totalSAERegDays > 6) {
                            $SDRegLeft = $totalSAERegDays - 6;
                        } else {
                            $SDRegLeft = 0;
                        }
                        $totalStayRegionExempted = $SDRegLeft + $totalStayRegionDays;

                        if ($totalStayRegionExempted >= 16) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Stay on Regular postings in ' . $tempRegionVO->getName() . ' region greater or equal to 16 yrs. Completed tenure of region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        if ($SDRegLeft > 0) {
                            $tempDueListVO = new DueListVO ();
                            $dremarks = 'Stay in Exempted Posting greater than 6 Yrs in ' . $tempRegionVO->getName() . ' [A]. Excess (' . $SDRegLeft . ') years added to Regular period in ' . $tempRegionVO->getName() . '. [Cl. 5.4 of TP]';
                            $tempDueListVO->setRemarks($dremarks);

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }

                        if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                            $tempCurrentPostCodeRegion = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                        } else {
                            $tempCurrentPostCodeRegion = $tempCurrentPostCodeRegion;
                        }

                        if ($totalStayRegionExempted >= 16 && $tempCurrentPostCodeRegion == $tempRegionVO->getId() && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('**Due for transfer from ' . $tempRegionVO->getName() . ' region. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                    }
                }
                // ###################################################################
                // Checking for SD(R)
                $tempSARDelhiMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '7', '2');
                $totalSARDelhiMumbaiDays = $tempSARDelhiMumbaiList + $SDRLeft;
                $calculateregiondelhisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '7');
                $calculateregionmumbaisummary = $tempOfficerDAO->calculateregionsummary($row ['id'], '15');

                if ($totalSARDelhiMumbaiDays >= 8) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay on Regular postings in Delhi greater or equal to 8 yrs. Completed tenure of Regular postings in Delhi. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                if ($SDRLeft > 0) {
                    $tempDueListVO = new DueListVO ();
                    $dremarks = 'Stay in Exempted Posting greater than 6yrs in Delhi CCA. Excess (' . $SDRLeft . ') years added to Regular period in Delhi CCA. [Cl. 5.4 of TP]';
                    $tempDueListVO->setRemarks($dremarks);

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CSD(R+E)
                $tempCSDREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '7');
                $totalCSDREDays = $tempCSDREList;

                // Checking for SD(R+E+D)
                $tempSAREDDelhiMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '7');
                $totalSAREDDelhiMumbaiDays = $tempSAREDDelhiMumbaiList;

                if ($calculateregiondelhisummary [0] >= 22) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay in Delhi (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                    $tempCurrentDelhiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                } else {
                    $tempCurrentDelhiPosting = $tempCurrentDelhiPosting;
                }

                // Checking for CSD(R) With Current Posting in Delhi(R)

                if ($totalSARDelhiMumbaiDays >= 8 && $tempCurrentDelhiPosting == 7 && $tempCurrentDelhiToPosting == 2) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Delhi  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CSD(R+E) With Current Posting in Delhi(R+E)

                if ($totalCSDREDays >= 14 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                if ($calculateregiondelhisummary [0] >= 22 && $tempCurrentDelhiPosting == 7 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Delhi to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }
                // ###################################################################
                // Checking for SM(R)
                $tempSARMumbaiList = $tempStgPostingsDAO->getDueListSARDelhiMumbaiExempted($row ['id'], '15', '2');
                $totalSARMumbaiDays = $tempSARMumbaiList + $SDMLeft;

                if ($totalSARMumbaiDays >= 8) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay on Regular postings in Mumbai greater or equal to 8 yrs. Completed tenure of Regular postings in Mumbai. [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                if ($SDMLeft > 0) {
                    $tempDueListVO = new DueListVO ();
                    $mremarks = 'Stay in Exempted Posting greater than 6yrs in Mumbai CCA. Excess (' . $SDMLeft . ') years added to Regular period in Mumbai CCA. [Cl. 5.4 of TP]';
                    $tempDueListVO->setRemarks($mremarks);

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CSM(R+E)
                $tempCSMREList = $tempStgPostingsDAO->getCSPPHistoryAndCity($row ['id'], '15');
                $totalCSMREDays = $tempCSMREList;

                // Checking for SM(R+E+D)
                $tempSAREDMumbaiList = $tempStgPostingsDAO->getDueListSAREDDelhiMumbai($row ['id'], '15');
                $totalSAREDMumbaiDays = $tempSAREDMumbaiList;

                if ($calculateregionmumbaisummary [0] >= 22) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Stay in Mumbai (Regular+Exempted+Deputation) greater than or equal to 22 yrs. Completed tenure in A class.  [2nd  Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                if ($tempCurrentPCityId == 152 or $tempCurrentPCityId == 163 or $tempCurrentPCityId == 180 or $tempCurrentPCityId == 234 or $tempCurrentPCityId == 355 or $tempCurrentPCityId == 480) {
                    $tempCurrentMumbaiPosting = $tempStgPostingsDAO->getDeemedRegionId($tempCurrentPCityId);
                } else {
                    $tempCurrentMumbaiPosting = $tempCurrentMumbaiPosting;
                }

                // Checking for SM(R) With Current Posting in Mumbai(R)
                if ($totalSARMumbaiDays >= 8 && $tempCurrentMumbaiPosting == 15 && $tempCurrentDelhiToPosting == '2') {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Regular Post of Mumbai  [Cl. 5.3.3 r.w. Cl. 5.3.4 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CSM(R+E) With Current Posting in Mumbai(R+E)
                if ($totalCSMREDays >= 14 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [1st Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for SD(R+E+D) With Current Posting in Delhi(R+E)
                if ($calculateregionmumbaisummary [0] >= 22 && $tempCurrentMumbaiPosting == 15 && ($tempCurrentDelhiToPosting == '2' or $tempCurrentDelhiToPosting == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('**Due for transfer out of Mumbai to B/C class. [2nd  Proviso to Cl. 5.3.7 of TP]');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }
                // ###################################################################
                // Checking for CSBC(R+E)
                $tempCSBCREList = $tempStgPostingsDAO->getCSInBCWithRE($row ['id']);
                $totalCSBCREDays = $tempCSBCREList;
                $finalDateArray = $tempStgPostingsDAO->getCSInBCWithREInYM($row ['id']);

                $tempCurrentPostingListbc = $tempStgPostingsDAO->getCheckCurrentPostingInBC($row ['id']);

                // Checking for csbc(R+e) With Current Posting in B Or C
                if ($totalCSBCREDays >= 6 && ($tempCurrentPClass == 2 or $tempCurrentPClass == 3) && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                    $tempDueListVO = new DueListVO ();
                    $tempDueListVO->setRemarks('Continously Posted in B/C for ' . $finalDateArray [year] . ' Years & ' . $finalDateArray [month] . ' Months');

                    $duelistArray [count($duelistArray)] = $tempDueListVO;
                }

                // Checking for CS in a Zone(R+E)
                $tempCSinNorthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '1');
                $tempCSinWestZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '2');
                $tempCSinSouthZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '3');
                $tempCSinEastZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '4');
                $tempCSinCentralZone = $tempStgPostingsDAO->getCSInZoneWithRE($row ['id'], '5');

                // $checkConstantValue = $tempConstantDAO->getOfficerConstant($row['id']);
                // Checking for CS in North Zone
                if ($checkConstantValue) {
                    if ($tempCSinNorthZone >= 16) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continous stay in North Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in North Area. [Cl. 5.3 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    if ($tempCSinNorthZone >= 16 && $tempCurrentPZone == 1 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of North Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CS in West Zone
                    if ($tempCSinWestZone >= 16) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continous stay in West Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in West Area. [Cl. 5.3 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    if ($tempCSinWestZone >= 16 && $tempCurrentPZone == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of West Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CS in South Zone
                    if ($tempCSinSouthZone >= 16) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continous stay in South Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in South Area. [Cl. 5.3 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    if ($tempCSinSouthZone >= 16 && $tempCurrentPZone == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of South Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CS in East Zone
                    if ($tempCSinEastZone >= 16) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continous stay in East Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in East Area. [Cl. 5.3 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    if ($tempCSinEastZone >= 16 && $tempCurrentPZone == 4 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of East Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }

                    // Checking for CS in Central Zone
                    if ($tempCSinCentralZone >= 16) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('Continous stay in Central Area (Regular+Exempted) greater than or equal to 16 yrs. Completed continuous tenure in Central Area. [Cl. 5.3 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                    if ($tempCSinCentralZone >= 16 && $tempCurrentPZone == 5 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                        $tempDueListVO = new DueListVO ();
                        $tempDueListVO->setRemarks('**Due for transfer out of Central Area on promotion to CIT. [Cl. 5.3.8 of TP]');

                        $duelistArray [count($duelistArray)] = $tempDueListVO;
                    }
                }
                // ###################################################################
                if ($rankid == 4) {
                    // Checking for CS at a Post(R)

                    $tempCurrentPostCodeR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '2');

                    if ($tempCurrentPostCodeR == 2) {
                        $tempCSonPostRegular = $tempStgPostingsDAO->getCSOnPost($row ['id'], '2');
                        $totalCSonPostRegularDays = $tempCSonPostRegular;
                        if ($totalCSonPostRegularDays >= 3 && $tempCurrentPosttypeId == 2 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continuing on the post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');

                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                    } else {
                        $tempCurrentPostCodeNR = $tempStgPostingsDAO->getDueListCurrentPostCode($row ['id'], '3');
                        $tempCSonPostNotRegular = $tempStgPostingsDAO->getCSOnPostOtherR($row ['id'], '3');
                        $totalCSonPostNotRegularDays = $tempCSonPostNotRegular;

                        if ($totalCSonPostNotRegularDays >= 3 && $tempCurrentPosttypeId == 3 && ($tempCurrentPosttypeId == '2' or $tempCurrentPosttypeId == '3')) {
                            $CSClass = $tempStgPostingsDAO->getCSInRE($row ['id']);
                            $tempDueListVO = new DueListVO ();
                            $tempDueListVO->setRemarks('Continuing on post for ' . $CSClass [year] . ' Years & ' . $CSClass [month] . 'Months. **Due for transfer from post. [Cl. 5.3.9 of TP]');
                            $duelistArray [count($duelistArray)] = $tempDueListVO;
                        }
                    }
                }
                if (count($duelistArray) > 0) {
                    $newOfficerVO->setDuelist($duelistArray);
                    $officerVOList [count($officerVOList)] = $newOfficerVO;
                    $data [] = array(
                        'id' => $newOfficerVO->getId(),
                        'civilcode' => $newOfficerVO->getCivilCode(),
                        'name' => $newOfficerVO->getName(),
                        'dateofbirth' => $newOfficerVO->getDateOfBirth(),
                        'rankid' => $newOfficerVO->getRankid(),
                        'cityname' => $newOfficerVO->getCityname(),
                        'regionname' => $newOfficerVO->getRegionabb(),
                        'region' => $newOfficerVO->getRegion(),
                        'duelist' => $newOfficerVO->getDuelist(),
                        'rtdate' => $newOfficerVO->getNewRetirementDate(),
                        'sequence' => $newOfficerVO->getSequence()
                    );
                }
            }
            if (count($duelistArray) > 0) {
                foreach ($data as $key => $row) {
                    $id [$key] = $row ['id'];
                    $civilcode [$key] = $row ['civilcode'];
                    $name [$key] = $row ['name'];
                    $dateofbirth [$key] = $row ['dateofbirth'];
                    $rankid [$key] = $row ['rankid'];
                    $cityname [$key] = $row ['cityname'];
                    $regionname [$key] = $row ['regionname'];
                    $region [$key] = $row ['region'];
                    $sequence [$key] = $row ['sequence'];
                    $rtdate [$key] = $row ['rtdate'];
                    $duelist [$key] = $row ['duelist'];
                }
                array_multisort($sequence, SORT_ASC, $data);
            }
            return $data;
        } else {
            $data = array();
            return $data;
        }
    }

    public function insertintochildtables($officerid, $civilCode, $tablename = '') {
        $tempSpouseDAO = new SpouseDAO ();
        $tempChildrenDAO = new ChildrenDAO ();
        $tempEduDAO = new EducationDAO ();
        $tempTrainingDAO = new TrainingDAO ();
        $tempLeaveDAO = new LeaveDAO ();
        $tempAcrDAO = new AcrDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempAchievementDAO = new AchievementDAO ();
        if ($tablename != '') {
            // Insert into spouse table
            if ($tablename == 'spouses') {
                $tempSpouseDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into children table
            if ($tablename == 'childrens') {
                $tempChildrenDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into education table
            if ($tablename == 'educations') {
                $tempEduDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into training table
            if ($tablename == 'trainings') {
                $tempTrainingDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into leave table
            if ($tablename == 'leaverecords') {
                $tempLeaveDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into acr table
            if ($tablename == 'acrs') {
                $tempAcrDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into acr table
            if ($tablename == 'postings') {
                $tempPostingDAO->insertintotable($officerid, $civilCode);
            }
            // Insert into acr table
            if ($tablename == 'achievements') {
                $tempAchievementDAO->insertintotable($officerid, $civilCode);
            }
        } else {
            $tempSpouseDAO->insertintotable($officerid, $civilCode);
            // Insert into children table
            $tempChildrenDAO->insertintotable($officerid, $civilCode);

            // Insert into education table
            $tempEduDAO->insertintotable($officerid, $civilCode);

            // Insert into training table
            $tempTrainingDAO->insertintotable($officerid, $civilCode);

            // Insert into leave table
            $tempLeaveDAO->insertintotable($officerid, $civilCode);

            // Insert into acr table
            $tempAcrDAO->insertintotable($officerid, $civilCode);

            // Insert into acr table
            $tempPostingDAO->insertintotable($officerid, $civilCode);

            // Insert into acr table
            $tempAchievementDAO->insertintotable($officerid, $civilCode);
        }
    }

    public function updatetable($tablename = '') {
		
        //saving changed value
        //$this->saveOfficerChangeDetails();
        //now updating requested data 
        $tempOfficerVO = unserialize($_SESSION ['officerVO']);
		//echo "<pre>"; print_r($tempOfficerVO);die;
        $id = $tempOfficerVO->getId();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $civilCode = $tempOfficerVO->getCivilCode();
        //if(isset($tempOfficerVO->getId()) && $tempOfficerVO->getId() != ''){
        $newid = $tempOfficerVO->getId();
        $old_civil_code = $this->getOfficerData($newid, '')->getCivilCode();
        /* } else {
          $newid = "MO" . $civilCode;
          } */
        if ($old_civil_code != $civilCode) {
            // method to insert civil_code_change history
            $status_insert = $this->change_civil_code($old_civil_code, $civilCode, $id);
        }
        // commented on 22-March-2010 by Vandana as civil code changes are being handled at the database level.
        // Delete from child tables
        // $this->deletechildtables($id,$tablename);
        // Insert into child tables
        // $this->insertintochildtables($newid,$civilCode,$tablename);

        $employeeCode = $tempOfficerVO->getEmployeeCode();
        $name = $tempOfficerVO->getName();
        $dateOfBirth = getSQLDate($tempOfficerVO->getDateOfBirth());
        $gender = $tempOfficerVO->getGender();
        $batch = $tempOfficerVO->getBatch();
        $domicileState = $tempOfficerVO->getDomicileState();
        $joiningDate = getSQLDate($tempOfficerVO->getJoiningDate());
        $rankid = $tempOfficerVO->getRankid();
        $gradeid = $tempOfficerVO->getGradeid();
        $city = $tempOfficerVO->getCity();
        if ($city == "") {
            $city = 0;
        }
        $postcode = $tempOfficerVO->getPostcode();
        $appointmentDate = getSQLDate($tempOfficerVO->getAppointmentDate());
        $seniority = $tempOfficerVO->getSeniority();

        $officerStatus = $tempOfficerVO->getOfficerStatus();
        $retirementDate = getSQLDate($tempOfficerVO->getRetirementDate());
        $exitDate = getSQLDate($tempOfficerVO->getExitDate());
        $demiseDate = getSQLDate($tempOfficerVO->getDemiseDate());
        $exitRemark = $tempOfficerVO->getExitRemark();
		$exitRemark = addslashes($exitRemark);
        $currentAddress = mysql_real_escape_string($tempOfficerVO->getCurrentAddress());
        $currentState = $tempOfficerVO->getCurrentState();
        $currentCity = $tempOfficerVO->getCurrentCity();
        $currentPostalCode = $tempOfficerVO->getCurrentPostalCode();
        $phoneNumberRes = $tempOfficerVO->getPhoneNumberRes();
        $permanentAddress = mysql_real_escape_string($tempOfficerVO->getPermanentAddress());
        $permanentState = $tempOfficerVO->getPermanentState();
        $permanentCity = $tempOfficerVO->getPermanentCity();
        $permanentPostalCode = $tempOfficerVO->getPermanentPostalCode();
        $profilestatus = $tempOfficerVO->getProfilestatus();
        $status = $tempOfficerVO->getOfficerStatus(); // changed to this from getStaus by Vandana on 4-01-2010
        $religionid = $tempOfficerVO->getReligionid();
        $categoryid = $tempOfficerVO->getCategoryid();
        $confirmationDate = getSQLDate($tempOfficerVO->getDateOfConfirmation());
        $appointmentDate = getSQLDate($tempOfficerVO->getAppointmentDate());
        // chg by saurabh
        $minorityid = $tempOfficerVO->getMinority();
        $minorityRemarks = mysql_real_escape_string($tempOfficerVO->getminorityRemarks());
        $subcategory = $tempOfficerVO->getsubCategory();
        // chg ends
		
		////added by Shalini @13-03-2018 to equate retirment date and exit date when changing dateOfBirth
		if (($status == 5) && ($retirementDate != $exitDate)){
			 $exitDate = $retirementDate;
		}
        //added by niraj.lal.rahi
		//email case
		$valid = 0;
		$same_mobileNumber = 0;
		if(!empty($_REQUEST['email_text'])) {
			$email = $tempOfficerVO->getEmail();
			$valid = $this->same_email($email, $civilCode);
		} else
			$email = '';
		if(!empty($_REQUEST['mobileNumber'])) {
			$mobileNumber = $tempOfficerVO->getMobileNumber();
			$same_mobileNumber = $this->same_mobileNumber($mobileNumber, $civilCode);
		} else
			$mobileNumber = '';
        
        if ($employeeCode != '' || $employeeCode != null) {
            $same_employeeCode = $this->same_employeeCode($employeeCode, $civilCode);
        }
        if ($valid != 0)
            $_SESSION['error'] = "Sorry! Email already exists.";
        if ($same_mobileNumber != 0)
            $_SESSION['mobile_error'] = "Sorry! Mobile already exists.";
        if ($same_employeeCode != 0)
            $_SESSION['employeeError'] = "Sorry! Employee Code already exists.";


        //End here
        if (!isset($_SESSION['error']) && !isset($_SESSION['mobile_error']) && !isset($_SESSION['employeeError'])) {
            if (1 != 1) { //$_SESSION ['role'] == 14   $minorityid,$minorityRemarks,$subcategory added by saurabh
                // updatetable updated by kanika on 12.11.2009 to solve demise date issue .removed postcode from update statement
                $updatequery = "update officers set id='$newid',employeeCode='$employeeCode',civilCode='$civilCode',name='$name',batch='$batch',gender='$gender',currentAddress='$currentAddress',currentCity='$currentCity',currentState='$currentState',currentCountry='$currentCountry',currentPostalCode='$currentPostalCode',permanentAddress='$permanentAddress',permanentCity='$permanentCity',permanentState='$permanentState',permanentCountry='$permanentCountry',permanentPostalCode='$permanentPostalCode',email='$email',mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',retirementDate='$retirementDate',exitDate='$exitDate',exitRemark='$exitRemark',joiningDate='$joiningDate',appointmentDate='$appointmentDate', dateOfConfirmation='$confirmationDate',rankid='$rankid',gradeid='$gradeid',domicileState='$domicileState',officerStatus='$officerStatus',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP,demiseDate='$demiseDate',city='$city',profilestatus='$profilestatus',status='$status',religionid='$religionid',categoryid='$categoryid',minority='$minorityid',minorityRemarks='$minorityRemarks',subCategory='$subcategory'";
            } else { // $minorityid added
                $updatequery = "update officers set id='$newid',employeeCode='$employeeCode',civilCode='$civilCode',
					name='$name',batch='$batch',gender='$gender',currentAddress='$currentAddress',currentCity='$currentCity',
					currentState='$currentState',currentCountry='$currentCountry',currentPostalCode='$currentPostalCode',
					permanentAddress='$permanentAddress',permanentCity='$permanentCity',permanentState='$permanentState',
					permanentCountry='$permanentCountry',permanentPostalCode='$permanentPostalCode',
					email='$email',mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',dateOfBirth='$dateOfBirth',
					retirementDate='$retirementDate',exitDate='$exitDate',exitRemark='$exitRemark',
					joiningDate='$joiningDate',appointmentDate='$appointmentDate',dateOfConfirmation='$confirmationDate', 
					rankid='$rankid',gradeid='$gradeid',domicileState='$domicileState',officerStatus='$officerStatus',
					modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP,demiseDate='$demiseDate',city='$city',
					profilestatus='$profilestatus',status='$status',religionid='$religionid',categoryid='$categoryid',
					minority='$minorityid',minorityRemarks='$minorityRemarks',subCategory='$subcategory'";
            }

            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
			
			
			///update email in users table too ----Added by shalini 14nov2017
			$update_userstable = "UPDATE `users` SET email = '".$email."' ,`mobile`='".$mobileNumber."' , `modifiedBy`='$_SESSION[userId]' WHERE `username` = '$civilCode'";
			mysql_query($update_userstable);
			
            // commented by Vandana on 4-feb-2010 to avoid update of these table as no civil code will be changed from UI
            /*
             * $updatequery="update officerflags set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update options set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update achievements set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update acrs set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update childrens set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update educations set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update leaverecords set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update officerconstants set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update postings set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update spouses set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update stg_postings set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update temp_logs set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update trainings set officerid='$newid' where officerid='$id'"; mysql_query($updatequery); $updatequery="update internal_transfers set officerId='$newid' where officerId='$id'"; mysql_query($updatequery); $updatequery="update transfer_order_details_as_issued set officer_id='$newid' where officer_id='$id'"; mysql_query($updatequery); $updatequery="update transfer_order_officer set officer_id='$newid' where officer_id='$id'"; mysql_query($updatequery); $updatequery="update users set officerid='$newid',username='$civilCode' where officerid='$id'"; mysql_query($updatequery); $currentPostid = explode("|",$tempStgPostingsDAO->getViewProfileCurrentPostid($id)); $gradename = getColumnName($gradeid, 'grades'); $updatequery="update stg_postings set gradeid='$gradeid',gradename='$gradename' where officerid='$newid' and postid='$currentPostid[1]' AND id='$currentPostid[0]'"; //mysql_query($updatequery); change ends here
             */

            $updatequery = "update postings set gradeid='$gradeid', modifiedBy='$_SESSION[userId]' where officerid='$newid' and postid='$currentPostid[1]' AND id='$currentPostid[0]'";
            // mysql_query($updatequery);
            // //added by Vandana on 4-01 to update last postings for status not equal to 5
            if ($status != '5') {
                echo $_REQUEST['lastPostingDel'];
                die('tets');

                $officerQuery="SELECT exitDate FROM `officers` WHERE id='$newid'";
                $officerDataResult = mysql_query($officerQuery) or die(mysql_error());
                $officerNumfields = mysql_num_fields($officerDataResult);
                
                if($officerNumfields>0){
                    while ($row = mysql_fetch_object($officerDataResult)) {
                        $exitDate=$row->exitDate;
                    }
                    $qryPending="SELECT id FROM `postings` WHERE officerid='$newid' AND islastposting=4 ORDER BY `postings`.`id` DESC";
                    $qryPendingResult = mysql_query($qryPending) or die(mysql_error());
                    $numfieldsPending = mysql_num_fields($qryPendingResult);
                    if($numfieldsPending>0){
                        while ($row = mysql_fetch_object($qryPendingResult)) {
                            $pendingPostingRemoveQuery="update postings set isActive=0,islastposting=0,modifiedBy='".$_SESSION['userId']."' where id='".$row->id."'";
                            $Result = mysql_query($pendingPostingRemoveQuery);
                        }

                    }
                    
                    $qryLast="SELECT id FROM `postings` WHERE officerid='$newid' AND islastposting=1 ORDER BY `postings`.`id` DESC";
                    $qryLastResult = mysql_query($qryLast) or die(mysql_error());
                    $numfieldsLast = mysql_num_fields($qryLastResult);
                    if($numfieldsLast>0){
                        while ($row = mysql_fetch_object($qryLastResult)) {
                            $pendingPostingRemoveQuery="update postings set islastposting=0,toDate='".$exitDate."',modifiedBy='".$_SESSION['userId']."' where id='".$row->id."'";
                            $Result = mysql_query($pendingPostingRemoveQuery);
                        }

                    }

                    $updatequery = "update postings set isLastPosting = 0, modifiedBy='$_SESSION[userId]' where officerid='$newid'";
                    mysql_query($updatequery);
                }

            }
            // changes done by Sonal ----add if condition for decrement of seniority by 1 in case of retired officer
            $officerStatus = $tempOfficerVO->getOfficerStatus();
            $oldseniority = trim($_POST ['oldseniority']);

            $seniority = trim($_POST ['seniority']);
            $oldseniority = trim($_POST ['oldseniority']);

            $statusRetired = ""; // Added By Anshu Porwal @ 05-Sep-2012
            if ($officerStatus == '0') {
                // echo "Done - Work Pefactly ";
                $selectquery = "select id, seniority from officers where seniority > '$oldseniority' AND gradeid='$gradeid' order by seniority";
                $selectresult = mysql_query($selectquery);
                if (mysql_num_rows($selectresult) > 0) {
                    while ($selectrow = mysql_fetch_array($selectresult)) {
                        $newseniority = $selectrow ['seniority'] - 1;
                        $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                        // echo "<br/> Update - ".$updatepostquery;
                        mysql_query($updatepostquery);
                    }
                }
                $updatequery = "update officers set seniority=0 , modifiedBy='$_SESSION[userId]' where civilCode='$civilCode'";
                mysql_query($updatequery);

                $statusRetired = 'yes'; // Add By Anshu Porwal @ 05-Sep-2012
            }
            // change ends here
            // Change Done By Anshu Porwal @ 05-Sep-2012
            // Comment if block because below condition never comes true
            // oldseniority is always 0 or number
            /*
             * if(($seniority!="") && ($oldseniority=="")) { echo "<br/> seniority!='' AND oldseniority==''"; $selectquery = "select * from officers where seniority>='$seniority' AND gradeid='$gradeid'"; $selectresult = mysql_query($selectquery); if(mysql_num_rows($selectresult)>0) { while($selectrow = mysql_fetch_array($selectresult)) { if($selectrow['seniority']==$oldseniority) { $newseniority = $seniority; $updatepostquery = "update officers set seniority='' WHERE id='$selectrow[id]'"; echo "<br/> Update Query - ".$updatepostquery; //mysql_query($updatepostquery); } elseif($selectrow['seniority']>$oldseniority) { $newseniority = $selectrow['seniority']+1; $updatepostquery = "update officers set seniority='$newseniority' WHERE id='$selectrow[id]'"; echo "<br/> Update Query - ".$updatepostquery; //mysql_query($updatepostquery); } } } $updatepostquery = "update officers set seniority='$seniority' WHERE id='$id'"; echo "<br/> Update Query - ".$updatepostquery; //mysql_query($updatepostquery); }
             */
            if (($seniority == "") && ($oldseniority != "") && ($statusRetired != 'yes')) {
                // echo "Done - Work Pefactly ";
                $selectquery = "select * from officers where seniority>='$oldsenority' AND gradeid='$gradeid' order by seniority";
                $selectresult = mysql_query($selectquery);
                if (mysql_num_rows($selectresult) > 0) {
                    while ($selectrow = mysql_fetch_array($selectresult)) {
                        if ($selectrow ['seniority'] == $oldseniority) {
                            $newseniority = $seniority;
                            $updatepostquery = "update officers set seniority='', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            // echo "<br/> Update Query - ".$updatepostquery;
                            mysql_query($updatepostquery);
                        } elseif ($selectrow ['seniority'] > $oldseniority) {
                            $newseniority = $selectrow ['seniority'] - 1;
                            $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            // echo "<br/> Update Query - ".$updatepostquery;
                            mysql_query($updatepostquery);
                        }
                    }
                }
                $updatepostquery = "update officers set seniority='$seniority', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
                // echo "<br/> Update Query - ".$updatepostquery;
                mysql_query($updatepostquery);
            } elseif (($seniority > $oldseniority) && ($statusRetired != 'yes')) {
                // echo "Done Work Perfactly";
                $selectquery = "select * from officers where seniority>='$oldseniority' AND gradeid='$gradeid' order by seniority";
                $selectresult = mysql_query($selectquery);
                if (mysql_num_rows($selectresult) > 0) {
                    while ($selectrow = mysql_fetch_array($selectresult)) {
                        if ($selectrow ['seniority'] == $oldseniority) {
                            $newseniority = $seniority;
                            $updatepostquery = "update officers set seniority='$newseniority' , modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            mysql_query($updatepostquery);
                        }     // Commented By Anshu Porwal @ 05-Sep-2012
                        /*
                         * elseif($selectrow['seniority']>$seniority) { $newseniority = $selectrow['seniority']+1; $updatepostquery = "update officers set seniority='$newseniority' WHERE id='$selectrow[id]'"; mysql_query($updatepostquery); }
                         */ elseif ($selectrow ['seniority'] == $seniority) {
                            $newseniority = $selectrow ['seniority'] - 1;
                            $updatepostquery = "update officers set seniority='$newseniority' , modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            mysql_query($updatepostquery);
                        }     // Condition Added By Anshu Porwal @ 05-Sep-2012 Update Seniority Between seniority And oldseniority
                        elseif ($selectrow ['seniority'] > $oldseniority && $selectrow ['seniority'] < $seniority) {
                            $newseniority = $selectrow ['seniority'] - 1;
                            $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            mysql_query($updatepostquery);
                        }
                    }
                }
                $updatepostquery = "update officers set seniority='$seniority', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
                mysql_query($updatepostquery);
            } elseif (($seniority < $oldseniority) && ($statusRetired != 'yes')) {
                // echo "Done Work Perfactly";
                if ($seniority > 0) {
                    $selectquery = "select * from officers where seniority>='$seniority' AND seniority<='$oldseniority' AND gradeid='$gradeid' order by seniority ";
                    $selectresult = mysql_query($selectquery);
                    if (mysql_num_rows($selectresult) > 0) {
                        while ($selectrow = mysql_fetch_array($selectresult)) {
                            if ($selectrow ['seniority'] == $oldseniority) {
                                $newseniority = $seniority;
                                $updatepostquery = "update officers set seniority='$newseniority' , modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                                mysql_query($updatepostquery);
                            } elseif ($selectrow ['seniority'] == $seniority) {
                                $newseniority = $seniority + 1;
                                $updatepostquery = "update officers set seniority='$newseniority' , modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                                mysql_query($updatepostquery);
                            } elseif ($selectrow ['seniority'] > $seniority) {
                                $newseniority = $selectrow ['seniority'] + 1;
                                $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                                mysql_query($updatepostquery);
                            }
                        }
                    }
                    $updatepostquery = "update officers set seniority='$seniority', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
                    mysql_query($updatepostquery);
                } elseif ($seniority == 0) {
                    $selectquery = "select id, seniority from officers where seniority > '$oldseniority' AND gradeid='$gradeid' order by seniority";
                    $selectresult = mysql_query($selectquery);
                    if (mysql_num_rows($selectresult) > 0) {
                        while ($selectrow = mysql_fetch_array($selectresult)) {
                            $newseniority = $selectrow ['seniority'] - 1;
                            $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                            // echo "<br/> Update - ".$updatepostquery;
                            mysql_query($updatepostquery);
                        }
                    }
                    $updatequery = "update officers set seniority=0, modifiedBy='$_SESSION[userId]' where civilCode='$civilCode'";
                    mysql_query($updatequery);
                } else {
                    // Do Nothing Number Is Not a Positive Integer
                }
            }
        }
    }

    // --------------Function added by pulkit for update by cca used in edit-io-info.php-----
    public function updatetableForCCA() {
        $tempOfficerVO = unserialize($_SESSION ['officerVO']);
        $id = $tempOfficerVO->getId();
        $tempStgPostingsDAO = new StgPostingsDAO ();

        $employeeCode = $tempOfficerVO->getEmployeeCode();
        $name = $tempOfficerVO->getName();
        $dateOfBirth = getSQLDate($tempOfficerVO->getDateOfBirth());
        $gender = $tempOfficerVO->getGender();
        $batch = $tempOfficerVO->getBatch();
        $domicileState = $tempOfficerVO->getDomicileState();
        $joiningDate = getSQLDate($tempOfficerVO->getJoiningDate());
        $rankid = $tempOfficerVO->getRankid();
        $gradeid = $tempOfficerVO->getGradeid();
        $city = $tempOfficerVO->getCity();
        $postcode = $tempOfficerVO->getPostcode();
        $appointmentDate = getSQLDate($tempOfficerVO->getAppointmentDate());
        $seniority = $tempOfficerVO->getSeniority();
        $officerStatus = $tempOfficerVO->getOfficerStatus();
        $retirementDate = getSQLDate($tempOfficerVO->getRetirementDate());
        $exitDate = getSQLDate($tempOfficerVO->getExitDate());
        $demiseDate = getSQLDate($tempOfficerVO->getDemiseDate());
        $exitRemark = $tempOfficerVO->getExitRemark();
		$exitRemark = addslashes($exitRemark);
        $currentAddress = $tempOfficerVO->getCurrentAddress();
        $currentState = $tempOfficerVO->getCurrentState();
        $currentCity = $tempOfficerVO->getCurrentCity();
        $currentPostalCode = $tempOfficerVO->getCurrentPostalCode();
        $phoneNumberRes = $tempOfficerVO->getPhoneNumberRes();
        $mobileNumber = $tempOfficerVO->getMobileNumber();
        $permanentAddress = $tempOfficerVO->getPermanentAddress();
        $permanentState = $tempOfficerVO->getPermanentState();
        $permanentCity = $tempOfficerVO->getPermanentCity();
        $permanentPostalCode = $tempOfficerVO->getPermanentPostalCode();
        $profilestatus = $tempOfficerVO->getProfilestatus();
        $email = $tempOfficerVO->getEmail();
        $status = $tempOfficerVO->getStatus();
        $religionid = $tempOfficerVO->getReligionid();
        $categoryid = $tempOfficerVO->getCategoryid();
        // chg by saurabh
        $minorityid = $tempOfficerVO->getMinority();
        $minorityRemarks = $tempOfficerVO->getminorityRemarks();
        $subcategory = $tempOfficerVO->getsubCategory();
        // chg ends
        if ($_SESSION ['role'] == 14) { // $minorityid,$minorityRemarks,$subcategory added by saurabh
            $updatequery = "update officers set employeeCode='$employeeCode',gender='$gender',currentAddress='$currentAddress',currentCity='$currentCity',currentState='$currentState',currentPostalCode='$currentPostalCode',permanentAddress='$permanentAddress',permanentCity='$permanentCity',permanentState=$permanentState,permanentPostalCode='$permanentPostalCode',email='$email',mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',domicileState='$domicileState',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP,religionid='$religionid',categoryid='$categoryid',minority='$minorityid',minorityRemarks='$minorityRemarks',subCategory='$subcategory'";
        } else { // $minorityid added
            $updatequery = "update officers set employeeCode='$employeeCode',gender='$gender',currentAddress='$currentAddress',currentCity='$currentCity',currentState='$currentState',currentPostalCode='$currentPostalCode',permanentAddress='$permanentAddress',permanentCity='$permanentCity',permanentState=$permanentState,permanentPostalCode='$permanentPostalCode',email='$email',mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',domicileState='$domicileState',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP,religionid='$religionid',categoryid='$categoryid',minority='$minorityid',minorityRemarks='$minorityRemarks',subCategory='$subcategory'";
        }

        $updatequery = $updatequery . " where id='$id'";
        mysql_query($updatequery);

        $tempPostingVO = $tempStgPostingsDAO->getLastPostingListForOfficer($_REQUEST ['id']);

        if ($tempPostingVO->getPosttypename() == "Regular" or $tempPostingVO->getPosttypename() == "Exempted") {
            $updatequery = "update posts set address = '" . $_POST [Address] . "', fax = '" . $_POST [Fax] . "', extensionNo = '" . $_POST [phoneNumber] . "' , modifiedBy='$_SESSION[userId]' where code ='" . $tempPostingVO->getPostid() . "' ";
            // echo $updatequery;
            mysql_query($updatequery);
        } else {
            $updatequery = "update postings set address = '" . $_POST [Address] . "', fax = '" . $_POST [Fax] . "', extensionNo = '" . $_POST [phoneNumber] . "' , modifiedBy='$_SESSION[userId]' where id ='" . $tempPostingVO->getid() . "' ";
            // echo $updatequery;
            mysql_query($updatequery);
        }
    }

    // ------------------------------------------------------------------------------------
    public function updatedummyofficertable() {
        $tempOfficer1VO = unserialize($_SESSION ['officerVO']);
        $id = $tempOfficer1VO->getId();
        $civilCode = $tempOfficer1VO->getCivilCode();
       // $newid = "MO" . $civilCode;
        /*
         * Changed By Pulkit Changes:- Following Commited Code was replaced $insquery="INSERT into dummy_officers
          (id,employeeCode,civilCode,name,batch,gender,city,postcode,currentAddress,currentCity,currentState,
          currentCountry,currentPostalCode,permanentAddress,permanentCity,permanentState,permanentCountry,
          permanentPostalCode,email,password,mobileNumber,phoneNumberRes,dateOfBirth,retirementDate,exitDate,
          exitRemark,reportingTo,joiningDate,appointmentDate,rankid,gradeid,domicileState,status,officerStatus,
          createdBy,createdOn,modifiedBy,modifiedOn,isActive,demiseDate,seniority,profilestatus,otheraddress,
          othernumber,autoid,religionid,categoryid,fax,minorityRemarks,subCategory,minority)"; $insquery=$insquery.
          " SELECT * from officers WHERE id='$id'";
         */
        $insquery = "INSERT INTO dummy_officers(id,gender,domicileState,currentAddress,currentCity,
					currentState,currentCountry,currentPostalCode,categoryid,permanentAddress,permanentCity,
					permanentCountry,permanentPostalCode,permanentState,email,phoneNumberRes,mobileNumber,religionid,
					minority,minorityRemarks,subCategory) VALUES ('$id','','N','-1','','','-1','','','-1','','','','','-1','','','','-1','-1','','-1')";

        // echo $insquery."</br>";die;
        $insresult = mysql_query($insquery);

        $name = $tempOfficer1VO->getName();
        $currentAddress = $tempOfficer1VO->getCurrentAddress();
        $currentState = $tempOfficer1VO->getCurrentState();
        $currentCity = $tempOfficer1VO->getCurrentCity();
        $currentCountry = $tempOfficer1VO->getCurrentCountry();
        $currentPostalCode = $tempOfficer1VO->getCurrentPostalCode();
        $phoneNumberRes = $tempOfficer1VO->getPhoneNumberRes();
        $mobileNumber = $tempOfficer1VO->getMobileNumber();
        $email = $tempOfficer1VO->getEmail();
        $employeeCode = $tempOfficer1VO->getEmployeeCode();
        $batch = $tempOfficer1VO->getBatch();
        $gender = $tempOfficer1VO->getGender();
        $permanentAddress = $tempOfficer1VO->getPermanentAddress();
        $permanentState = $tempOfficer1VO->getPermanentState();
        $permanentCity = $tempOfficer1VO->getPermanentCity();
        $permanentPostalCode = $tempOfficer1VO->getPermanentPostalCode();
        $permanentCountry = $tempOfficer1VO->getPermanentCountry();
        $email = $tempOfficer1VO->getEmail();
        $domicileState = $tempOfficer1VO->getDomicileState();
        $religionid = $tempOfficer1VO->getReligionid();
        $categoryid = $tempOfficer1VO->getCategoryid();
        $minorityid = $tempOfficer1VO->getMinority();
        // echo $minorityid."mino name ";
        $minorityRemarks = $tempOfficer1VO->getminorityRemarks();
        $subcategory = $tempOfficer1VO->getsubCategory();
        // updated by kanika for edit my profile -23/9/09 employeeCode='$employeeCode',
        $updatequery = "update dummy_officers set civilCode='$civilCode',name='$name',
					batch='$batch',gender='$gender',currentAddress='$currentAddress',currentCity='$currentCity',
					currentState='$currentState',currentCountry='$currentCountry',currentPostalCode='$currentPostalCode',
					permanentAddress='$permanentAddress',permanentCity='$permanentCity',permanentState='$permanentState',
					permanentCountry='$permanentCountry',permanentPostalCode='$permanentPostalCode',email='$email',
					mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',dateOfBirth='$dateOfBirth',
					retirementDate='$retirementDate',exitDate='$exitDate',exitRemark='$exitRemark',
					joiningDate='$joiningDate',appointmentDate='$appointmentDate',rankid='$rankid',gradeid='$gradeid',
					domicileState='$domicileState',officerStatus='$officerStatus',modifiedBy='$_SESSION[userId]',
					modifiedOn=CURRENT_TIMESTAMP,demiseDate='$demiseDate',seniority='$seniority',city='$city',
					postcode='$postcode',profilestatus='$profilestatus',status='$status',religionid='$religionid',
					categoryid='$categoryid',minority='$minorityid',minorityRemarks='$minorityRemarks',subCategory='$subcategory'";

        $updatequery = $updatequery . " where id='$id'";
        mysql_query($updatequery);

        $deletequery = "delete from dummy_officers where id='$id'";
        // mysql_query($deletequery);
        // Modified by: Sonal Singhal
        // Modified on: 17-02-10
        // Reason: ------restriction on duplicate entries in approval form for officers information
        ///////update employee code in officers table without approval --Added by Shalini 10July2017
		$mod_by = $_SESSION['userId'];
        $updateEmpCode = "UPDATE officers SET employeeCode='$employeeCode', modifiedBy='".$_SESSION['userId']."' where civilCode='$civilCode'";
		//echo  $updateEmpCode; die;
        mysql_query($updateEmpCode);
        /////////////updation ends 
	
		//-- 21-06-2018 no approvel require for CCA
		$query = "update officers set currentAddress='" .$_POST [currentAddress]. "',currentCity='" .$_POST [currentCity]. "'
		,currentState='" .$_POST [currentState]. "',currentPostalCode='" .$_POST [currentPostalCode]. "' 
		,phoneNumberRes='" .$_POST [phoneNumberRes]. "',permanentAddress='" .$_POST [permanentAddress]. "' 
		,permanentCity='" .$_POST [permanentCity]. "',permanentState='" .$_POST [permanentState]. "' 
		,permanentPostalCode='" .$_POST [permanentPostalCode]. "'
		WHERE id='" . $id. "'";
	
		mysql_query ( $query );
		
		//--End

        if ($_POST [PassGender] != $_POST [gender]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='gender'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','gender','$_POST[PassGender]','$_POST[gender]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassDomicileState] != $_POST [domicileState]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='domicileState'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','domicileState','$_POST[PassDomicileState]','$_POST[domicileState]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
       /* if ($_POST [PassCurrentAddress] != $_POST [currentAddress]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='currentAddress'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','currentAddress','$_POST[PassCurrentAddress]','$_POST[currentAddress]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassCurrentCity] != $_POST [currentCity]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='currentCity'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','currentCity','$_POST[PassCurrentCity]','$_POST[currentCity]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassCurrentState] != $_POST [currentState]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='currentState'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','currentState','$_POST[PassCurrentState]','$_POST[currentState]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassCurrentPostalCode] != $_POST [currentPostalCode]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='currentPostalCode'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','currentPostalCode','$_POST[PassCurrentPostalCode]','$_POST[currentPostalCode]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassPhoneNumberRes] != $_POST [phoneNumberRes]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='phoneNumberRes'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','phoneNumberRes','$_POST[PassPhoneNumberRes]','$_POST[phoneNumberRes]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }*/
        /* niraj.lal.rahi
          if ($_POST [PassMobileNumber] != $_POST [mobileNumber]) {
          $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='mobileNumber'";
          $deleteresult = mysql_query ( $deletequery );

          $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
          $insquery = $insquery . " values('$id','dummy_officers','mobileNumber','$_POST[PassMobileNumber]','$_POST[mobileNumber]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
          $insresult = mysql_query ( $insquery );
          } */
        /* commented by niraj.lal.rahi as no need to approval for this.
          if ($_POST [PassEmail] != $_POST [email_text].$_POST[at].$_POST[domain]) {
          $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='email'";
          $deleteresult = mysql_query ( $deletequery );

          $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
          $insquery = $insquery . " values('$id','dummy_officers','email','$_POST[PassEmail]','".$_POST[email_text].$_POST[at].$_POST[domain]."','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
          $insresult = mysql_query ( $insquery );
          } */
        /*if ($_POST [PassPermanentAddress] != $_POST [permanentAddress]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='permanentAddress'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','permanentAddress','$_POST[PassPermanentAddress]','$_POST[permanentAddress]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassPermanentCity] != $_POST [permanentCity]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='permanentCity'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','permanentCity','$_POST[PassPermanentCity]','$_POST[permanentCity]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassPermanentState] != $_POST [permanentState]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='permanentState'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','permanentState','$_POST[PassPermanentState]','$_POST[permanentState]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassPermanentPostalCode] != $_POST [permanentPostalCode]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='permanentPostalCode'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','permanentPostalCode','$_POST[PassPermanentPostalCode]','$_POST[permanentPostalCode]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }*/
        /*if ($_POST [PassAddress] != $_POST [Address]) {*/
            /*
             * $updatequery="UPDATE temp_logs set officerid='$id',tableName='dummy_officers',fieldName='Address',existValue='$_POST[PassAddress]',currentValue='$_POST[Address]',CreatedBy='$_SESSION[userId]',CreatedOn=CURRENT_TIMESTAMP,ModifiedBy='',ModifiedOn=CURRENT_TIMESTAMP,status='pending' where fieldName='Address' and officerid='$id' "; $updateresult= mysql_query($updatequery);
             */

            /*$deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='Address'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','Address','$_POST[PassAddress]','$_POST[Address]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }

        if ($_POST [PassPhone] != $_POST [phoneNumber]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='Phone'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','Phone','$_POST[PassPhone]','$_POST[phoneNumber]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassFax] != $_POST [Fax]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='Fax'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','Fax','$_POST[PassFax]','$_POST[Fax]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }*/
		if ($employeeCode != ''){
				 $same_employeeCode = $this->same_employeeCode($employeeCode, $civilCode);
			if (!empty($same_employeeCode)) {
				$_SESSION['employeeError'] = "Sorry! Employee Code already exists.";
			}
		}
       
//        else {
//            if ($_POST [PassEmployeeCode] != $_POST [employeeCode]) {
//                $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='employeeCode'";
//                $deleteresult = mysql_query($deletequery);
//
//                $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
//                $insquery = $insquery . " values('$id','dummy_officers','employeeCode','$_POST[PassEmployeeCode]','$_POST[employeeCode]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
//                $insresult = mysql_query($insquery);
//            }
//        }
        if ($_POST [PassCategoryId] != $_POST [categoryid]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='categoryid'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','categoryid','$_POST[PassCategoryId]','$_POST[categoryid]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassSubCategory] != $_POST [subCategory]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='subCategory'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','subCategory','$_POST[PassSubCategory]','$_POST[subCategory]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassMinority] != $_POST [minorityid]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='minorityid'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','minority','$_POST[PassMinority]','$_POST[minorityid]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassReligionId] != $_POST [religionid]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='religionid'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','religionid','$_POST[PassReligionId]','$_POST[religionid]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        if ($_POST [PassMinorityRemarks] != $_POST [minorityRemarks]) {
            $deletequery = "DELETE from temp_logs where officerid='$id' and fieldname='minorityRemarks'";
            $deleteresult = mysql_query($deletequery);

            $insquery = "INSERT into temp_logs(officerid,tableName,fieldName,existValue,currentValue,CreatedBy,CreatedOn,ModifiedBy,ModifiedOn,status)";
            $insquery = $insquery . " values('$id','dummy_officers','minorityRemarks','$_POST[PassMinorityRemarks]','$_POST[minorityRemarks]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'pending')";
            $insresult = mysql_query($insquery);
        }
        $email_validate = $_POST['email_text'] . $_POST['at'] . $_POST['domain'];
        $valid = $this->same_email($email_validate, $civilCode);

        if ($valid != 0) {
            $_SESSION['error'] = "Sorry! Email already exists.";
        } else {
			$mod_by = $_SESSION['userId'];
            $query = "UPDATE officers SET email='" . addslashes($email_validate) . "' , modifiedBy=$mod_by WHERE civilCode='$civilCode'";
            mysql_query($query);
        }
        $same_mobileNumber = $this->same_mobileNumber($_POST[mobileNumber], $civilCode);
        if ($same_mobileNumber == 0) {
			$mod_by = $_SESSION['userId'];
            $query = "UPDATE officers SET mobileNumber='" . addslashes($_POST[mobileNumber]) . "', modifiedBy=$mod_by WHERE civilCode='$civilCode'";
            mysql_query($query);
        } else {
            $_SESSION['mobile_error'] = "Sorry! Mobile already exists.";
        }

        return $tempOfficer1VO->getId();
    }

    public function updatedummyspousetable($officerid, $civilcode, $id) {
        $tempSpouseDAO = new SpouseDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempSpouseVO = $tempSpouseDAO->getSpouseListById($id);
        if ($tempSpouseVO->getIsActive() == 1) {

            $insquery = "INSERT into dummy_spouses(id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn)";
            $insquery = $insquery . " SELECT id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn from spouses WHERE id='$id'";
            $insresult = mysql_query($insquery);

            $updatequery = "update dummy_spouses set SavedBy='IOOfficer' WHERE id='$id'";
            mysql_query($updatequery);

            $spCivilCode = $_POST ['civilCode'];
            $updatequery = "update spouses set name='$_POST[name]',marriedMonth='$_POST[marriedMonth]',marriedDay='$_POST[marriedDay]',workGovt='$_POST[workGovt]',workIt='$_POST[workIt]',addressGovt='$_POST[addressGovt]',spouseStatus='$_POST[spouseStatus]',occupation='$_POST[occupation]',civilCode='$spCivilCode',modifiedOn=CURRENT_TIMESTAMP, modifiedBy='$_SESSION[userId]'";
            $updatequery = $updatequery . " where id='$id'";
            // mysql_query($updatequery);

            $updatequery = "update dummy_spouses set name='$_POST[name]',marriedMonth='$_POST[marriedMonth]',marriedDay='$_POST[marriedDay]',workGovt='$_POST[workGovt]',workIt='$_POST[workIt]',addressGovt='$_POST[addressGovt]',spouseStatus='$_POST[spouseStatus]',occupation='$_POST[occupation]',civilCode='$spCivilCode',modifiedOn=CURRENT_TIMESTAMP, modifiedBy='$_SESSION[userId]'";
            $updatequery = $updatequery . " where id='$id'";

            mysql_query($updatequery);

            $deletequery = "delete from dummy_spouses where id='$id'";
            // mysql_query($deletequery);
        } else {

            $spCivilCode = $_POST ['civilCode'];
            $updatequery = "update spouses set name='$_POST[name]',marriedMonth='$_POST[marriedMonth]',marriedDay='$_POST[marriedDay]',workGovt='$_POST[workGovt]',workIt='$_POST[workIt]',addressGovt='$_POST[addressGovt]',spouseStatus='$_POST[spouseStatus]',occupation='$_POST[occupation]',civilCode='$spCivilCode',modifiedOn=CURRENT_TIMESTAMP, modifiedBy='$_SESSION[userId]'";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $updatequery = "update dummy_spouses set name='$_POST[name]',marriedMonth='$_POST[marriedMonth]',marriedDay='$_POST[marriedDay]',workGovt='$_POST[workGovt]',workIt='$_POST[workIt]',addressGovt='$_POST[addressGovt]',spouseStatus='$_POST[spouseStatus]',occupation='$_POST[occupation]',civilCode='$spCivilCode',modifiedOn=CURRENT_TIMESTAMP, modifiedBy='$_SESSION[userId]'";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
        }
    }

    // Modified by: Sonal Singhal
    // Modified on: 11-03-10
    // Reason: ---to update status of all dummy tables
    public function insertdummyspousetable($officerid, $civilcode) {
        $tempSpouseDAO = new SpouseDAO ();
        $spouseList = $tempSpouseDAO->getDummySpouseList($officerid);
        $spCivilCode = $_POST ['civilCode'];
        if (count($spouseList) == 0) {
            $spcount = count($spouseList) + 1;
        } else {
            $spcount = $tempSpouseDAO->returnMaxSpCount($officerid);
            $spcount = $spcount + 1;
        }
        // $spcount = count($spouseList)+1;
        $id = $civilcode . "SP" . $spcount;
        if ($spCivilCode != '') {
            $checkquery = "SELECT * FROM spouses WHERE officerid='$officerid' AND civilCode='$spCivilCode'";
            $checkresult = mysql_query($checkquery);
            $checknumrow = mysql_num_rows($checkresult);
            if ($checknumrow == 0) {
                $insertquery = "INSERT into spouses(id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn,isActive)";
                $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[spousestatus]','$_POST[workGovt]','$_POST[addressGovt]','$_POST[workIt]','$spCivilCode','$_POST[occupation]','$_POST[marriedMonth]','$_POST[marriedDay]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','0')";
                mysql_query($insertquery);

                $insertquery = "INSERT into dummy_spouses(id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn,isActive,SavedBy)";
                $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[spousestatus]','$_POST[workGovt]','$_POST[addressGovt]','$_POST[workIt]','$spCivilCode','$_POST[occupation]','$_POST[marriedMonth]','$_POST[marriedDay]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','0','IOOfficer')";
                mysql_query($insertquery);
            }
        } else {
            $insertquery = "INSERT into spouses(id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn,isActive)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[spousestatus]','$_POST[workGovt]','$_POST[addressGovt]','$_POST[workIt]','$spCivilCode','$_POST[occupation]','$_POST[marriedMonth]','$_POST[marriedDay]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','0')";
            mysql_query($insertquery);
            // echo $insertquery."<br>";

            $insertquery = "INSERT into dummy_spouses(id,officerid,name,spousestatus,workGovt,addressGovt,workIt,civilCode,occupation,marriedMonth,marriedDay,createdBy,createdOn,modifiedBy,modifiedOn,isActive,SavedBy)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[spousestatus]','$_POST[workGovt]','$_POST[addressGovt]','$_POST[workIt]','$spCivilCode','$_POST[occupation]','$_POST[marriedMonth]','$_POST[marriedDay]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','0','IOOfficer')";
            mysql_query($insertquery);
            // echo $insertquery."<br>";
        }
    }

    public function updatedummychildrentable($officerid, $civilcode, $id) {
        $tempChildrenDAO = new ChildrenDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempChildrenVO = $tempChildrenDAO->getChildrenListById($id);
        $expdob = explode("-", $_POST [dateOfBirth]);
        if (strlen($expdob [0]) == 4) {
            $dateOfBirth = $_POST [dateOfBirth];
        } else {
            $dateOfBirth = getSQLDate($_POST [dateOfBirth]);
        }
        if ($tempChildrenVO->getIsActive() == 1) {

            $insquery = "INSERT into dummy_childrens(id,officerid,name,gender,dateOfBirth,education,remark,createdBy,createdOn,modifiedBy,modifiedOn,SavedBy)";
            $insquery = $insquery . " values ('$id','$officerid','$_POST[name]','$_POST[gender]','$dateOfBirth','$_POST[education]','$_POST[remark]','$officerid',current_timestamp,'$_SESSION[userId]',CURRENT_TIMESTAMP,'') ";

            $insresult = mysql_query($insquery);

            $updatequery = "update dummy_childrens set SavedBy='IOOfficer', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
            mysql_query($updatequery);

            $updatequery = "update childrens set name='$_POST[name]',gender='$_POST[gender]',dateOfBirth='$dateOfBirth',education='$_POST[education]',remark='$_POST[remark]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            // mysql_query($updatequery);

            $updatequery = "update dummy_childrens set name='$_POST[name]',gender='$_POST[gender]',dateOfBirth='$dateOfBirth',education='$_POST[education]',remark='$_POST[remark]',modifiedBy='$_
			SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $deletequery = "delete from dummy_childrens where id='$id'";
            // mysql_query($deletequery);
        } else {
            $updatequery = "update childrens set name='$_POST[name]',gender='$_POST[gender]',dateOfBirth='$dateOfBirth',education='$_POST[education]',remark='$_POST[remark]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $updatequery = "update dummy_childrens set name='$_POST[name]',gender='$_POST[gender]',dateOfBirth='$dateOfBirth',education='$_POST[education]',remark='$_POST[remark]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
        }
    }

    // changes done by sonal on 25-02-10 in fn "insertdummychildrentable" for sequentially insertion of children
    public function insertdummychildrentable($officerid, $civilcode) {
        $tempChildrenDAO = new ChildrenDAO ();
        $childrenList = $tempChildrenDAO->getMaxChildrenId($officerid);
        $maxChildrenCntr = $childrenList->id + 1;
        $id = $civilcode . "CH" . $maxChildrenCntr;
        $checkquery = "SELECT * FROM childrens WHERE officerid='$officerid' AND id='$id'";
        $checkresult = mysql_query($checkquery);
        $checknumrow = mysql_num_rows($checkresult);
        $dateOfBirth = getSQLDate($_POST [dateOfBirth]);
        if ($checknumrow == 0) {
            $insertquery = "INSERT into childrens(id,officerid,name,gender,dateOfBirth,education,remark,createdBy,createdOn,modifiedBy,modifiedOn,isActive)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[gender]','$dateOfBirth','$_POST[education]','$_POST[remark]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','0')";
            mysql_query($insertquery);

            $insertquery = "INSERT into dummy_childrens(id,officerid,name,gender,dateOfBirth,education,remark,createdBy,createdOn,modifiedBy,modifiedOn,isActive,SavedBy)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[name]','$_POST[gender]','$dateOfBirth','$_POST[education]','$_POST[remark]','$_SESSION[userId]',CURRENT_TIMESTAMP,'$_SESSION[userId]',CURRENT_TIMESTAMP,'0','IOOfficer')";
            mysql_query($insertquery);
        }
    }

    public function updatedummyeducationtable($officerid, $civilcode, $id) {
        $tempEducationDAO = new EducationDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempEducationVO = $tempEducationDAO->getEducationListById($id);
        $explode_startDate = explode('-', $_REQUEST['startdate']);
        $explode_endDate = explode('-', $_REQUEST['enddate']);
        $startdate = (checkdate($explode_startDate[1], $explode_startDate[0], $explode_startDate[2]) == true) ? getSQLDate($_REQUEST['startdate']) : "";
        $enddate = (checkdate($explode_endDate[1], $explode_endDate[0], $explode_endDate[2]) == true) ? getSQLDate($_REQUEST['enddate']) : "";
        /*  $expstd = explode("-", $_POST [startdate]);

          if (strlen($expstd [0]) == 4) {
          $startdate = $_POST [startdate];
          } else {
          $startdate = getSQLDate($_POST [startdate]);
          }

          $expend = explode("-", $_POST [enddate]);
          if (strlen($expend [0]) == 4) {
          $enddate = $_POST [enddate];
          } else {
          $enddate = getSQLDate($_POST [enddate]);
          } */
        //echo $startdate."sdfsdfsdf".$enddate."fdgdfg".$tempEducationVO->getIsActive();die;
        if ($tempEducationVO->getIsActive() == 1 && !empty($startdate) && !empty($enddate)) {
            $insquery = "INSERT into dummy_educations(id,officerid,course,new_courseid,college,startdate,enddate,state,city,subjects,createdBy,createdOn,modifiedBy,modifiedOn)";
            $insquery = $insquery . " SELECT id,officerid,course,new_courseid,college,startdate,enddate,state,city,subjects,createdBy,createdOn,modifiedBy,modifiedOn from educations WHERE id='$id'";
            $insresult = mysql_query($insquery);

            $updatequery = "update dummy_educations set SavedBy='IOOfficer', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
            mysql_query($updatequery);

            $updatequery = "update educations set new_courseid='$_POST[qualification_id]',college='$_POST[college]',startdate='$startdate',enddate='$enddate',state='$_POST[state]',city='$_POST[city]',subjects='$_POST[subjects]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            // mysql_query($updatequery);

            $updatequery = "update dummy_educations set new_courseid='$_POST[qualification_id]',college='$_POST[college]',startdate='$startdate',enddate='$enddate',state='$_POST[state]',city='$_POST[city]',subjects='$_POST[subjects]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $deletequery = "delete from dummy_educations where id='$id'";
            // mysql_query($deletequery);
        } elseif ($tempEducationVO->getIsActive() == 0 && !empty($startdate) && !empty($enddate)) {

            $updatequery = "update educations set new_courseid='$_POST[qualification_id]',college='$_POST[college]',startdate='$startdate',enddate='$enddate',state='$_POST[state]',city='$_POST[city]',subjects='$_POST[subjects]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $updatequery = "update dummy_educations set new_courseid='$_POST[qualification_id]',college='$_POST[college]',startdate='$startdate',enddate='$enddate',state='$_POST[state]',city='$_POST[city]',subjects='$_POST[subjects]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
        }
    }

    public function insertdummyeducationtable($officerid, $civilcode) {
        $tempEducationDAO = new EducationDAO ();
        // $educationList = $tempEducationDAO->getDummyEducationList($officerid);//replaced with next line by pulkit as on 23rd-Nov-09
        $educationList = $tempEducationDAO->getMaxEducationId($officerid); // this function gets max id from education table
        $maxEducationCntr = $educationList->id + 1;
        $id = $civilcode . "ED" . $maxEducationCntr;
        $checkquery = "SELECT * FROM educations WHERE officerid='$officerid' AND id='$id'";
        $checkresult = mysql_query($checkquery);
        $checknumrow = mysql_num_rows($checkresult);
        $explode_startDate = explode('-', $_REQUEST['startdate']);
        $explode_endDate = explode('-', $_REQUEST['enddate']);
        $startdate = (checkdate($explode_startDate[1], $explode_startDate[0], $explode_startDate[2]) == true) ? getSQLDate($_REQUEST['startdate']) : "";
        $enddate = (checkdate($explode_endDate[1], $explode_endDate[0], $explode_endDate[2]) == true) ? getSQLDate($_REQUEST['enddate']) : "";
        //echo $startdate."sdfdsfs".$enddate;die("dsfsdfsfd");

        /*  $startdate = getSQLDate($_POST [startdate]);
          $enddate = getSQLDate($_POST [enddate]); */
        if ($checknumrow == 0 && !empty($enddate) && !empty($startdate)) {
            $insertquery = "INSERT into educations(id,officerid,new_courseid,college,startdate,enddate,state,city,subjects,createdBy,createdOn,modifiedBy,isActive)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[qualification_id]','$_POST[college]','$startdate','$enddate','$_POST[state]','$_POST[city]','$_POST[subjects]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','0')";

            mysql_query($insertquery) or die(mysql_error());

            $insertquery = "INSERT into dummy_educations(id,officerid,new_courseid,college,startdate,enddate,state,city,subjects,createdBy,createdOn,modifiedBy,isActive,SavedBy)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[qualification_id]','$_POST[college]','$startdate','$enddate','$_POST[state]','$_POST[city]','$_POST[subjects]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','0','IOOfficer')";

            mysql_query($insertquery);
        }
    }

    public function updatedummytrainingstable($officerid, $civilcode, $id) {
        $tempTrainingDAO = new TrainingDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempTrainingVO = $tempTrainingDAO->getTrainingListById($id);
        $explode_startDate = explode('-', $_REQUEST['startdate']);
        $explode_endDate = explode('-', $_REQUEST['enddate']);
        $startdate = (checkdate($explode_startDate[1], $explode_startDate[0], $explode_startDate[2]) == true) ? getSQLDate($_REQUEST['startdate']) : "";
        $enddate = (checkdate($explode_endDate[1], $explode_endDate[0], $explode_endDate[2]) == true) ? getSQLDate($_REQUEST['enddate']) : "";
        /*  $startdate = getSQLDate($_POST [startdate]);
          $enddate = getSQLDate($_POST [enddate]); */
        /*  $expstd = explode("-", $_POST [startdate]);
          if (strlen($expstd [0]) == 4) {
          $startdate = $_POST [startdate];
          } else {
          $startdate = getSQLDate($_POST [startdate]);
          }

          $expend = explode("-", $_POST [enddate]);
          if (strlen($expend [0]) == 4) {
          $enddate = $_POST [enddate];
          } else {
          $enddate = getSQLDate($_POST [enddate]);
          } */
        if ($tempTrainingVO->getIsActive() == 1 && !empty($startdate) && !empty($enddate)) {

            $insquery = "INSERT into dummy_trainings(id,officerid,course,institute,authority,subjects,startdate,enddate,duration,createdBy,createdOn,modifiedBy,modifiedOn)";
            $insquery = $insquery . " SELECT id,officerid,course,institute,authority,subjects,startdate,enddate,duration,createdBy,createdOn,modifiedBy,modifiedOn from trainings WHERE id='$id'";
            $insresult = mysql_query($insquery);

            $updatequery = "update dummy_trainings set SavedBy='IOOfficer', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
            mysql_query($updatequery);

            $updatequery = "update trainings set course='$_POST[course]',institute='$_POST[institute]',authority='$_POST[authority]',subjects='$_POST[subjects]',startdate='$startdate',enddate='$enddate',duration='$_POST[duration]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            // mysql_query($updatequery);

            $updatequery = "update dummy_trainings set course='$_POST[course]',institute='$_POST[institute]',authority='$_POST[authority]',subjects='$_POST[subjects]',startdate='$startdate',enddate='$enddate',duration='$_POST[duration]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $deletequery = "delete from dummy_trainings where id='$id'";
            // mysql_query($deletequery);
        } elseif ($tempTrainingVO->getIsActive() == 0 && !empty($startdate) && !empty($enddate)) {
            $updatequery = "update trainings set course='$_POST[course]',institute='$_POST[institute]',authority='$_POST[authority]',subjects='$_POST[subjects]',startdate='$startdate',enddate='$enddate',duration='$_POST[duration]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $updatequery = "update dummy_trainings set course='$_POST[course]',institute='$_POST[institute]',authority='$_POST[authority]',subjects='$_POST[subjects]',startdate='$startdate',enddate='$enddate',duration='$_POST[duration]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
        }
    }

    public function insertdummytrainingstable($officerid, $civilcode) {
        $tempTrainingDAO = new TrainingDAO ();
        $trainingList = $tempTrainingDAO->getMaxTrainningID($officerid);
        // echo $trainingList;
        $maxtrainingCntr = $trainingList + 1;
        // echo $maxtrainingCntr;
        $id = $civilcode . "TR" . $maxtrainingCntr;
        $checkquery = "SELECT * FROM trainings WHERE officerid='$officerid' AND id='$id'";
        // echo $checkquery;
        $checkresult = mysql_query($checkquery);
        $checknumrow = mysql_num_rows($checkresult);
        $explode_startDate = explode('-', $_REQUEST['startdate']);
        $explode_endDate = explode('-', $_REQUEST['enddate']);
        $startdate = (checkdate($explode_startDate[1], $explode_startDate[0], $explode_startDate[2]) == true) ? getSQLDate($_REQUEST['startdate']) : "";
        $enddate = (checkdate($explode_endDate[1], $explode_endDate[0], $explode_endDate[2]) == true) ? getSQLDate($_REQUEST['enddate']) : "";
        /* $startdate = getSQLDate($_POST [startdate]);
          $enddate = getSQLDate($_POST [enddate]); */
        if ($checknumrow == 0 && !empty($startdate) && !empty($enddate)) {
            $insertquery = "INSERT into trainings(id,officerid,course,institute,authority,subjects,startdate,enddate,createdBy,createdOn,modifiedBy,isActive,duration)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[course]','$_POST[institute]','$_POST[authority]','$_POST[subjects]','$startdate','$enddate','$_SESSION[userId]',CURRENT_TIMESTAMP,'','0','$_POST[duration]')";
            mysql_query($insertquery);

            $insertquery = "INSERT into dummy_trainings(id,officerid,course,institute,authority,subjects,startdate,enddate,createdBy,createdOn,modifiedBy,isActive,SavedBy,duration)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[course]','$_POST[institute]','$_POST[authority]','$_POST[subjects]','$startdate','$enddate','$_SESSION[userId]',CURRENT_TIMESTAMP,'','0','IOOfficer','$_POST[duration]')";
            mysql_query($insertquery);
        }
    }

    public function updatedummyachievementstable($officerid, $civilcode, $id) {
        $tempAchievementDAO = new AchievementDAO ();
        $tempOfficerDAO = new OfficerDAO ();
        $tempAchievementVO = $tempAchievementDAO->getAchievementListById($id);
        if ($tempAchievementVO->getIsActive() == 1) {
            $insquery = "INSERT into dummy_achievements(id,officerid,achievement,createdBy,createdOn,modifiedBy,modifiedOn)";
            $insquery = $insquery . " SELECT id,officerid,achievement,createdBy,createdOn,modifiedBy,modifiedOn from achievements WHERE id='$id'";
            $insresult = mysql_query($insquery);

            $updatequery = "update dummy_achievements set SavedBy='IOOfficer', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
            mysql_query($updatequery);

            $updatequery = "update achievements set achievement='$_POST[achievement]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            // mysql_query($updatequery);

            $updatequery = "update dummy_achievements set achievement='$_POST[achievement]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $deletequery = "delete from dummy_achievements where id='$id'";
            // mysql_query($deletequery);
        } else {
            $updatequery = "update achievements set achievement='$_POST[achievement]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);

            $updatequery = "update dummy_achievements set achievement='$_POST[achievement]',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
            $updatequery = $updatequery . " where id='$id'";
            mysql_query($updatequery);
        }
    }

    public function insertdummyachievementstable($officerid, $civilcode) {
        // echo 'insertdummyachievementstable';
        $tempAchievementDAO = new AchievementDAO ();
        $achievementList = $tempAchievementDAO->getMaxAchivementId($officerid);
        $maxAchievementCntr = $achievementList->id + 1;
        $id = $civilcode . "AC" . $maxAchievementCntr;
        // echo $id;

        $checkquery = "SELECT * FROM achievements WHERE officerid='$officerid' AND id='$id'";
        $checkresult = mysql_query($checkquery);
        $checknumrow = mysql_num_rows($checkresult);
        if ($checknumrow == 0) {
            $insertquery = "INSERT into achievements(id,officerid,achievement,createdBy,createdOn,modifiedBy,modifiedOn,isActive)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[achievement]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'0')";
            mysql_query($insertquery);

            $insertquery = "INSERT into dummy_achievements(id,officerid,achievement,createdBy,createdOn,modifiedBy,modifiedOn,isActive,SavedBy)";
            $insertquery = $insertquery . " values('$id','$officerid','$_POST[achievement]','$_SESSION[userId]',CURRENT_TIMESTAMP,'',CURRENT_TIMESTAMP,'0','IOOfficer')";
            mysql_query($insertquery);
        }
    }

    // Sonal changes end here
    public function updateprofiletable() {
        $tempOfficerVO = unserialize($_SESSION ['officerVO']);

        $id = $tempOfficerVO->getId();
        $civilCode = $tempOfficerVO->getCivilCode();
        // echo "Civil code is" .$civilCode;
        // Delete from child tables
        $this->deletechildtables($id);

        // Insert into child tables
        $this->insertintochildtables($id, $civilCode);

        $name = $tempOfficerVO->getName();

        $exitRemark = $tempOfficerVO->getExitRemark();
		$exitRemark = addslashes($exitRemark);
        $currentAddress = $tempOfficerVO->getCurrentAddress();
        $currentState = $tempOfficerVO->getCurrentState();
        $currentCity = $tempOfficerVO->getCurrentCity();
        $currentPostalCode = $tempOfficerVO->getCurrentPostalCode();
        $phoneNumberRes = $tempOfficerVO->getPhoneNumberRes();
        $mobileNumber = $tempOfficerVO->getMobileNumber();

        $email = $tempOfficerVO->getEmail();
        $updatequery = "update officers set name='$name',currentAddress='$currentAddress',currentCity='$currentCity',currentState='$currentState',currentCountry='$currentCountry',currentPostalCode='$currentPostalCode',email='$email',mobileNumber='$mobileNumber',phoneNumberRes='$phoneNumberRes',modifiedBy='$_SESSION[userId]',modifiedOn=CURRENT_TIMESTAMP";
        $updatequery = $updatequery . " where id='$id'";

        mysql_query($updatequery);
    }

    public function deletechildtables($id, $tablename = '') {
        $tempSpouseDAO = new SpouseDAO ();
        $tempChildrenDAO = new ChildrenDAO ();
        $tempEduDAO = new EducationDAO ();
        $tempTrainingDAO = new TrainingDAO ();
        $tempLeaveDAO = new LeaveDAO ();
        $tempAcrDAO = new AcrDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempAchievementDAO = new AchievementDAO ();
        if ($tablename != '') {
            // Insert into spouse table
            if ($tablename == 'spouses') {
                $tempSpouseDAO->deletefromtable($id);
            }
            // Insert into children table
            if ($tablename == 'childrens') {
                $tempChildrenDAO->deletefromtable($id);
            }
            // Insert into education table
            if ($tablename == 'educations') {
                $tempEduDAO->deletefromtable($id);
            }
            // Insert into training table
            if ($tablename == 'trainings') {
                $tempTrainingDAO->deletefromtable($id);
            }
            // Insert into leave table
            if ($tablename == 'leaverecords') {
                $tempLeaveDAO->deletefromtable($id);
            }
            // Insert into acr table
            if ($tablename == 'acrs') {
                $tempAcrDAO->deletefromtable($id);
            }
            // Insert into acr table
            if ($tablename == 'postings') {
                $tempPostingDAO->deletefromtable($id);
            }
            // Insert into acr table
            if ($tablename == 'achievements') {
                $tempAchievementDAO->deletefromtable($id);
            }
        } else {
            $tempSpouseDAO->deletefromtable($id);
            // Insert into children table
            $tempChildrenDAO->deletefromtable($id);

            // Insert into education table
            $tempEduDAO->deletefromtable($id);

            // Insert into training table
            $tempTrainingDAO->deletefromtable($id);

            // Insert into leave table
            $tempLeaveDAO->deletefromtable($id);

            // Insert into acr table
            $tempAcrDAO->deletefromtable($id);

            // Insert into acr table
            $tempPostingDAO->deletefromtable($id);

            // Insert into acr table
            $tempAchievementDAO->deletefromtable($id);
        }
    }

    public function deletefromtable($id) {
        // Get officer
        $tempOfficerDAO = new OfficerDAO ();
        $tempOfficerSeniority = $tempOfficerDAO->getOfficerSeniority($_REQUEST ['id']);
        $seniority = $tempOfficerSeniority;
        if ($seniority > 0) {
            $selectquery = "select * from officers where seniority>='$seniority' AND gradeid='$gradeid'";
            $selectresult = mysql_query($selectquery);
            if (mysql_num_rows($selectresult) > 0) {
                while ($selectrow = mysql_fetch_array($selectresult)) {
                    if ($selectrow ['seniority'] == $oldseniority) {
                        $newseniority = $seniority;
                        $updatepostquery = "update officers set seniority='', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                        mysql_query($updatepostquery);
                    } elseif ($selectrow ['seniority'] > $oldseniority) {
                        $newseniority = $selectrow ['seniority'] + 1;
                        $updatepostquery = "update officers set seniority='$newseniority', modifiedBy='$_SESSION[userId]' WHERE id='$selectrow[id]'";
                        mysql_query($updatepostquery);
                    }
                }
            } else {
                $updatepostquery = "update officers set seniority='$seniority', modifiedBy='$_SESSION[userId]' WHERE id='$id'";
                mysql_query($updatepostquery);
            }
        }
        // delete child tables
        $this->deletechildtables($id);
        $deletequery = "delete from officers where id='$id'";
        mysql_query($deletequery);

        $delUserQuery = "delete from users where officerid='$id'";

        mysql_query($delUserQuery);
    }

    public function populatevofrompostarray() {
        if (isset($_SESSION ['officerVO'])) {
            $tempOfficerVO = unserialize($_SESSION ['officerVO']);
        } else {
            $tempOfficerVO = new OfficerVO ();
        }
        $tempOfficerVO->setCivilCode(trim($_POST ['civilCode']));
        if (isset($_POST ['id'])) {
            $tempOfficerVO->setId(trim($_POST ['id']));
        } else {
            $count_civil_code = $this->get_changed_civil_codes($_POST ['civilCode']);
            if ($count_civil_code == 0) {
                $tempOfficerVO->setId("MO" . trim($_POST ['civilCode']));
            } else {
                $tempOfficerVO->setId("N" . $count_civil_code . "O" . trim($_POST ['civilCode']));
            }
        }
        $tempOfficerVO->setEmployeeCode($_POST ['employeeCode']);
        $tempOfficerVO->setName($_POST ['name']);
        $tempOfficerVO->setDateOfBirth($_POST ['dateOfBirth']);
        $tempOfficerVO->setGender($_POST ['gender']);
        $tempOfficerVO->setBatch($_POST ['batch']);
        $tempOfficerVO->setDomicileState($_POST ['domicileState']);
        $tempOfficerVO->setJoiningDate($_POST ['joiningDate']);
        $tempOfficerVO->setAppointmentDate($_POST ['appointmentDate']);
        $tempOfficerVO->setDateOfConfirmation($_POST ['confirmationDate']);
        $tempOfficerVO->setJoiningDate($_POST ['joiningDate']);
        // chg by saurabh
        $tempOfficerVO->setMinority($_POST ['minorityid']);
        $tempOfficerVO->setMinorityRemarks($_POST ['minorityRemarks']);
        $tempOfficerVO->setsubCategory($_POST ['subCategory']);

        // Check the grade and get the rank for it
        if ($_POST ['grade'] != '-1') {
            $tempOfficerVO->setGradeid($_POST ['grade']);

            $tempGradeDAO = new GradesDAO ();
            $tempGradeVO = $tempGradeDAO->getGrade($_POST ['grade']);
            // $tempOfficerVO->setRankid($tempGradeVO->getRankid());
        }
        $tempOfficerVO->setRankid($_POST ['rankid']);
        $tempOfficerVO->setPostcode($_POST ['postcode']);
        $tempOfficerVO->setAppointmentDate($_POST ['appointmentDate']);
        $tempOfficerVO->setSeniority($_POST ['seniority']);
        $tempOfficerVO->setOfficerStatus($_POST ['officerStatus']);
        $tempOfficerVO->setRetirementDate($_POST ['retirementDate']);
        if ($_POST ['exitDate'] == '') {
            $tempOfficerVO->setExitDate($_POST ['retirementDate']);
        } else {
            $tempOfficerVO->setExitDate($_POST ['exitDate']);
        }
        $tempOfficerVO->setDemiseDate($_POST ['demiseDate']);
        $tempOfficerVO->setExitRemark($_POST ['exitRemark']);
        $tempOfficerVO->setCurrentAddress($_POST ['currentAddress']);
        $tempOfficerVO->setCurrentState($_POST ['currentState']);
        $tempOfficerVO->setCurrentCity($_POST ['currentCity']);
        $tempOfficerVO->setCurrentPostalCode($_POST ['currentPostalCode']);
        $tempOfficerVO->setPhoneNumberRes($_POST ['phoneNumberRes']);
        $tempOfficerVO->setMobileNumber($_POST ['mobileNumber']);
        $tempOfficerVO->setPermanentAddress($_POST ['permanentAddress']);
        $tempOfficerVO->setPermanentState($_POST ['permanentState']);
        $tempOfficerVO->setPermanentCity($_POST ['permanentCity']);
        $tempOfficerVO->setPermanentPostalCode($_POST ['permanentPostalCode']);
        $tempOfficerVO->setEmail($_POST ['email_text'] . $_POST['at'] . $_POST ['domain']);
        $tempOfficerVO->setProfilestatus($_POST ['profilestatus']);
        $tempOfficerVO->setReligionid($_POST ['religionid']);
        $tempOfficerVO->setCategoryid($_POST ['categoryid']);
        // Set it in session
        $_SESSION ['officerVO'] = serialize($tempOfficerVO);
        return $tempOfficerVO;
    }

    public function populatevofrompostarrayretiredofficer() {
        if ($_POST ['civilCode'] != '') {
            if (isset($_SESSION ['officerVO'])) {
                $tempOfficerVO = unserialize($_SESSION ['officerVO']);
            } else {
                $tempOfficerVO = new OfficerVO ();
            }
            $tempOfficerVO->setCivilCode(trim($_POST ['civilCode']));
            $tempOfficerVO->setName($_POST ['name']);
            $tempOfficerVO->setDateOfBirth($_POST ['dateOfBirth']);
            $tempOfficerVO->setGender($_POST ['gender']);
            $tempOfficerVO->setDomicileState($_POST ['domicileState']);
            $tempOfficerVO->setRankid($_POST ['rank']);
            $tempOfficerVO->setExitDate($_POST ['exitDate']);
            $tempOfficerVO->setCurrentAddress($_POST ['currentAddress']);
            $tempOfficerVO->setPhoneNumberRes($_POST ['phoneNumberRes']);
            $tempOfficerVO->setMobileNumber($_POST ['mobileNumber']);
            $tempOfficerVO->setPermanentAddress($_POST ['permanentAddress']);
            $tempOfficerVO->setEmail($_POST ['email']);
            $tempOfficerVO->setOtheraddress($_POST ['otherAddress']);
            $tempOfficerVO->setOthernumber($_POST ['otherNumber']);
            $tempOfficerVO->setFax($_POST ['fax']);
            $tempOfficerVO->setBatch($_POST ['batch']);
            $tempOfficerVO->setOfficerStatus(0);
            // Set it in session
            $_SESSION ['officerVO'] = serialize($tempOfficerVO);
            return $tempOfficerVO;
        } else {
            if (isset($_SESSION ['officerVO'])) {
                $tempOfficerVO = unserialize($_SESSION ['officerVO']);
            } else {
                $tempOfficerVO = new OfficerVO ();
            }
            $tempbatch = "RE" . substr($_POST ['batch'], - 2);
            // echo $tempbatch." temp batch ";
            $tempcivilCode = $this->getRetiredCount();

            // echo $tempcivilCode." temp civil code ";
            $tempcivilCode = $tempbatch . $tempcivilCode;
            // echo $tempcivilCode." civil code ";
            $tempOfficerVO->setCivilCode($tempcivilCode);
            $tempOfficerVO->setName($_POST ['name']);
            $tempOfficerVO->setDateOfBirth($_POST ['dateOfBirth']);
            $tempOfficerVO->setGender($_POST ['gender']);
            $tempOfficerVO->setDomicileState($_POST ['domicileState']);
            $tempOfficerVO->setRankid($_POST ['rank']);
            $tempOfficerVO->setExitDate($_POST ['exitDate']);
            $tempOfficerVO->setCurrentAddress($_POST ['currentAddress']);
            $tempOfficerVO->setPhoneNumberRes($_POST ['phoneNumberRes']);
            $tempOfficerVO->setMobileNumber($_POST ['mobileNumber']);
            $tempOfficerVO->setPermanentAddress($_POST ['permanentAddress']);
            $tempOfficerVO->setEmail($_POST ['email']);
            $tempOfficerVO->setOtheraddress($_POST ['otherAddress']);
            $tempOfficerVO->setOthernumber($_POST ['otherNumber']);
            $tempOfficerVO->setFax($_POST ['fax']);
            $tempOfficerVO->setBatch($_POST ['batch']);
            $tempOfficerVO->setOfficerStatus(0);
            // Set it in session
            $_SESSION ['officerVO'] = serialize($tempOfficerVO);
            return $tempOfficerVO;
        }
    }

    public function populateprofilevofrompostarray() {
        if (isset($_SESSION ['officerVO'])) {
            $tempOfficerVO = unserialize($_SESSION ['officerVO']);
        } else {
            $tempOfficerVO = new OfficerVO ();
        }
        $tempOfficerVO->setName($_POST ['name']);
        $tempOfficerVO->setCurrentAddress($_POST ['currentAddress']);
        $tempOfficerVO->setCurrentState($_POST ['currentState']);
        $tempOfficerVO->setCurrentCity($_POST ['currentCity']);
        $tempOfficerVO->setCurrentPostalCode($_POST ['currentPostalCode']);
        $tempOfficerVO->setPhoneNumberRes($_POST ['phoneNumberRes']);
        $tempOfficerVO->setMobileNumber($_POST ['mobileNumber']);
        $tempOfficerVO->setEmployeeCode($_POST ['employeeCode']);
        $tempOfficerVO->setName($_POST ['name']);
        $tempOfficerVO->setDateOfBirth($_POST ['dateOfBirth']);
        $tempOfficerVO->setGender($_POST ['gender']);
        $tempOfficerVO->setDomicileState($_POST ['domicileState']);
        $tempOfficerVO->setEmail($_POST ['email_text'] . $_POST ['at'] . $_POST ['domain']);
        $tempOfficerVO->setReligionid($_POST ['religionid']);
        $tempOfficerVO->setCategoryid($_POST ['categoryid']);
        $tempOfficerVO->setsubCategory($_POST ['subCategory']);
        // $tempOfficerVO->setMinorityid($_POST['minorityid']);
        $tempOfficerVO->setMinority($_POST ['minorityid']);
        $tempOfficerVO->setminorityRemarks($_POST ['minorityRemarks']);
        // Added by pulkit as on 04th-Nov-2009
        $tempOfficerVO->setPermanentAddress($_POST ['permanentAddress']);
        $tempOfficerVO->setPermanentCity($_POST ['permanentCity']);
        $tempOfficerVO->setPermanentState($_POST ['permanentState']);
        $tempOfficerVO->setPermanentPostalCode($_POST ['permanentPostalCode']);
        // Changes ends here by pulkit-----------
        // Set it in session
        $_SESSION ['officerVO'] = serialize($tempOfficerVO);
        return $tempOfficerVO;
    }

    /*
     * This function gets the list of officers
     */

    public function getSortOfficerList($order = '') {
        if ($order == '') {
            $order = "ASC";
        }
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $tempSearchQuery = "select officers.* from officers,users";

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            $qstring = "(officers.name like '%$name%' OR officers.name LIKE '%$expname[$t]%'";
                        } elseif ($t == count($expname) - 1) {
                            $qstring .= " OR officers.name LIKE '%$expname[$t]%')";
                        } else {
                            $qstring .= " OR officers.name LIKE '%$expname[$t]%'";
                        }
                        $t ++;
                    }
                    $tempAppendStr = $qstring;
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId and officers.officerStatus='5' order by officers.name " . $order;
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId and officers.officerStatus='5' order by officers.name " . $order;
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getOfficerList($order = '') {
        if ($order == '') {
            $order = "ASC";
        }
        $officerQuery = "select * from officers order by civilCode " . $order;

        $officerResult = mysql_query($officerQuery);

        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }

        return $officerArray;
    }

    public function getOfficerListForCCA($order = '', $region = '') {
        if ($order == '') {
            $order = "ASC";
        }
        if ($region == '') {

            $region = $_REQUEST ['regionid'];
        }
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $tempSearchQuery = "select officers.* from officers left outer join users on officers.id=users.officerId
		left outer join stg_postings s on officers.id=s.officerid";
        // $region=$profileValutParamArray['region'];
        // Check for where clause
        if ($region != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where s.isLastPosting=1 and s.posttypeid!=4 and s.region=\"$region\" and  ";
            $tempSubQuery = $tempSearchQuery;
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSubQuery . "  officers.id=users.officerId ";
        } else {
            $tempSearchQuery = $tempSubQuery . " WHERE officers.id=users.officerId ";
        }

        if ($order != "") {
            $tempSearchQuery = $tempSearchQuery . " order by officers.civilCode $order";
        } else {
            $tempSearchQuery = $tempSearchQuery . " order by officers.civilCode ASC";
        }

        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
            $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
            $expcity = explode("|", $tempCityValue);
            if ($expcity [0] != "" or $expcity [0] != 0) {
                if ($region == $expcity [0]) {
                    // Finally we assign the new variables
                    for ($i = 0; $i < $numfields; $i ++) {
                        $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                    }
                    $officerArray [count($officerArray)] = $tempOfficerVO;
                }
            }
        }
        return $officerArray;
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerOptions($id) {
        $officerQuery = "select * from officers where id = '$id'";
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }

            // Get option list
            $tempOptionDAO = new OptionsDAO ();
            $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForOfficer($id));
        }
        return $tempOfficerVO;
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficer($id, $autoid = '') {
        if ($autoid == "") {
            $officerQuery = "select * from officers where id = '$id'";
        } else {
            $officerQuery = "select * from officers where id = '$id' AND autoid='$autoid'";
        }

        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            // Get minority status
            /*
             * chg by saurabh $tempOfficerDAO = new OfficerDAO(); $tempOfficerVO->setMinorityid($tempOfficerDAO->getMinorityid($id));
             */
            // Get Spouse list
            $tempSpouseDAO = new SpouseDAO ();
            $tempOfficerVO->setSpouseList($tempSpouseDAO->getSpouseList($id));

            // Get children list
            $tempChildrenDAO = new ChildrenDAO ();
            $tempOfficerVO->setChildrenList($tempChildrenDAO->getChildrenList($id));

            // Get education list
            $tempEduDAO = new EducationDAO ();
            $tempOfficerVO->setEducationList($tempEduDAO->getEducationList($id));

            // Get training list
            $tempTrainingDAO = new TrainingDAO ();
            $tempOfficerVO->setTrainingList($tempTrainingDAO->getTrainingList($id));

            // Get leaves list
            $tempLeaveDAO = new LeaveDAO ();
            $tempOfficerVO->setLeaveList($tempLeaveDAO->getLeaveList($id));

            // Get acr list
            $tempAcrDAO = new AcrDAO ();
            $tempOfficerVO->setAcrList($tempAcrDAO->getAcrList($id));

            // Get option list
            $tempOptionDAO = new OptionsDAO ();
            $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForOfficer($id));

            // get posting profile
            $tempPostingDAO = new PostingDAO ();
            $tempList = $tempPostingDAO->getPostingListForOfficer($id);
            $tempOfficerVO->setPostingList($tempList);

            // Get achievement list
            $tempAchievementDAO = new AchievementDAO ();
            $tempOfficerVO->setAchievementList($tempAchievementDAO->getAchievementList($id));
        }

        return $tempOfficerVO;
    }

    /*
     * Created by anshu porwal @ 27-01-2011 for showing officer details on page add-io-option.php
     */

    public function getOfficerforcatoption($id, $cat_option_id, $autoid = '') {
        $officerQuery = "select * from officers where id = '$id'";

        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            // Get minority status
            /*
             * chg by saurabh $tempOfficerDAO = new OfficerDAO(); $tempOfficerVO->setMinorityid($tempOfficerDAO->getMinorityid($id));
             */
            // Get Spouse list
            $tempSpouseDAO = new SpouseDAO ();
            $tempOfficerVO->setSpouseList($tempSpouseDAO->getSpouseList($id));

            // Get children list
            $tempChildrenDAO = new ChildrenDAO ();
            $tempOfficerVO->setChildrenList($tempChildrenDAO->getChildrenList($id));

            // Get education list
            $tempEduDAO = new EducationDAO ();
            $tempOfficerVO->setEducationList($tempEduDAO->getEducationList($id));

            // Get training list
            $tempTrainingDAO = new TrainingDAO ();
            $tempOfficerVO->setTrainingList($tempTrainingDAO->getTrainingList($id));

            // Get leaves list
            $tempLeaveDAO = new LeaveDAO ();
            $tempOfficerVO->setLeaveList($tempLeaveDAO->getLeaveList($id));

            // Get acr list
            $tempAcrDAO = new AcrDAO ();
            $tempOfficerVO->setAcrList($tempAcrDAO->getAcrList($id));

            // Get catoption list
            $tempCatOptionDAO = new CatOptionDAO ();
            $tempOfficerVO->setCatoptionList($tempCatOptionDAO->getCatOptionListForOfficer($id, $cat_option_id));

            // get posting profile
            $tempPostingDAO = new PostingDAO ();
            $tempList = $tempPostingDAO->getPostingListForOfficer($id);
            $tempOfficerVO->setPostingList($tempList);

            // Get achievement list
            $tempAchievementDAO = new AchievementDAO ();
            $tempOfficerVO->setAchievementList($tempAchievementDAO->getAchievementList($id));
        }
        return $tempOfficerVO;
    }

    public function getOfficerforcatoption1($id, $cat_option_id, $autoid = '') {
        $officerQuery = "select * from officers where id = '$id'";

        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            // Get minority status
            /*
             * chg by saurabh $tempOfficerDAO = new OfficerDAO(); $tempOfficerVO->setMinorityid($tempOfficerDAO->getMinorityid($id));
             */
            // Get Spouse list
            $tempSpouseDAO = new SpouseDAO ();
            $tempOfficerVO->setSpouseList($tempSpouseDAO->getSpouseList($id));

            // Get children list
            $tempChildrenDAO = new ChildrenDAO ();
            $tempOfficerVO->setChildrenList($tempChildrenDAO->getChildrenList($id));

            // Get education list
            $tempEduDAO = new EducationDAO ();
            $tempOfficerVO->setEducationList($tempEduDAO->getEducationList($id));

            // Get training list
            $tempTrainingDAO = new TrainingDAO ();
            $tempOfficerVO->setTrainingList($tempTrainingDAO->getTrainingList($id));

            // Get leaves list
            $tempLeaveDAO = new LeaveDAO ();
            $tempOfficerVO->setLeaveList($tempLeaveDAO->getLeaveList($id));

            // Get acr list
            $tempAcrDAO = new AcrDAO ();
            $tempOfficerVO->setAcrList($tempAcrDAO->getAcrList($id));

            // Get option list
            // $tempOptionDAO = new OptionsDAO();
            // $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForOfficer($id));
            // Get catoption list
            $tempCatOptionDAO = new CatOptionDAO ();
            $tempOfficerVO->setCatoptionList($tempCatOptionDAO->getCatOptionListForOfficer1($id, $cat_option_id));

            // get posting profile
            $tempPostingDAO = new PostingDAO ();
            $tempList = $tempPostingDAO->getPostingListForOfficer($id);
            $tempOfficerVO->setPostingList($tempList);

            // Get achievement list
            $tempAchievementDAO = new AchievementDAO ();
            $tempOfficerVO->setAchievementList($tempAchievementDAO->getAchievementList($id));
        }
        return $tempOfficerVO;
    }

    // //////
    public function getOfficerwithrepresentation($id, $autoid = '') {
        if ($autoid == "") {
            $officerQuery = "select * from officers where id = '$id'";
        } else {
            $officerQuery = "select * from officers where id = '$id' AND autoid='$autoid'";
        }

        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }

            // Get option list
            $tempRepDAO = new RepresentationDAO ();
            $tempOfficerVO->setRepList($tempRepDAO->getRepListForOfficer($id));
        }

        return $tempOfficerVO;
    }

    public function getOfficerWithPostAndOption($id, $autoid = '') {
        if ($autoid == "") {
            $officerQuery = "select * from officers where id = '$id'";
        } else {
            $officerQuery = "select * from officers where id = '$id' AND autoid='$autoid'";
        }

        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }

            // Get option list
            $tempOptionDAO = new OptionsDAO ();
            $tempOfficerVO->setOptionList($tempOptionDAO->getApprovedOptionListForOfficer($id));

            // get posting profile
            $tempPostingDAO = new PostingDAO ();
            $tempList = $tempPostingDAO->getPostingListForOfficer($id);
            $tempOfficerVO->setPostingList($tempList);
        }

        return $tempOfficerVO;
    }

    public function getOfficerDetails($id, $autoid = '') {
        if ($autoid == "") {
            $officerQuery = "select * from officers where id = '$id'";
        } else {
            $officerQuery = "select * from officers where id = '$id' AND autoid='$autoid'";
        }

        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number

        $numfields = @mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }
        //

        while ($row = @mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }

        return $tempOfficerVO;
    }

    /*
     * This function gets the officer for a id
     */

    public function getPrelimnaryOfficerDetails($id, $autoid = '') {
        if ($autoid == "") {
            $officerQuery = "select * from officers where id LIKE '%$id%'";
        } else {
            $officerQuery = "select * from officers where id LIKE '%$id%' AND autoid='$autoid'";
        }
        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerCivilCode($id) {
        $officerQuery = "select civilCode from officers where id = '$id'";
        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        return $officerRow ['civilCode'];
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerName($id) {
        $officerQuery = "select name from officers where id = '$id'";
        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        return $officerRow [name];
    }

    public function getAgeASonPolicyDate($id) {
        $officerQuery = "select dateofbirth from officers where id = '$id'";
        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        $age = $this->getLengthOfServiceLeft($officerRow ['dateofbirth'], $date2 = "");
        return $age;
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerStatus($id) {
        $officerQuery = "select officerStatus from officers where id = '$id'";
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        return $officerRow ['officerStatus'];
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerSeniority($id) {
        $officerQuery = "select seniority from officers where id = '$id'";
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        return $officerRow ['seniority'];
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerCity($id) {
        $officerQuery = "select city from officers where id = '$id'";
        // echo $officerQuery;
        $officerResult = mysql_query($officerQuery);
        $officerRow = mysql_fetch_array($officerResult);

        return $officerRow ['city'];
    }

    /*
     * This function updates the status for the officers
     */

    public function updateStatus($status, $id) {
        if ($status == '1') {
            $officersQuery = "update officers set isActive='0', modifiedBy='$_SESSION[userId]' where id='$id'";
        } else {
            $officersQuery = "update officers set isActive='1', modifiedBy='$_SESSION[userId]' where id='$id'";
        }
        $officersResult = mysql_query($officersQuery);
    }

    /*
     * This function gets the list of users
     */

    public function getOfficerPassword($cc) {
        $userQuery = "select officers.*,users.orgpassword as password from officers,users where officers.id=users.officerId AND officers.id='$cc'";

        $userResult = mysql_query($userQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($userResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($userResult, $i);
        }

        while ($row = mysql_fetch_object($userResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    /*
     * This function gets the list of officers
     */

    public function getRegionOfficerList($regionid) {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        // $officerQuery = "select O.* from officers O,cities C,regions R where O.city=C.id and C.regionid =R.id and R.id='$regionid' and o.officerStatus='5' order by O.name";
        $officerQuery = "select officers.* from officers,users where officers.id=users.officerId and officers.officerStatus='5' order by officers.civilCode";
        $officerResult = mysql_query($officerQuery);
        $officerArray = array();
        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            // $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
            // $expcity = explode("|",$tempCityValue);
            if ($tempPostingVO->getRegion() != "" or $tempPostingVO->getRegion() != 0) {
                if ($regionid == 6) {
                    if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 180) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    } elseif ($regionid == $tempPostingVO->getRegion()) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } elseif ($regionid == 9) {
                    if ($tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 355) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    } elseif ($regionid == $tempPostingVO->getRegion()) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } elseif ($regionid == 14) {
                    if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    } elseif ($regionid == $tempPostingVO->getRegion()) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } elseif ($regionid == 7) {
                    if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 180 or $tempPostingVO->getCity() == 355) {
                        
                    } elseif ($regionid == $tempPostingVO->getRegion()) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } elseif ($regionid == 15) {
                    if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                        
                    } elseif ($regionid == $tempPostingVO->getRegion()) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } elseif ($regionid == $tempPostingVO->getRegion()) {
                    $tempOfficerVO = new OfficerVO ();
                    // Finally we assign the new variables
                    for ($i = 0; $i < $numfields; $i ++) {
                        $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                    }
                    $officerArray [count($officerArray)] = $tempOfficerVO;
                }
            }
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getRegionOfficerOptionListForOfficerID($regionid, $officerid, $id) {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $officerQuery = "select officers.* from officers,options where officers.officerStatus='5' AND options.id='$id' AND officers.id=options.officerid order by officers.civilCode";
        $officerResult = mysql_query($officerQuery);
        $officerArray = array();
        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            if ($tempPostingVO->getRegion() != "" or $tempPostingVO->getRegion() != 0) {
                if ($regionid == $tempPostingVO->getRegion()) {
                    // Get option list
                    $tempOptionDAO = new OptionsDAO ();
                    $tempOptList = $tempOptionDAO->getOptionListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getRegionOfficerOptionList($regionid) {
        $officerRegionquery = "select isParent from regions where id=\"$regionid\"";
        // echo $officerRegionquery;
        $officerRegionqueryresult = mysql_query($officerRegionquery);

        $officerparentRegion = mysql_result($officerRegionqueryresult, 0, 'isParent');

        if ($officerparentRegion > 0) {
            $displayForFullRegion = "1";
        } else {
            $displayForFullRegion = "0";
        }

        // echo $displayForFullRegion;

        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $officerQuery = "select * from officers where officerStatus='5' order by civilCode";
        $officerResult = mysql_query($officerQuery);
        $officerArray = array();
        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $officerSubregion = NULL;
            $offId = $row->id;
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            $officerRegion = $tempPostingVO->getRegion();

            $subregionquery = "Select subregion from stg_postings where officerid=\"$offId\" order by fromdate DESC LIMIT 1";

            $subregionqueryResult = mysql_query($subregionquery);

            if (mysql_num_rows($subregionqueryResult) > 0) {
                $officerSubregion = mysql_result($subregionqueryResult, 0, 'subregion');
            }

            $ioRegionquery = "select isParent from regions where id=\"$officerSubregion\"";

            $ioRegionqueryresult = mysql_query($ioRegionquery);

            if (mysql_num_rows($ioRegionqueryresult) > 0) {
                $ioregion = mysql_result($ioRegionqueryresult, 0, 'isParent');
                if ($ioregion > 0) {
                    $officerRegion = $ioregion;
                }
            }

            if ($officerRegion != "" or $officerRegion != 0 || $officerSubRegion != "" || $officerSubRegion != 0) {
                if ($displayForFullRegion == 0 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    // Get option list
                    $tempOptionDAO = new OptionsDAO ();
                    $tempOptList = $tempOptionDAO->getOptionListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } else if ($displayForFullRegion == 1 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    $tempOptionDAO = new OptionsDAO ();
                    $tempOptList = $tempOptionDAO->getOptionListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        return $officerArray;
    }

    // //////////////////////////////////////////////////////////////////////////////////
    public function getRegionOfficerRepList($regionid) {
        $officerRegionquery = "select isParent from regions where id=\"$regionid\"";
        // echo $officerRegionquery;
        $officerRegionqueryresult = mysql_query($officerRegionquery);

        $officerparentRegion = mysql_result($officerRegionqueryresult, 0, 'isParent');

        if ($officerparentRegion > 0) {
            $displayForFullRegion = "1";
        } else {
            $displayForFullRegion = "0";
        }

        // echo $displayForFullRegion;

        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $officerQuery = "select * from officers where officerStatus='5' order by civilCode";
        $officerResult = mysql_query($officerQuery);
        $officerArray = array();
        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $officerSubregion = NULL;
            $offId = $row->id;
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            $officerRegion = $tempPostingVO->getRegion();

            $subregionquery = "Select subregion from stg_postings where officerid=\"$offId\" order by fromdate DESC LIMIT 1";

            $subregionqueryResult = mysql_query($subregionquery);

            if (mysql_num_rows($subregionqueryResult) > 0) {
                $officerSubregion = mysql_result($subregionqueryResult, 0, 'subregion');
            }

            $ioRegionquery = "select isParent from regions where id=\"$officerSubregion\"";

            $ioRegionqueryresult = mysql_query($ioRegionquery);

            if (mysql_num_rows($ioRegionqueryresult) > 0) {
                $ioregion = mysql_result($ioRegionqueryresult, 0, 'isParent');
                if ($ioregion > 0) {
                    $officerRegion = $ioregion;
                }
            }

            if ($officerRegion != "" or $officerRegion != 0 || $officerSubRegion != "" || $officerSubRegion != 0) {
                if ($displayForFullRegion == 0 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    // Get option list
                    $tempOptionDAO = new RepresentationDAO ();
                    $tempOptList = $tempOptionDAO->getRepListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setRepList($tempOptionDAO->getRepListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } else if ($displayForFullRegion == 1 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    $tempOptionDAO = new OptionsDAO ();
                    $tempOptList = $tempOptionDAO->getOptionListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getRegionOfficerListWithSorting($regionid, $column, $option) {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $officerQuery = "select officers.* from officers,users where officers.id=users.officerId and officers.officerStatus='5' order by officers.civilCode";

        if ($option == "") {
            $option = "ASC";
        }
        if ($column != '') {
            $officerQuery = "select officers.* from officers,users where officers.id=users.officerId and officers.officerStatus='5'";
            $officerQuery .= " order by " . $column . " " . $option;
        }

        $officerResult = mysql_query($officerQuery);
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            // $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
            // $expcity = explode("|",$tempCityValue);
            if ($tempPostingVO->getRegion() != "" or $tempPostingVO->getRegion() != 0) {
                if ($regionid == $tempPostingVO->getRegion()) {
                    $tempOfficerVO = new OfficerVO ();
                    // Finally we assign the new variables
                    for ($i = 0; $i < $numfields; $i ++) {
                        $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                    }
                    $officerArray [count($officerArray)] = $tempOfficerVO;
                }
            }
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getRegionOfficerOptions($regionid) {
        $officerQuery = "select OP.* from officers O,cities C,regions R,options OP where O.city=C.id and C.regionid =R.id and R.id='$regionid' and OP.officerid=O.id and OP.isActive='Pending' order by OP.modifiedOn DESC";
        $officerResult = mysql_query($officerQuery);

        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOptionVO = new OptionsVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOptionVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOptionVO;
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getOfficerFlagList() {
        $officerQuery = "select o.*,oflag.flagid as flag from officers o,officerflags oflag where oflag.officerid = o.id order by o.name";

        $officerResult = mysql_query($officerQuery);

        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        return $officerArray;
    }

    /*
     * This function gets the list of officers
     */

    public function getFlagListForOfficer($id) {
        $officerQuery = "select oflag.flagid as flag from officers o,officerflags oflag where oflag.officerid='$id' AND oflag.officerid = o.id order by o.name";
        $officerResult = mysql_query($officerQuery);

        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            // for($i=0;$i<$numfields;$i++)
            // {
            // $tempOfficerVO->$fieldname[$i]=$row->$fieldname[$i];
            $tempOfficerVO->setFlag($row [flag]);
            // }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        return $officerArray;
    }

    public function insertintoflagtable() {
        $expofficer = explode(",", $_POST ['selstrpass']);
        $t = 0;
        while ($t < count($expofficer)) {
            if ($expofficer [$t] != "") {
                $flagquery = "INSERT into officerflags (flagid,officerid,createdBy,createdOn,isActive) values('$_REQUEST[flag]','$expofficer[$t]','$_SESSION[userId]',CURRENT_TIMESTAMP,'1')";
                $flagresult = mysql_query($flagquery) or die(mysql_error() . $flagquery);
            }
            $t ++;
        }
        // $flagresult = mysql_query($flagquery);
    }

    /*
     * This function gets the search for a name
     */

    public function getSearchFlagResults($sname) {
        $areaQuery = "select o.*,of.flagid as flag from officerflags of,officers o where of.officerid=o.id and o.civilCode='$sname' and o.officerStatus='5'";
        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $areaArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $areaArray [count($areaArray)] = $tempOfficerVO;
        }
        return $areaArray;
    }

    /*
     * This function gets the search for a name
     */

    public function checkSeniorityForOfficer($seniority, $grade, $officerid = '') {
        $seniorityVal = intval($seniority);
        if ($officerid == '') {
            $areaQuery = "select * from officers where gradeid='$grade' and seniority='$seniorityVal'";
        } else {
            $areaQuery = "select * from officers where gradeid='$grade' and seniority='$seniorityVal' and id!='$officerid'";
        }

        $areaResult = mysql_query($areaQuery);

        if (mysql_num_rows($areaResult) > 0) {
            return false;
        } else {
            return true;
        }
    }

    /*
     * This function gets the search for a name
     */

    public function getFlagDetailsforOfficer($flagid, $officerid) {
        $areaQuery = "select o.*,of.flagid as flag from officerflags of,officers o where of.officerid=o.id and of.flagid='$flagid' and of.officerid='$officerid'";
        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    /*
     * This function gets the search for a name
     */

    public function getConstantDetailsforOfficer($officerid) {
        $areaQuery = "select o.* from officerconstants of,officers o where of.officerid=o.id and of.officerid='$officerid'";
        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    public function updateflagtable($officerid, $oldflag, $newflag) {
        $flagquery = "update officerflags set flagid='$newflag', modifiedBy='$_SESSION[userId]' where officerid ='$officerid' and flagid='$oldflag'";
        $flagresult = mysql_query($flagquery);
        return true;
    }

    public function deleteflagtable($officerid, $oldflag) {
        $userId = $_SESSION['userId'];
        if (!empty($oldflag))
            $flagquery = "UPDATE officerflags SET isActive=0,modifiedOn=now(),modifiedBy=$userId where officerid ='$officerid' and flagid='$oldflag' AND isActive=1";
        else
            $flagquery = "UPDATE officerflags SET isActive=0,modifiedOn=now(),modifiedBy=$userId where officerid ='$officerid' AND isActive=1";
        $flagresult = mysql_query($flagquery);
        return true;
    }

    public function deleteconstanttable($officerid) {
        $flagquery = "delete from officerconstants where officerid ='$officerid'";
        // echo $flagquery;
        $flagresult = mysql_query($flagquery);
        return true;
    }

    /*
     * This function gets the officer for a id
     */

    public function getOfficerBasicDetails($id, $status) {
        $officerQuery = "select * from officers where id = '$id' and officerStatus='$status'";

        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    public function insertintoconstanttable() {
        $expofficer = explode(",", $_POST ['selstrpass']);
        $t = 0;
        while ($t < count($expofficer)) {
            if ($expofficer [$t] != "") {
                $checkquery = "SELECT * FROM officerconstants WHERE officerid='$expofficer[$t]' AND constantid='$_REQUEST[constant]'";
                $checkresult = mysql_query($checkquery);
                if (mysql_num_rows($checkresult) == 0) {
                    $flagquery = "INSERT into officerconstants (constantid,officerid,createdBy,createdOn,modifiedBy,modifiedOn,isActive) values('$_REQUEST[constant]','$expofficer[$t]','$_SESSION[userId]',CURRENT_TIMESTAMP,'','','1')";

                    $flagresult = mysql_query($flagquery);
                }
            }
            $t ++;
        }
        // $flagresult = mysql_query($flagquery);
    }

    public function calculateclasssummary($lastofficerid) {
        $tempOfficerDAO = new OfficerDAO ();
        $tempRankDAO = new RankDAO ();
        $tempOptionsDAO = new OptionsDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempPosttypeDAO = new PostTypeDAO ();
        $tempPostsDAO = new PostsDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempPTDAO = new PostTypeDAO ();
        $tempPDAO = new PostingDAO ();

        $tempRegionDAO = new RegionDAO ();
        $tempGradesDAO = new GradesDAO ();
        $tempPSDAO = new ProfileStatusDAO ();
        $tempConstantDAO = new ConstantDAO ();

        // Fetching Current Posting Class
        // $tempCurrentPostingClass = $tempStgPostingsDAO->getDueListCurrentPClass($lastofficerid);

        $tempOfficerCRegion = $tempStgPostingsDAO->getDueListCurrentRegion($lastofficerid);

        $tempARegularListWithPolicy = 0;
        $tempBRegularListWithPolicy = 0;
        $tempCRegularListWithPolicy = 0;
        $tempRegularYear = 0;
        $tempAExemptedListWithPolicy = 0;
        $tempBExemptedListWithPolicy = 0;
        $tempCExemptedListWithPolicy = 0;
        $tempExemptedYear = 0;
        $tempADeputationListWithPolicy = 0;
        $tempBDeputationListWithPolicy = 0;
        $tempCDeputationListWithPolicy = 0;
        $tempDeputationYear = 0;
        $tempTotalAREListWithPolicy = 0;
        $tempTotalBREListWithPolicy = 0;
        $tempTotalCREListWithPolicy = 0;
        $tempSubtotalYear = 0;
        $tempSubtotalClassAYear = 0;
        $tempSubtotalClassBYear = 0;
        $tempSubtotalClassCYear = 0;
        $tempSubtotalTYear = 0;

        /*
         * if(count($tempAreaList)>0) { for($p=0;$p<count($tempAreaList);$p++) { $tempAreaVO = $tempAreaList[$p];
         */
        $tempRegionList = $tempRegionDAO->getRegionsList();
        if (count($tempRegionList) > 0) {
            // Calculate Total Stay in a Zone under Regular Post
            // $tempZoneRegularList = $tempStgPostingsDAO->getZoneStayRE($lastofficerid,$tempAreaVO->getId(),'2');
            // Calculate Total Stay in a Zone under Deputation Post
            // $tempZoneDeputationList = $tempStgPostingsDAO->getZoneStay($lastofficerid,$tempAreaVO->getId(),'4');
            // Calculate Stay in a Zone under Regular+Exempted Post
            // $tempZoneRDYear = $tempZoneRegularList;
            // Calculate Total Stay in a Zone
            // $tempTotalZoneStay = 0;
            // $tempTotalZoneStay = $tempZoneDeputationList+$tempZoneRDYear;

            for ($s = 0; $s < count($tempRegionList); $s ++) {
                $tempCSRegionList = "";

                $tempRegionVO = $tempRegionList [$s];

                // Calculate Stay in A Class in a Region under Regular Post
                $tempZoneRegionARegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '1', '2');
                // $tempDisplayZoneRegionARegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'1','2');
                $tempARegularListWithPolicy += $tempZoneRegionARegularList;

                // Calculate Stay in B Class in a Region under Regular Post
                $tempZoneRegionBRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '2', '2');
                // $tempDisplayZoneRegionBRegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','2');
                $tempBRegularListWithPolicy += $tempZoneRegionBRegularList;

                // Calculate Stay in C Class in a Region under Regular Post
                $tempZoneRegionCRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '3', '2');
                // $tempDisplayZoneRegionCRegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','2');
                $tempCRegularListWithPolicy += $tempZoneRegionCRegularList;

                // Calculate Stay in a Class under Regular Post
                $tempRegularYear = $tempARegularListWithPolicy + $tempBRegularListWithPolicy + $tempCRegularListWithPolicy;
                // $CheckRegularRegionSum = $tempZoneRegionARegularList+$tempZoneRegionBRegularList+$tempZoneRegionCRegularList;
                // Calculate Stay in a Region under Regular Post
                // $tempZoneRegionRegularYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$tempRegionVO->getId(),'2');
                // Calculate Stay in A Class in a Region under Exempted Post
                $tempZoneRegionAExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '1', '3');
                // $tempDisplayZoneRegionAExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'1','3');
                // $tempAExemptedListWithPolicy += $tempZoneRegionAExemptedList;
                // Calculate Stay in B Class in a Region under Exempted Post
                // $tempZoneRegionBExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','3');
                // $tempDisplayZoneRegionBExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','3');
                // $tempBExemptedListWithPolicy += $tempZoneRegionBExemptedList;
                // Calculate Stay in C Class in a Region under Exempted Post
                // $tempZoneRegionCExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','3');
                // $tempDisplayZoneRegionCExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','3');
                // $tempCExemptedListWithPolicy += $tempZoneRegionCExemptedList;
                // Calculate Stay in a Class under Exempted Post
                // $tempExemptedYear = $tempAExemptedListWithPolicy + $tempBExemptedListWithPolicy + $tempCExemptedListWithPolicy;
                // $CheckExemptedRegionSum = $tempZoneRegionAExemptedList+$tempZoneRegionBExemptedList+$tempZoneRegionCExemptedList;
                // Calculate Stay in a Region under Exempted Post
                // $tempZoneRegionExemptedYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$tempRegionVO->getId(),'3');
                // Calculate Stay in A Class in a Region under Deputation Post
                $tempZoneRegionADeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '1', '4');
                // $tempDisplayZoneRegionADeputationList = $tempStgPostingsDAO->getDisplayZoneRegionDeputationStay($lastofficerid,$tempRegionVO->getId(),'1','4');
                $tempADeputationListWithPolicy += $tempZoneRegionADeputationList;

                // Calculate Stay in B Class in a Region under Deputation Post
                $tempZoneRegionBDeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '2', '4');
                // $tempDisplayZoneRegionBDeputationList = $tempStgPostingsDAO->getDisplayZoneRegionDeputationStay($lastofficerid,$tempRegionVO->getId(),'2','4');
                $tempBDeputationListWithPolicy += $tempZoneRegionBDeputationList;

                // Calculate Stay in C Class in a Region under Deputation Post
                $tempZoneRegionCDeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $tempRegionVO->getId(), '3', '4');
                // $tempDisplayZoneRegionCDeputationList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','4');
                $tempCDeputationListWithPolicy += $tempZoneRegionCDeputationList;

                // Calculate Stay in a Class under Exempted Post
                // $tempDeputationYear = $tempADeputationListWithPolicy + $tempBDeputationListWithPolicy + $tempCDeputationListWithPolicy;
                // $CheckDeputationRegionSum = $tempZoneRegionADeputationList+$tempZoneRegionBDeputationList+$tempZoneRegionCDeputationList;
                // Calculate Stay in a Region under Deputation Post
                $tempZoneRegionDeputationYear = $tempStgPostingsDAO->getRegionStay($lastofficerid, $tempRegionVO->getId(), '4');

                // Calculate stay for Regular+Exempted for A Class
                $tempZoneRegionSubtotalAYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $tempRegionVO->getId(), '1');
                $tempTotalAREListWithPolicy += $tempZoneRegionSubtotalAYear;

                // Calculate stay for Regular+Exempted for B Class
                $tempZoneRegionSubtotalBYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $tempRegionVO->getId(), '2');
                $tempTotalBREListWithPolicy += $tempZoneRegionSubtotalBYear;

                // Calculate stay for Regular+Exempted for C Class
                $tempZoneRegionSubtotalCYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $tempRegionVO->getId(), '3');
                $tempTotalCREListWithPolicy += $tempZoneRegionSubtotalCYear;

                // Calculate stay for Regular+Exempted
                $tempZoneRegionSubtotalYear = $tempStgPostingsDAO->getRegionStayWithRE($lastofficerid, $tempRegionVO->getId());
                $tempSubtotalYear += $tempZoneRegionSubtotalYear;
                // $CheckSubtotalRegionSum = $tempZoneRegionSubtotalAYear+$tempZoneRegionSubtotalBYear+$tempZoneRegionSubtotalCYear;
                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayAClass = $tempZoneRegionARegularList + $tempZoneRegionAExemptedList + $tempZoneRegionADeputationList;
                $tempSubtotalClassAYear += $tempTotalStayAClass;

                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayBClass = $tempZoneRegionBRegularList + $tempZoneRegionBExemptedList + $tempZoneRegionBDeputationList;
                $tempSubtotalClassBYear += $tempTotalStayBClass;

                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayCClass = $tempZoneRegionCRegularList + $tempZoneRegionCExemptedList + $tempZoneRegionCDeputationList;
                $tempSubtotalClassCYear += $tempTotalStayCClass;

                // Calculate Total Stay in a Region for Regular+Exempted+Deputation
                $tempTotalStay = $tempZoneRegionSubtotalYear + $tempZoneRegionDeputationYear;
                $tempSubtotalTYear += $tempTotalStay;

                // Calculate Stay in A Class under Regular Post
                // $tempDisplayARegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','2');
                // Calculate Stay in B Class under Regular Post
                // $tempDisplayBRegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','2');
                // Calculate Stay in C Class under Regular Post
                // $tempDisplayCRegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','2');
                // Calculate Total Stay in Class under Regular Post
                // $tempTotalRegularClassStay = $tempARegularListWithPolicy+$tempBRegularListWithPolicy+$tempCRegularListWithPolicy;
                // Calculate Stay in A Class under Exempted Post
                // $tempDisplayAExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','3');
                // Calculate Stay in B Class under Exempted Post
                // $tempDisplayBExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','3');
                // Calculate Stay in C Class under Exempted Post
                // $tempDisplayCExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','3');
                // Calculate Total Stay in Class under Exempted Post
                // $tempTotalExemptedClassStay = $tempAExemptedListWithPolicy+$tempBExemptedListWithPolicy+$tempCExemptedListWithPolicy;
                // Calculate Stay in A Class under Deputation Post
                // $tempDisplayADeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','4');
                // Calculate Stay in B Class under Deputation Post
                // $tempDisplayBDeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','4');
                // Calculate Stay in C Class under Deputation Post
                // $tempDisplayCDeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','4');
                // Calculate Total Stay in Class under Deputation Post
                // $tempTotalDeputationClassStay = $tempADeputationListWithPolicy+$tempBDeputationListWithPolicy+$tempCDeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for A Class
                // $tempSubtotalClassAYear = $tempARegularListWithPolicy+$tempAExemptedListWithPolicy+$tempADeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for B Class
                // $tempSubtotalClassBYear = $tempBRegularListWithPolicy+$tempBExemptedListWithPolicy+$tempBDeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for C Class
                // $tempSubtotalClassCYear = $tempCRegularListWithPolicy+$tempCExemptedListWithPolicy+$tempCSDeputationListWithPolicy;
                // Calculate Total Stay in a Class
                // $tempTotalStayAClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'1');
                // Calculate Total Stay in a Class
                // $tempTotalStayBClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'2');
                // Calculate Total Stay in a Class
                // $tempTotalStayCClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'3');
                // Calculate Total Stay
                // $tempTotalStay = $tempStgPostingsDAO->getTotalStay($lastofficerid);
                // $tempTotalStayWithPolicy = $tempStgPostingsDAO->getTotalStayWithPolicy($lastofficerid);
                // Calculate Stay under Regular+Exempted Post
                // $tempTotalREListWithPolicy = $tempStgPostingsDAO->getREStayWithPolicy($lastofficerid);
            }
        }
        $tempClassStayA = $tempStgPostingsDAO->getClassRegionStayWithR($lastofficerid, '1');
        $tempYear [0] = $tempRegularYear;
        $tempYear [1] = $tempSubtotalYear;
        $tempYear [2] = $tempSubtotalYear + $tempDeputationYear;
        $tempYear [3] = $tempTotalAREListWithPolicy;
        $tempYear [4] = $tempTotalAREListWithPolicy + $tempADeputationListWithPolicy;
        $tempYear [5] = $tempARegularListWithPolicy;
        $tempYear [6] = $tempBRegularListWithPolicy;
        $tempYear [7] = $tempCRegularListWithPolicy;
        $tempYear [8] = $tempTotalBREListWithPolicy;
        $tempYear [9] = $tempTotalCREListWithPolicy;
        $tempYear [10] = $tempTotalBREListWithPolicy + $tempBDeputationListWithPolicy;
        $tempYear [11] = $tempTotalCREListWithPolicy + $tempCDeputationListWithPolicy;
        $tempYear [12] = $tempClassStayA;
        return $tempYear;
    }

    /*
     * Following Tow Functions are added by Pulkit For draft-order-search.php due results enhancement used in draftOrdreDAO.php->getDueListSearchResults function
     */

    // -------------------------------------------------------------------
    public function calculateclasssummaryex($lastofficerid, $tempPListFilled) {
        $tempOfficerDAO = new OfficerDAO ();
        $tempRankDAO = new RankDAO ();
        $tempOptionsDAO = new OptionsDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempPosttypeDAO = new PostTypeDAO ();
        $tempPostsDAO = new PostsDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempPTDAO = new PostTypeDAO ();
        $tempPDAO = new PostingDAO ();

        $tempRegionDAO = new RegionDAO ();
        $tempGradesDAO = new GradesDAO ();
        $tempPSDAO = new ProfileStatusDAO ();
        $tempConstantDAO = new ConstantDAO ();

        // Fetching Current Posting Class
        $tempCurrentPostingClass = $tempStgPostingsDAO->getDueListCurrentPClass($lastofficerid);

        $tempOfficerCRegion = $tempStgPostingsDAO->getDueListCurrentRegion($lastofficerid);

        $tempARegularListWithPolicy = 0;
        $tempBRegularListWithPolicy = 0;
        $tempCRegularListWithPolicy = 0;
        $tempRegularYear = 0;
        $tempAExemptedListWithPolicy = 0;
        $tempBExemptedListWithPolicy = 0;
        $tempCExemptedListWithPolicy = 0;
        $tempExemptedYear = 0;
        $tempADeputationListWithPolicy = 0;
        $tempBDeputationListWithPolicy = 0;
        $tempCDeputationListWithPolicy = 0;
        $tempDeputationYear = 0;
        $tempTotalAREListWithPolicy = 0;
        $tempTotalBREListWithPolicy = 0;
        $tempTotalCREListWithPolicy = 0;
        $tempSubtotalYear = 0;
        $tempSubtotalClassAYear = 0;
        $tempSubtotalClassBYear = 0;
        $tempSubtotalClassCYear = 0;
        $tempSubtotalTYear = 0;

        /*
         * if(count($tempAreaList)>0) { for($p=0;$p<count($tempAreaList);$p++) { $tempAreaVO = $tempAreaList[$p];
         */
        $tempRegionList = $tempRegionDAO->getRegions();
        if (count($tempRegionList) > 0) {
            // Calculate Total Stay in a Zone under Regular Post
            // $tempZoneRegularList = $tempStgPostingsDAO->getZoneStayRE($lastofficerid,$tempAreaVO->getId(),'2');
            // Calculate Total Stay in a Zone under Deputation Post
            // $tempZoneDeputationList = $tempStgPostingsDAO->getZoneStay($lastofficerid,$tempAreaVO->getId(),'4');
            // Calculate Stay in a Zone under Regular+Exempted Post
            // $tempZoneRDYear = $tempZoneRegularList;
            // Calculate Total Stay in a Zone
            // $tempTotalZoneStay = 0;
            // $tempTotalZoneStay = $tempZoneDeputationList+$tempZoneRDYear;

            for ($s = 0; $s < count($tempRegionList); $s ++) {
                $tempCSRegionList = "";

                $tempRegionVO = $tempRegionList [$s];

                // Calculate Stay in A Class in a Region under Regular Post
                $tempZoneRegionARegularList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '1', '2', $tempPListFilled);
                // $tempDisplayZoneRegionARegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'1','2');
                $tempARegularListWithPolicy += $tempZoneRegionARegularList;

                // Calculate Stay in B Class in a Region under Regular Post
                $tempZoneRegionBRegularList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '2', '2', $tempPListFilled);
                // $tempDisplayZoneRegionBRegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','2');
                $tempBRegularListWithPolicy += $tempZoneRegionBRegularList;

                // Calculate Stay in C Class in a Region under Regular Post
                $tempZoneRegionCRegularList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '3', '2', $tempPListFilled);
                // $tempDisplayZoneRegionCRegularList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','2');
                $tempCRegularListWithPolicy += $tempZoneRegionCRegularList;

                // Calculate Stay in a Class under Regular Post
                $tempRegularYear = $tempARegularListWithPolicy + $tempBRegularListWithPolicy + $tempCRegularListWithPolicy;
                // $CheckRegularRegionSum = $tempZoneRegionARegularList+$tempZoneRegionBRegularList+$tempZoneRegionCRegularList;
                // Calculate Stay in a Region under Regular Post
                // $tempZoneRegionRegularYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$tempRegionVO->getId(),'2');
                // Calculate Stay in A Class in a Region under Exempted Post
                $tempZoneRegionAExemptedList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '1', '3', $tempPListFilled);
                // $tempDisplayZoneRegionAExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'1','3');
                // $tempAExemptedListWithPolicy += $tempZoneRegionAExemptedList;
                // Calculate Stay in B Class in a Region under Exempted Post
                // $tempZoneRegionBExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','3');
                // $tempDisplayZoneRegionBExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'2','3');
                // $tempBExemptedListWithPolicy += $tempZoneRegionBExemptedList;
                // Calculate Stay in C Class in a Region under Exempted Post
                // $tempZoneRegionCExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','3');
                // $tempDisplayZoneRegionCExemptedList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','3');
                // $tempCExemptedListWithPolicy += $tempZoneRegionCExemptedList;
                // Calculate Stay in a Class under Exempted Post
                // $tempExemptedYear = $tempAExemptedListWithPolicy + $tempBExemptedListWithPolicy + $tempCExemptedListWithPolicy;
                // $CheckExemptedRegionSum = $tempZoneRegionAExemptedList+$tempZoneRegionBExemptedList+$tempZoneRegionCExemptedList;
                // Calculate Stay in a Region under Exempted Post
                // $tempZoneRegionExemptedYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$tempRegionVO->getId(),'3');
                // Calculate Stay in A Class in a Region under Deputation Post
                $tempZoneRegionADeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '1', '4', $tempPListFilled);
                // $tempDisplayZoneRegionADeputationList = $tempStgPostingsDAO->getDisplayZoneRegionDeputationStay($lastofficerid,$tempRegionVO->getId(),'1','4');
                $tempADeputationListWithPolicy += $tempZoneRegionADeputationList;

                // Calculate Stay in B Class in a Region under Deputation Post
                $tempZoneRegionBDeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '2', '4', $tempPListFilled);
                // $tempDisplayZoneRegionBDeputationList = $tempStgPostingsDAO->getDisplayZoneRegionDeputationStay($lastofficerid,$tempRegionVO->getId(),'2','4');
                $tempBDeputationListWithPolicy += $tempZoneRegionBDeputationList;

                // Calculate Stay in C Class in a Region under Deputation Post
                $tempZoneRegionCDeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $tempRegionVO->getId(), '3', '4', $tempPListFilled);
                // $tempDisplayZoneRegionCDeputationList = $tempStgPostingsDAO->getDisplayZoneRegionStay($lastofficerid,$tempRegionVO->getId(),'3','4');
                $tempCDeputationListWithPolicy += $tempZoneRegionCDeputationList;

                // Calculate Stay in a Class under Exempted Post
                // $tempDeputationYear = $tempADeputationListWithPolicy + $tempBDeputationListWithPolicy + $tempCDeputationListWithPolicy;
                // $CheckDeputationRegionSum = $tempZoneRegionADeputationList+$tempZoneRegionBDeputationList+$tempZoneRegionCDeputationList;
                // Calculate Stay in a Region under Deputation Post
                $tempZoneRegionDeputationYear = $tempStgPostingsDAO->getRegionStayex($lastofficerid, $tempRegionVO->getId(), '4', $tempPListFilled);

                // Calculate stay for Regular+Exempted for A Class
                $tempZoneRegionSubtotalAYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $tempRegionVO->getId(), '1', $tempPListFilled);
                $tempTotalAREListWithPolicy += $tempZoneRegionSubtotalAYear;

                // Calculate stay for Regular+Exempted for B Class
                $tempZoneRegionSubtotalBYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $tempRegionVO->getId(), '2', $tempPListFilled);
                $tempTotalBREListWithPolicy += $tempZoneRegionSubtotalBYear;

                // Calculate stay for Regular+Exempted for C Class
                $tempZoneRegionSubtotalCYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $tempRegionVO->getId(), '3', $tempPListFilled);
                $tempTotalCREListWithPolicy += $tempZoneRegionSubtotalCYear;

                // Calculate stay for Regular+Exempted
                $tempZoneRegionSubtotalYear = $tempStgPostingsDAO->getRegionStayWithREex($lastofficerid, $tempRegionVO->getId(), $tempPListFilled);
                $tempSubtotalYear += $tempZoneRegionSubtotalYear;
                // $CheckSubtotalRegionSum = $tempZoneRegionSubtotalAYear+$tempZoneRegionSubtotalBYear+$tempZoneRegionSubtotalCYear;
                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayAClass = $tempZoneRegionARegularList + $tempZoneRegionAExemptedList + $tempZoneRegionADeputationList;
                $tempSubtotalClassAYear += $tempTotalStayAClass;

                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayBClass = $tempZoneRegionBRegularList + $tempZoneRegionBExemptedList + $tempZoneRegionBDeputationList;
                $tempSubtotalClassBYear += $tempTotalStayBClass;

                // Calculate stay for Regular+Exempted+Deputation
                $tempTotalStayCClass = $tempZoneRegionCRegularList + $tempZoneRegionCExemptedList + $tempZoneRegionCDeputationList;
                $tempSubtotalClassCYear += $tempTotalStayCClass;

                // Calculate Total Stay in a Region for Regular+Exempted+Deputation
                $tempTotalStay = $tempZoneRegionSubtotalYear + $tempZoneRegionDeputationYear;
                $tempSubtotalTYear += $tempTotalStay;

                // Calculate Stay in A Class under Regular Post
                // $tempDisplayARegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','2');
                // Calculate Stay in B Class under Regular Post
                // $tempDisplayBRegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','2');
                // Calculate Stay in C Class under Regular Post
                // $tempDisplayCRegularListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','2');
                // Calculate Total Stay in Class under Regular Post
                // $tempTotalRegularClassStay = $tempARegularListWithPolicy+$tempBRegularListWithPolicy+$tempCRegularListWithPolicy;
                // Calculate Stay in A Class under Exempted Post
                // $tempDisplayAExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','3');
                // Calculate Stay in B Class under Exempted Post
                // $tempDisplayBExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','3');
                // Calculate Stay in C Class under Exempted Post
                // $tempDisplayCExemptedListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','3');
                // Calculate Total Stay in Class under Exempted Post
                // $tempTotalExemptedClassStay = $tempAExemptedListWithPolicy+$tempBExemptedListWithPolicy+$tempCExemptedListWithPolicy;
                // Calculate Stay in A Class under Deputation Post
                // $tempDisplayADeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'1','4');
                // Calculate Stay in B Class under Deputation Post
                // $tempDisplayBDeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'2','4');
                // Calculate Stay in C Class under Deputation Post
                // $tempDisplayCDeputationListWithPolicy = $tempStgPostingsDAO->getDisplayClassStayWithPolicy($lastofficerid,'3','4');
                // Calculate Total Stay in Class under Deputation Post
                // $tempTotalDeputationClassStay = $tempADeputationListWithPolicy+$tempBDeputationListWithPolicy+$tempCDeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for A Class
                // $tempSubtotalClassAYear = $tempARegularListWithPolicy+$tempAExemptedListWithPolicy+$tempADeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for B Class
                // $tempSubtotalClassBYear = $tempBRegularListWithPolicy+$tempBExemptedListWithPolicy+$tempBDeputationListWithPolicy;
                // Calculate stay for Regular+Exempted+Deputation for C Class
                // $tempSubtotalClassCYear = $tempCRegularListWithPolicy+$tempCExemptedListWithPolicy+$tempCSDeputationListWithPolicy;
                // Calculate Total Stay in a Class
                // $tempTotalStayAClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'1');
                // Calculate Total Stay in a Class
                // $tempTotalStayBClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'2');
                // Calculate Total Stay in a Class
                // $tempTotalStayCClassWithPolicy = $tempStgPostingsDAO->getTotalClassStayWithPolicy($lastofficerid,'3');
                // Calculate Total Stay
                // $tempTotalStay = $tempStgPostingsDAO->getTotalStay($lastofficerid);
                // $tempTotalStayWithPolicy = $tempStgPostingsDAO->getTotalStayWithPolicy($lastofficerid);
                // Calculate Stay under Regular+Exempted Post
                // $tempTotalREListWithPolicy = $tempStgPostingsDAO->getREStayWithPolicy($lastofficerid);
            }
        }
        $tempClassStayA = $tempStgPostingsDAO->getClassRegionStayWithRex($lastofficerid, '1', $tempPListFilled);
        $tempYear [0] = $tempRegularYear;
        $tempYear [1] = $tempSubtotalYear;
        $tempYear [2] = $tempSubtotalYear + $tempDeputationYear;
        $tempYear [3] = $tempTotalAREListWithPolicy;
        $tempYear [4] = $tempTotalAREListWithPolicy + $tempADeputationListWithPolicy;
        $tempYear [5] = $tempARegularListWithPolicy;
        $tempYear [6] = $tempBRegularListWithPolicy;
        $tempYear [7] = $tempCRegularListWithPolicy;
        $tempYear [8] = $tempTotalBREListWithPolicy;
        $tempYear [9] = $tempTotalCREListWithPolicy;
        $tempYear [10] = $tempTotalBREListWithPolicy + $tempBDeputationListWithPolicy;
        $tempYear [11] = $tempTotalCREListWithPolicy + $tempCDeputationListWithPolicy;
        $tempYear [12] = $tempClassStayA;
        return $tempYear;
    }

    public function calculateregionsummaryex($lastofficerid, $regionid, $tempPListFilled) {
        $tempOfficerDAO = new OfficerDAO ();
        $tempRankDAO = new RankDAO ();
        $tempOptionsDAO = new OptionsDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempPosttypeDAO = new PostTypeDAO ();
        $tempPostsDAO = new PostsDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempPTDAO = new PostTypeDAO ();
        $tempPDAO = new PostingDAO ();

        $tempRegionDAO = new RegionDAO ();
        $tempGradesDAO = new GradesDAO ();
        $tempPSDAO = new ProfileStatusDAO ();
        $tempConstantDAO = new ConstantDAO ();

        // Fetching Current Posting Class
        $tempCurrentPostingClass = $tempStgPostingsDAO->getDueListCurrentPClass($lastofficerid);

        $tempOfficerCRegion = $tempStgPostingsDAO->getDueListCurrentRegion($lastofficerid);

        $tempARegularListWithPolicy = 0;
        $tempBRegularListWithPolicy = 0;
        $tempCRegularListWithPolicy = 0;
        $tempRegularYear = 0;
        $tempAExemptedListWithPolicy = 0;
        $tempBExemptedListWithPolicy = 0;
        $tempCExemptedListWithPolicy = 0;
        $tempExemptedYear = 0;
        $tempADeputationListWithPolicy = 0;
        $tempBDeputationListWithPolicy = 0;
        $tempCDeputationListWithPolicy = 0;
        $tempDeputationYear = 0;
        $tempTotalAREListWithPolicy = 0;
        $tempTotalBREListWithPolicy = 0;
        $tempTotalCREListWithPolicy = 0;
        $tempSubtotalYear = 0;
        $tempSubtotalClassAYear = 0;
        $tempSubtotalClassBYear = 0;
        $tempSubtotalClassCYear = 0;
        $tempSubtotalTYear = 0;

        $tempCSRegionList = "";

        // $tempRegionVO = $tempRegionList[$s];
        // Calculate Stay in A Class in a Region under Regular Post
        // $tempZoneRegionARegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'1','2');
        // $tempARegularListWithPolicy += $tempZoneRegionARegularList;
        // Calculate Stay in B Class in a Region under Regular Post
        // $tempZoneRegionBRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'2','2');
        // $tempBRegularListWithPolicy += $tempZoneRegionBRegularList;
        // Calculate Stay in C Class in a Region under Regular Post
        // $tempZoneRegionCRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'3','2');
        // $tempCRegularListWithPolicy += $tempZoneRegionCRegularList;
        // Calculate Stay in a Class under Regular Post
        // $tempRegularYear = $tempARegularListWithPolicy + $tempBRegularListWithPolicy + $tempCRegularListWithPolicy;
        // Calculate Stay in A Class in a Region under Exempted Post
        // $tempZoneRegionAExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'1','3');
        // Calculate Stay in A Class in a Region under Deputation Post
        $tempZoneRegionADeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $regionid, '1', '4', $tempPListFilled);
        // $tempADeputationListWithPolicy += $tempZoneRegionADeputationList;
        // Calculate Stay in B Class in a Region under Deputation Post
        $tempZoneRegionBDeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $regionid, '2', '4', $tempPListFilled);
        // $tempBDeputationListWithPolicy += $tempZoneRegionBDeputationList;
        // Calculate Stay in C Class in a Region under Deputation Post
        $tempZoneRegionCDeputationList = $tempStgPostingsDAO->getZoneRegionStayex($lastofficerid, $regionid, '3', '4', $tempPListFilled);
        // $tempCDeputationListWithPolicy += $tempZoneRegionCDeputationList;
        // Calculate Stay in a Region under Deputation Post
        // $tempZoneRegionDeputationYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$regionid,'4');
        // Calculate stay for Regular+Exempted for A Class
        $tempZoneRegionSubtotalAYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $regionid, '1', $tempPListFilled);
        // $tempTotalAREListWithPolicy += $tempZoneRegionSubtotalAYear;
        // Calculate stay for Regular+Exempted for B Class
        $tempZoneRegionSubtotalBYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $regionid, '2', $tempPListFilled);
        // $tempTotalBREListWithPolicy += $tempZoneRegionSubtotalBYear;
        // Calculate stay for Regular+Exempted for C Class
        $tempZoneRegionSubtotalCYear = $tempStgPostingsDAO->getClassRegionStayWithREex($lastofficerid, $regionid, '3', $tempPListFilled);
        // $tempTotalCREListWithPolicy += $tempZoneRegionSubtotalCYear;
        // Calculate stay for Regular+Exempted
        // $tempZoneRegionSubtotalYear = $tempStgPostingsDAO->getRegionStayWithRE($lastofficerid,$regionid);
        // $tempSubtotalYear += $tempZoneRegionSubtotalYear;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayAClass = $tempZoneRegionARegularList+$tempZoneRegionAExemptedList+$tempZoneRegionADeputationList;
        // $tempSubtotalClassAYear += $tempTotalStayAClass;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayBClass = $tempZoneRegionBRegularList+$tempZoneRegionBExemptedList+$tempZoneRegionBDeputationList;
        // $tempSubtotalClassBYear += $tempTotalStayBClass;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayCClass = $tempZoneRegionCRegularList+$tempZoneRegionCExemptedList+$tempZoneRegionCDeputationList;
        // $tempSubtotalClassCYear += $tempTotalStayCClass;
        // Calculate Total Stay in a Region for Regular+Exempted+Deputation
        // $tempTotalStay = $tempZoneRegionSubtotalYear+$tempZoneRegionDeputationYear;
        // $tempSubtotalTYear += $tempTotalStay;

        $tempYear [0] = $tempZoneRegionSubtotalAYear + $tempZoneRegionADeputationList;
        $tempYear [1] = $tempZoneRegionSubtotalBYear + $tempZoneRegionBDeputationList;
        $tempYear [2] = $tempZoneRegionSubtotalCYear + $tempZoneRegionCDeputationList;
        return $tempYear;
    }

    // ---------------------------------------------------------------------
    public function calculateregionsummary($lastofficerid, $regionid) {
        $tempOfficerDAO = new OfficerDAO ();
        $tempRankDAO = new RankDAO ();
        $tempOptionsDAO = new OptionsDAO ();
        $tempPostingDAO = new PostingDAO ();
        $tempPosttypeDAO = new PostTypeDAO ();
        $tempPostsDAO = new PostsDAO ();
        $tempStgPostingsDAO = new StgPostingsDAO ();
        $tempPTDAO = new PostTypeDAO ();
        $tempPDAO = new PostingDAO ();

        $tempRegionDAO = new RegionDAO ();
        $tempGradesDAO = new GradesDAO ();
        $tempPSDAO = new ProfileStatusDAO ();
        $tempConstantDAO = new ConstantDAO ();

        // Fetching Current Posting Class
        // $tempCurrentPostingClass = $tempStgPostingsDAO->getDueListCurrentPClass($lastofficerid);

        $tempOfficerCRegion = $tempStgPostingsDAO->getDueListCurrentRegion($lastofficerid);

        $tempARegularListWithPolicy = 0;
        $tempBRegularListWithPolicy = 0;
        $tempCRegularListWithPolicy = 0;
        $tempRegularYear = 0;
        $tempAExemptedListWithPolicy = 0;
        $tempBExemptedListWithPolicy = 0;
        $tempCExemptedListWithPolicy = 0;
        $tempExemptedYear = 0;
        $tempADeputationListWithPolicy = 0;
        $tempBDeputationListWithPolicy = 0;
        $tempCDeputationListWithPolicy = 0;
        $tempDeputationYear = 0;
        $tempTotalAREListWithPolicy = 0;
        $tempTotalBREListWithPolicy = 0;
        $tempTotalCREListWithPolicy = 0;
        $tempSubtotalYear = 0;
        $tempSubtotalClassAYear = 0;
        $tempSubtotalClassBYear = 0;
        $tempSubtotalClassCYear = 0;
        $tempSubtotalTYear = 0;

        $tempCSRegionList = "";

        // $tempRegionVO = $tempRegionList[$s];
        // Calculate Stay in A Class in a Region under Regular Post
        // $tempZoneRegionARegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'1','2');
        // $tempARegularListWithPolicy += $tempZoneRegionARegularList;
        // Calculate Stay in B Class in a Region under Regular Post
        // $tempZoneRegionBRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'2','2');
        // $tempBRegularListWithPolicy += $tempZoneRegionBRegularList;
        // Calculate Stay in C Class in a Region under Regular Post
        // $tempZoneRegionCRegularList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'3','2');
        // $tempCRegularListWithPolicy += $tempZoneRegionCRegularList;
        // Calculate Stay in a Class under Regular Post
        // $tempRegularYear = $tempARegularListWithPolicy + $tempBRegularListWithPolicy + $tempCRegularListWithPolicy;
        // Calculate Stay in A Class in a Region under Exempted Post
        // $tempZoneRegionAExemptedList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid,$regionid,'1','3');
        // Calculate Stay in A Class in a Region under Deputation Post
        $tempZoneRegionADeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $regionid, '1', '4');
        // $tempADeputationListWithPolicy += $tempZoneRegionADeputationList;
        // Calculate Stay in B Class in a Region under Deputation Post
        $tempZoneRegionBDeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $regionid, '2', '4');
        // $tempBDeputationListWithPolicy += $tempZoneRegionBDeputationList;
        // Calculate Stay in C Class in a Region under Deputation Post
        $tempZoneRegionCDeputationList = $tempStgPostingsDAO->getZoneRegionStay($lastofficerid, $regionid, '3', '4');
        // $tempCDeputationListWithPolicy += $tempZoneRegionCDeputationList;
        // Calculate Stay in a Region under Deputation Post
        // $tempZoneRegionDeputationYear = $tempStgPostingsDAO->getRegionStay($lastofficerid,$regionid,'4');
        // Calculate stay for Regular+Exempted for A Class
        $tempZoneRegionSubtotalAYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $regionid, '1');
        // $tempTotalAREListWithPolicy += $tempZoneRegionSubtotalAYear;
        // Calculate stay for Regular+Exempted for B Class
        $tempZoneRegionSubtotalBYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $regionid, '2');
        // $tempTotalBREListWithPolicy += $tempZoneRegionSubtotalBYear;
        // Calculate stay for Regular+Exempted for C Class
        $tempZoneRegionSubtotalCYear = $tempStgPostingsDAO->getClassRegionStayWithRE($lastofficerid, $regionid, '3');
        // $tempTotalCREListWithPolicy += $tempZoneRegionSubtotalCYear;
        // Calculate stay for Regular+Exempted
        // $tempZoneRegionSubtotalYear = $tempStgPostingsDAO->getRegionStayWithRE($lastofficerid,$regionid);
        // $tempSubtotalYear += $tempZoneRegionSubtotalYear;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayAClass = $tempZoneRegionARegularList+$tempZoneRegionAExemptedList+$tempZoneRegionADeputationList;
        // $tempSubtotalClassAYear += $tempTotalStayAClass;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayBClass = $tempZoneRegionBRegularList+$tempZoneRegionBExemptedList+$tempZoneRegionBDeputationList;
        // $tempSubtotalClassBYear += $tempTotalStayBClass;
        // Calculate stay for Regular+Exempted+Deputation
        // $tempTotalStayCClass = $tempZoneRegionCRegularList+$tempZoneRegionCExemptedList+$tempZoneRegionCDeputationList;
        // $tempSubtotalClassCYear += $tempTotalStayCClass;
        // Calculate Total Stay in a Region for Regular+Exempted+Deputation
        // $tempTotalStay = $tempZoneRegionSubtotalYear+$tempZoneRegionDeputationYear;
        // $tempSubtotalTYear += $tempTotalStay;

        $tempYear [0] = $tempZoneRegionSubtotalAYear + $tempZoneRegionADeputationList;
        $tempYear [1] = $tempZoneRegionSubtotalBYear + $tempZoneRegionBDeputationList;
        $tempYear [2] = $tempZoneRegionSubtotalCYear + $tempZoneRegionCDeputationList;
        return $tempYear;
    }

    /*
     * This function gets the search for a name
     */

    public function getRetirementReportSearchResults($startdate, $enddate, $rankid = '', $sortby = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
		$tempSubQuery = '';
        $tempSearchQuery = "select * from officers ";

        if ($sortby == '' || $sortby == 1)
            $sort_cond = " order by civilCode asc ";

        else if ($sortby == 2)
            $sort_cond = " order by retirementDate asc ";

        else if ($sortby == 3)
            $sort_cond = " order by name asc ";

        else if ($sortby == 4)
            $sort_cond = " order by rankid asc ";

        // Check for where clause
        if ($rankid > 0) {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officerStatus='5' AND exitDate>='$startdate' and exitDate<='$enddate' " . $sort_cond;
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officerStatus='5' AND exitDate>='$startdate' and exitDate<='$enddate' " . $sort_cond;
        }

//echo $tempSearchQuery; die;

        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /* For Search Retirement report */

    public function getRetirementReportSearchResultsreport($startdate, $enddate, $rankid = '', $sortby = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();

        $tempSearchQuery = "select * from officers ";

        if ($sortby == '' || $sortby == 1)
            $sort_cond = " order by civilCode asc ";

        else if ($sortby == 2)
            $sort_cond = " order by retirementDate asc ";

        else if ($sortby == 3)
            $sort_cond = " order by name asc ";

        else if ($sortby == 4)
            $sort_cond = " order by rankid asc ";

        // Check for where clause
        if ($rankid > 0) {
            $tempSearchQuery = $tempSearchQuery . " where AND officerStatus!='5' AND ";

            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = " rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  AND exitDate>='$startdate' and exitDate<='$enddate' " . $sort_cond;
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officerStatus!='5' AND exitDate>='$startdate' and exitDate<='$enddate' " . $sort_cond;
        }

        $_SESSION [searchQuery] = $tempSearchQuery;

        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    public function searchRetirementReportSearchResults($startdate, $enddate, $rankid = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();

        $tempSearchQuery = "select * from officers ";

        // Check for where clause
        if ($rankid > 0) {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND retirementDate between '$startdate' and '$enddate'  order by rankid desc,name";
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE  retirementDate between '$startdate' and '$enddate' order by rankid desc,name";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    public function RetirementReportSearchResults($startdate, $enddate, $rankid = '', $sortby = '') {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();

        if ($sortby == '' || $sortby == 1)
            $sort_cond = " order by civilCode asc ";

        else if ($sortby == 2)
            $sort_cond = " order by retirementDate asc ";

        else if ($sortby == 3)
            $sort_cond = " order by name asc ";

        else if ($sortby == 4)
            $sort_cond = " order by rankid asc ";

        $tempSearchQuery = "select * from officers ";

        // Check for where clause
        if ($rankid > 0) {
            $tempSearchQuery = $tempSearchQuery . " where officerStatus != 5 AND ";

            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = " rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND             
           case when (officerStatus IN ('0', '1') ) then ( exitDate between \"$startdate\" and \"$enddate\")

			when (officerStatus=4) then demiseDate between \"$startdate\" and \"$enddate\"

			else exitDate between \"$startdate\" and \"$enddate\" END=1            
            " . $sort_cond;
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officerStatus != 5 AND case when (officerStatus IN ('0', '1') ) then ( exitDate between \"$startdate\" and \"$enddate\")

			when (officerStatus=4) then demiseDate between \"$startdate\" and \"$enddate\"

			else exitDate between \"$startdate\" and \"$enddate\" END=1 " . $sort_cond;
        }

        $_SESSION [searchQuery] = $tempSearchQuery;

        // echo $tempSearchQuery;
        $officerResult = mysql_query($tempSearchQuery) or die(mysql_error());

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    /*
     * This function updates the status for the officers //updated by kanika on 3.12.2009 as the retired officer shd have status as superannuation and not retired as discussed with sir.
     */

    public function updateServingStatus($id) {
        $officersQuery = "update officers set officerStatus=1, modifiedBy='$_SESSION[userId]' where id='$id'";
         //echo $officersQuery; die;
        $officersResult = mysql_query($officersQuery);

        $officerQuery="SELECT exitDate FROM `officers` WHERE id='$id'";
        $officerDataResult = mysql_query($officerQuery) or die(mysql_error());
        $officerNumfields = mysql_num_fields($officerDataResult);
        
        if($officerNumfields>0){
            while ($row = mysql_fetch_object($officerDataResult)) {
                $exitDate=$row->exitDate;
            }
            $qryPending="SELECT id FROM `postings` WHERE officerid='$id' AND islastposting=4 ORDER BY `postings`.`id` DESC";
            $qryPendingResult = mysql_query($qryPending) or die(mysql_error());
            $numfieldsPending = mysql_num_fields($qryPendingResult);
            if($numfieldsPending>0){
                while ($row = mysql_fetch_object($qryPendingResult)) {
                    $pendingPostingRemoveQuery="update postings set isActive=0,islastposting=0,modifiedBy='".$_SESSION['userId']."' where id='".$row->id."'";
                    $Result = mysql_query($pendingPostingRemoveQuery);
                }

            }
            
            $qryLast="SELECT id FROM `postings` WHERE officerid='$id' AND islastposting=1 ORDER BY `postings`.`id` DESC";
            $qryLastResult = mysql_query($qryLast) or die(mysql_error());
            $numfieldsLast = mysql_num_fields($qryLastResult);
            if($numfieldsLast>0){
                while ($row = mysql_fetch_object($qryLastResult)) {
                    $pendingPostingRemoveQuery="update postings set islastposting=0,toDate='".$exitDate."',modifiedBy='".$_SESSION['userId']."' where id='".$row->id."'";
                    $Result = mysql_query($pendingPostingRemoveQuery);
                }

            }
        }
    }

    /*
     * This function updates the status for the officers
     */

    public function deactiveStatus($status, $id) {
        $officersQuery = "update officers set isActive='$status' ,modifiedBy='$_SESSION[userId]' where id='$id'";
        $officersResult = mysql_query($officersQuery);
    }

    /*
     * This function calculates the length of service left
     */

    // function getlengthofServiceleft() added by Sonal on 09-03-10
    public function getLengthOfServiceLeft($date1, $date2) {
        // echo $date1;
        $explodeDate1 = explode("-", $date1);

        if ($date2 == "") {
            $date2 = array();
            $date2 [0] = 2014;
            $date2 [1] = 12;
            $date2 [2] = 31;
        } else {
            $date2 = explode('-', $date2);
        }
        // -12-31";
        // echo strtotime ( $date1 );
        $diff = abs(adodb_mktime(0, 0, 0, $date2 [1], $date2 [2], $date2 [0]) - adodb_mktime(0, 0, 0, $explodeDate1 [1], $explodeDate1 [2], $explodeDate1 [0]));

        $years = floor($diff / (365 * 60 * 60 * 24));
        $months = floor(($diff - $years * 365 * 60 * 60 * 24) / (30 * 60 * 60 * 24));
        $days = floor(($diff - $years * 365 * 60 * 60 * 24 - $months * 30 * 60 * 60 * 24) / (60 * 60 * 24));
        // if ($years <= 3)
        // {
        $duration = ($years < 2) ? $years . ' year ' : $years . ' year ';
        $duration .= ($months < 2) ? $months . ' months ' : $months . ' months ';
        // $duration .= ($days==1) ? $days.' day ' : $days.' days ';
        // echo $duration;
        return $duration;
        // }
    }

    function stayInRegion($date) {
        // echo $date;
        $dateArray = explode("-", $date);
        $tempyear = $dateArray [0];
        $tempmonth = $dateArray [1];
        $tempday = $dateArray [2];

        if ($tempday >= 15) {
            $tempdayQuery = "select LAST_DAY('$date') as date";
        } else {
            $tempdayQuery = "SELECT DATE_SUB('$date',INTERVAL (DAY('$date')-1) DAY) as date";
        }
        // echo $tempdayQuery;
        $result = mysql_query($tempdayQuery) or die(mysql_error());
        $returnDate = mysql_result($result, 0, 'date');
        // echo $returnDate;
        return $returnDate;
    }

    public function updateDueAndCalculationRemarksForOfficer($officerid, $offcierStatus) {
        // echo "$officerid, $offcierStatus";
        $tempPTDAO = new PostTypeDAO ();
        if ($offcierStatus == 5) {
            // echo 'd';die();
            $remarksList = $tempPTDAO->tempFunctionForreturndueRemarkforoffcier($officerid);

            $query = "select * from officerremarks where officerid=\"$officerid\"";
            // echo $query;

            $result = mysql_query($query);

            $insertQuery = "insert into officerremarks values ";
            // $tempOfficerVO = $tempOfficerDAO->getOfficer($_REQUEST['id']);

            if (count($remarksList) > 0) {
                $dueRemarks = array();
                $yesOrNo = $remarksList [2];
                $dueRemarksString = "";
                $remarksOnCalcultation = array();
                $remarksOnCalcultationString = "";
                $allRemarksString = "";

                $insertQuery .= "(\"\",  \"$officerid\"";

                $dueRemarks = $remarksList [1];

                foreach ($dueRemarks as $drm) {
                    $dueRemarksString .= $drm . "\r";
                }

                $insertQuery .= ", \"$dueRemarksString\"";
                $remarksOnCalcultation = $remarksList [0];

                foreach ($remarksOnCalcultation as $crm) {
                    $remarksOnCalcultationString .= $crm . "\r";
                }

                $insertQuery .= ", \"$remarksOnCalcultationString\"";

                $allRemarksString .= $remarksOnCalcultationString . $dueRemarksString;

                $insertQuery .= ", \"$allRemarksString\", \"$yesOrNo\", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";

                $updateQuery = "update officerremarks set Due_Remarks=\"$dueRemarksString\" , Cs_Remarks=\"$remarksOnCalcultationString\", All_Remarks=\"$allRemarksString\",	 Due=\"$yesOrNo\", modifiedOn=CURRENT_TIMESTAMP where officerid=\"$officerid\"";
            } else {
                $insertQuery .= "(\"\", \"$officerid\", \"\", \"\", \"\", \"No\", CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)";

                $updateQuery = "update officerremarks set Due_Remarks=\"\" , Cs_Remarks=\"\", All_Remarks=\"\",	 Due=\"No\", modifiedOn=CURRENT_TIMESTAMP where officerid=\"$officerid\"";
            }

            if (mysql_num_rows($result) == 0) {

                $result = mysql_query($insertQuery);
            } else {
                $result = mysql_query($updateQuery);
            }
        }
    }

    public function chekOfficerid($officerid) {
        $query = "select  id  from officers where id=\"$officerid\"";
        // echo $query;
        $result = mysql_query($query);

        $rows = mysql_num_rows($result);
        // echo $rows ;
        if ($rows == 0) {
            return "No";
        } else {
            return "Yes";
        }
    }

    public function searchOfficersExitDuetoVRSorDemise($officerStatus, $startdate, $enddate, $rankid) {
        $query = "select o.name, civilCode, rankid, exitDate,  demiseDate, 
		
		if(officerstatus=2, exitDate, demiseDate) as EDT, 
		
		s.name as statusname from officers o join status s on o.officerStatus = s.id where";

        if ($officerStatus != '-1') {
            $query .= "  officerStatus=\"$officerStatus\" and  ";
        } else {
            $query .= "  officerStatus IN ('2', '4') and ";
        }

        if ($officerStatus != '-1') {
            if ($officerStatus == 2) {
                $query .= " exitDate between \"$startdate\" and \"$enddate\" ";
            } else {
                $query .= " demiseDate between \"$startdate\" and \"$enddate\" ";
            }
        } else {
            $query .= " if(officerStatus=2, exitDate between \"$startdate\" and \"$enddate\",  demiseDate between \"$startdate\" and \"$enddate\")";
        }

        if ($rankid != '-1' && $rankid != '') {
            $query .= " and rankid=\"$rankid\"";
        }

        $query .= " order by o.name";

        $officerResult = mysql_query($query) or die(mysql_error());

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new officerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $officerArray [count($officerArray)] = $tempOfficerVO;
        }

        return $officerArray;
    }

    /*
     * Added by Anshu Porwal @03-Feb-2011 This function gets the list of officers For Approval of Categorize Option
     */

    public function getRegionOfficerCatOptionList($regionid, $cat_option_id) {
        // echo $regionid." ".$cat_option_id;
        $officerRegionquery = "select isParent from regions where id=\"$regionid\"";
        $officerRegionqueryresult = mysql_query($officerRegionquery);
        $officerparentRegion = mysql_result($officerRegionqueryresult, 0, 'isParent');

        if ($officerparentRegion > 0) {
            $displayForFullRegion = "1";
        } else {
            $displayForFullRegion = "0";
        }

        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $officerQuery = "select * from officers where officerStatus='5' order by civilCode";
        $officerResult = mysql_query($officerQuery);
        $officerArray = array();
        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $officerSubregion = NULL;
            $offId = $row->id;
            $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
            $officerRegion = $tempPostingVO->getRegion();

            $subregionquery = "Select subregion from stg_postings where officerid=\"$offId\" order by fromdate DESC LIMIT 1";

            $subregionqueryResult = mysql_query($subregionquery);

            if (mysql_num_rows($subregionqueryResult) > 0) {
                $officerSubregion = mysql_result($subregionqueryResult, 0, 'subregion');
            }

            $ioRegionquery = "select isParent from regions where id=\"$officerSubregion\"";

            $ioRegionqueryresult = mysql_query($ioRegionquery);

            if (mysql_num_rows($ioRegionqueryresult) > 0) {
                $ioregion = mysql_result($ioRegionqueryresult, 0, 'isParent');
                if ($ioregion > 0) {
                    $officerRegion = $ioregion;
                }
            }

            if ($officerRegion != "" or $officerRegion != 0 || $officerSubRegion != "" || $officerSubRegion != 0) {
                if ($displayForFullRegion == 0 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    // Get option list
                    $tempCatOptionDAO = new CatOptionDAO ();
                    $tempOptList = $tempCatOptionDAO->getCatOptionListForCCA($row->id, $cat_option_id);
                    // $tempOptList = $tempOptionDAO->getOptionListForCCA($row->id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempCatOptionDAO->getCatOptionListForCCA($row->id, $cat_option_id));
                        // $tempOfficerVO->setOptionList($tempOptionDAO->getOptionListForCCA($row->id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                } else if ($displayForFullRegion == 1 && ($regionid == $officerRegion || $regionid == $officerSubregion)) {
                    $tempOptionDAO = new OptionsDAO ();
                    $tempOptList = $tempCatOptionDAO->getCatOptionListForCCA($row->id, $cat_option_id);
                    if (count($tempOptList) > 0) {
                        $tempOfficerVO = new OfficerVO ();
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $tempOfficerVO->setOptionList($tempCatOptionDAO->getCatOptionListForCCA($row->id, $cat_option_id));
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        // return $officerArray;
    }

    function checkOfficerInFlag($flagid, $officerid) {
        $query = "select officerid from officerflags where flagid=\"$flagid\" and officerid=\"$officerid\"";

        $result = mysql_query($query) or die(mysql_error());
        if (mysql_num_rows($result) > 0) {
            return true;
        } else {
            return false;
        }
    }

    function isformActive($servey_id) {
        $query = "select isActive from servey_hdr_tbl where servey_id = \"$servey_id\" and isActive=\"1\"";
        $result = mysql_query($query);
        if (mysql_num_rows($result) > 0) {
            return true;
        } else {
            return false;
        }
    }

    public function updateOfficerDomicileState($officerid, $domicileState) {
        $updateStateQuery = "update officers set domicileState='$domicileState', modifiedBy='$_SESSION[userId]' WHERE id='$officerid'";
        mysql_query($updateStateQuery);
    }

    // ------------------------------------------------ 12 Feb 2014 -------------------------------------------
    // -----------------------Edited by Shubham ------------------
    public function insertintoflagdghrdtable() {
        // $expofficer = explode(",",$_POST['cb']);

        $expofficer = $_POST ['cb'];


        $t = 0;

        while ($t < count($expofficer)) {
            $query = "SELECT * FROM `officerdghrdflags` WHERE `officerid`= '" . $expofficer [$t] . "' AND flagid = '$_REQUEST[flag]' AND flagType='$_REQUEST[flagType]'";

            $res = @mysql_query($query);
            $numcount = @mysql_num_rows($res);

            if ($numcount <= 0) {
                if ($expofficer [$t] != "") {
                    $flagquery = "INSERT into officerdghrdflags (flagid,flagType,officerid,createdBy,createdOn,isActive) values('$_REQUEST[flag]','$_REQUEST[flagType]','$expofficer[$t]','$_SESSION[userId]',CURRENT_TIMESTAMP,'1')";

                    $flagresult = mysql_query($flagquery) or die(mysql_error() . $flagquery);
                }
            }
            $t ++;
        }
        // $flagresult = mysql_query($flagquery);
        return true;
    }

    // ------------------------------------------------------------
    public function getSearchResultsdghrd() {

        // updated by kanika on 9.11.09 with status rpt changes
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = trim($searchOfficerParamArray ['name']);
        //echo $name; die();
        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $flagid = $searchOfficerParamArray ['flagid'];
        if ($flagid != - 1) {
            $tempSearchQuery = "select officers.*,officerdghrdflags.flagid as flag from officers,officerdghrdflags";
        } else {
            $tempSearchQuery = "select distinct officers.* from officers LEFT OUTER JOIN users ON officers.id=users.officerId left outer join stg_postings s on officers.id=s.officerid ";
        }
        // echo $tempSearchQuery;die();
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') { // echo $civilCode." civil code ";
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
                // echo $tempSubQuery." this is query ";
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%' AND officers.name!='$name'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "(";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring.= "officers.name LIKE '%$newname%'";
                            }
                        } elseif ($t == count($expname) - 1) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%'";
                            }
                        } else {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%'";
                            }
                        }
                        $t ++;
                    }
                    if ($qstring != "(")
                        $qstring.=")";

                    //echo $qstring; die();
                    $tempAppendStr = $qstring;
                    $tempAppendStr .= " AND officers.name!='$name'";
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($flagid != '-1') {
                $tempAppendStr = "officerdghrdflags.flagid = '$flagid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }

        if ($tempSubQuery != "") {
            if ($flagid != '-1') {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  AND officers.id=officerdghrdflags.officerid order by officers.civilCode";
            } else {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
            }
        } else {
            if (empty($tempSubQuery)) {
                $tempSubQuery .= ' 1=1 ';
            }
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        // echo $tempSearchQuery;

        $officerResult = mysql_query($tempSearchQuery) or die(mysql_error());

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCity());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == 6) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 180) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 9) {
                        if ($tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 355) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 14) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 7) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 180 or $tempPostingVO->getCity() == 355) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 15) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // --------------------------------------
    public function getSearchResultsFlagNamedghrd() {
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];

        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $flagid = $searchOfficerParamArray ['flagid'];
        if ($flagid != - 1) {
            $tempSearchQuery = "select officers.*,officerdghrdflags.flagid as flag from officers,users,officerdghrdflags";
        } else {
            $tempSearchQuery = "select officers.* from officers,users";
        }

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') {
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($name != '') {
                $tempAppendStr = "officers.name='" . trim($name) . "' ";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
                //echo "<pre>"; echo $tempSubQuery; die();
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = "officers.rankid = '$rankid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($flagid != '-1') {
                $tempAppendStr = "officerdghrdflags.flagid = '$flagid'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }
        if ($tempSubQuery != "") {
            if ($flagid != '-1') {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId AND officers.id=officerdghrdflags.officerid order by officers.civilCode";
            } else {
                //echo "<pre>"; echo $tempSearchQuery. $tempSubQuery; die();
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " AND officers.id=users.officerId order by officers.name";
                //echo "<pre>"; echo $tempSearchQuery; die();
            }
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . " WHERE officers.id=users.officerId order by officers.name";
            //echo "<pre>"; echo $tempSearchQuery; die();
        }

        $_SESSION [searchQuery] = $tempSearchQuery;
        //echo "<pre>"; echo $tempSearchQuery; die();
        $officerResult = mysql_query($tempSearchQuery);

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCityid());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    // -----------------------------------------------------
    public function getSearchFlagResultsdghrd($sname) {
        $areaQuery = "select o.*,of.flagid as flag from officerdghrdflags of,officers o where of.officerid=o.id and o.civilCode='$sname' and o.officerStatus='5'";
        // echo $areaQuery;die();
        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $areaArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $areaArray [count($areaArray)] = $tempOfficerVO;
        }
        return $areaArray;
    }

    // ---------------------------------------------------------
    public function deleteflagtabledghrd($officerid, $oldflag) {
        $flagquery = "delete from officerdghrdflags where officerid ='$officerid' and flagid='$oldflag'";
        $flagresult = mysql_query($flagquery);
        return true;
    }

    // ----------------------------------------------------------
    public function getFlagDetailsforOfficerdghrd($flagid, $officerid) {
        $areaQuery = "select o.*,of.flagid as flag from officerdghrdflags of,officers o where of.officerid=o.id and of.flagid='$flagid' and of.officerid='$officerid'";
        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $tempOfficerVO = new OfficerVO ();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {

            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    // -------------------------------------------------------------------------
    public function updateflagtabledghrd($officerid, $oldflag, $newflag) {
        $flagquery = "update officerdghrdflags set flagid='$newflag' , modifiedBy='$_SESSION[userId]' where officerid ='$officerid' and flagid='$oldflag'";
        $flagresult = mysql_query($flagquery);
        return true;
    }

    /*
     * public function getOfficerOnFlag( $officer_id , $flag_value) { try { $constantQuery = "SELECT * from officerdghrdflags WHERE flagid ='$flag_value' AND status = 1 "; if($officer_value != '') { 	$constantQuery .= "AND officerid ='$officer_value'";} $areaResult = mysql_query($constantQuery); } catch(Exception $e){ echo 'Error : '.$e->getMessage();} $tempFlagVO = new SurveyFormVO(); $areaArray = array(); // We find the fields number $numfields=mysql_num_fields($areaResult); // Now we put the names of fields in a Array for($i=0;$i<$numfields;$i++) { $fieldname[$i]=mysql_field_name($areaResult, $i); } while($row=mysql_fetch_object($areaResult)) { $tempFlagVO = new SurveyFormVO(); //Finally we assign the new variables for($i=0;$i<$numfields;$i++) { $tempFlagVO->$fieldname[$i]=$row->$fieldname[$i]; } $areaArray[count($areaArray)]= $tempFlagVO; } return $areaArray; } }
     */

    // --------------------------------------------------------------------------
    // ----------------------Added on 10 feb 2014 ------------------------------------
    public function get_ques_already_exist($civilcode = '') {
        $query = "SELECT * FROM ques_already_exist WHERE civilcode = '" . $civilcode . "' AND status = 1 ";
        $res = mysql_query($query);
        $rows = mysql_num_rows($res);
        return $rows;
    }

    public function get_survey_already_exist($civilcode = '') {
        $query = "SELECT * FROM survey_already_exist WHERE civilcode = '" . $civilcode . "' AND status = 1 ";
        $res = mysql_query($query);
        $rows = mysql_num_rows($res);
        return $rows;
    }

    public function getsurveySearchFlagResultsdghrdbyFlag($flag = '', $type = 'questForm') {

        $con = null;
        if (!empty($flag)) {
            $con.=' AND of.flagid="' . $flag . '"';
        }
        $con.=' AND flagType="' . $type . '"';

        $areaQuery = "select distinct o.id, o.*,of.flagid as flag from officerdghrdflags of,officers o where of.officerid=o.id $con ORDER BY o.civilCode";

        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $areaArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $areaArray [count($areaArray)] = $tempOfficerVO;
        }
        //echo "<pre>"; print_r($areaArray); die();

        return $areaArray;
    }

    public function getSearchFlagResultsdghrdbyFlag($flag = "", $type = 'surveyForm') {
        $con = null;
        if (!empty($flag)) {
            $con.=' AND of.flagid="' . $flag . '"';
        }
        $con.=' AND flagType="' . $type . '"';

        $areaQuery = "select distinct o.id, o.*,of.flagid as flag from officerdghrdflags of,officers o where of.officerid=o.id  " . $con . " ORDER BY o.civilCode";

        $areaResult = mysql_query($areaQuery);

        // Array for flag
        $areaArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $areaArray [count($areaArray)] = $tempOfficerVO;
        }
        //echo "<pre>"; print_r($areaArray); die();
        return $areaArray;
    }

    // -----------------end add -----------------------------------------------------
    public function getOfficersList() {
        $query = "SELECT distinct * from officers  where officerStatus='5'";

        $areaResult = mysql_query($query);

        // Array for flag
        $areaArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($areaResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($areaResult, $i);
        }

        while ($row = mysql_fetch_object($areaResult)) {
            $tempOfficerVO = new OfficerVO ();
            // Finally we assign the new variables
            for ($i = 0; $i < $numfields; $i ++) {
                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
            $areaArray [count($areaArray)] = $tempOfficerVO;
        }

        return $areaArray;
    }

    /* Added By Shubham on 29 May for Option Window Automation */

    public function getOfficerData($id = '', $civilcode = '') {
        if ($id != '') {

            $officerQuery = "select * from officers where id = '$id'";
        } else {

            $officerQuery = "select * from officers where civilCode = '$civilcode'";
        }

        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        $numfields = mysql_num_fields($officerResult);

        for ($i = 0; $i < $numfields; $i ++) {

            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {

            for ($i = 0; $i < $numfields; $i ++) {

                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }
        return $tempOfficerVO;
    }

    /* Update Profile Picture in Officer table */

    public function update_profile_pic($targetPath, $officer_id = '') {
        if ($officer_id == '')
            $officer_id = $_SESSION ['officerid'];

        if ($this->getOfficer($officer_id)->profilepic != '')
            unlink($this->getOfficer($officer_id)->getProfilePic());

        $update = "UPDATE officers SET profilepic = '" . addslashes($targetPath) . "' , modifiedBy='$_SESSION[userId]' WHERE id = '" . $officer_id . "' ";

        $res = mysql_query($update);
    }

    /* Delete Profile Picture in Officer table */

    public function delete_profile_pic($officer_id = '') {
        if ($officer_id == '')
            $officer_id = $_SESSION ['officerid'];

        if ($this->getOfficer($officer_id)->profilepic != '')
            unlink($this->getOfficer($officer_id)->getProfilePic());

        $update = "UPDATE officers SET profilepic = '', modifiedBy='$_SESSION[userId]' WHERE id = '" . $officer_id . "' ";

        $res = mysql_query($update);
    }

    /* Get retirement Date */

    public function getRetirementDate($officerid) {
        $officerQuery = "select * from officers where id = '$officerid'";

        $officerResult = mysql_query($officerQuery);

        $tempOfficerVO = new OfficerVO ();

        $numfields = mysql_num_fields($officerResult);

        for ($i = 0; $i < $numfields; $i ++) {

            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {

            for ($i = 0; $i < $numfields; $i ++) {

                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }
        }

        return $tempOfficerVO;
    }

    /* End Function */

    /* Get Officer by Civil Code */

    public function getOfficerByCivilCode($civilcode) {
        $query = "select * from officers where civilCode='$civilcode'";

        $results = mysql_query($query) or die('Error: ' . mysql_error());

        $srow = mysql_fetch_array($results);

        if (!empty($srow)) {

            return $srow;
        } else {

            return NULL;
        }
    }

    /* End Function */

    /* Get bulk printing officers for bulk profile printing */

    public function get_bulk_profile_printing($cond = '', $arr = '') {
        if ($cond == '')
            $cond = " 1 = 1 ";

        if ($arr != '')
            $co = " ORDER BY FIELD(civilCode," . $arr . ")";
        else
            $co = '';

        $query = "select * from officers where " . $cond . " " . $co;

        $result = mysql_query($query) or die(mysql_error());

        $numfields = mysql_num_fields($result);

        $arr = array();

        for ($i = 0; $i < $numfields; $i ++) {

            $fieldname [$i] = mysql_field_name($result, $i);
        }

        while ($row = mysql_fetch_object($result)) {

            $tempOfficerVO = new OfficerVO ();

            for ($i = 0; $i < $numfields; $i ++) {

                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }

            $arr [count($arr)] = $tempOfficerVO;
        }

        return $arr;
    }

    /* Function to insert change civil code details */

    public function change_civil_code($old_civil_code, $new_civil_code, $officer_id) {

        $query = "INSERT INTO civil_code_history SET old_civil_code = '" . addslashes($old_civil_code) . "', new_civil_code = '" . addslashes($new_civil_code) . "', created_on = '" . time() . "', created_by = '" . $_SESSION['userId'] . "', officer_id = '" . $officer_id . "' ";

        $result = mysql_query($query) or die(mysql_error());

        if ($result) {

            $que = "SELECT id FROM users WHERE username = '" . $old_civil_code . "' ";

            $res = mysql_query($que) or die(mysql_error());

            if ($res) {

                $arr = mysql_fetch_object($res);

                $query_user = "UPDATE users SET username = '" . $new_civil_code . "', modifiedBy='$_SESSION[userId]' WHERE id = '" . $arr->id . "' ";

                $res_user = mysql_query($query_user) or die(mysql_error());

                if ($res_user)
                    return true;
            }

            return true;
        } else
            return false;
    }

    /* Function to update spouse change civil code details */

    public function change_spouse_civil_code($old_civil_code, $new_civil_code, $officer_id) {

        $query_user = "UPDATE spouses SET civilCode = '" . $new_civil_code . "', modifiedBy='$_SESSION[userId]' WHERE civilCode = '" . $old_civil_code . "' ";

        $res_user = mysql_query($query_user) or die(mysql_error());
    }

    /* Function to check new insert civil code will be matched */

    public function get_changed_civil_codes($old_civil_code) {

        $query = "SELECT * FROM civil_code_history WHERE old_civil_code = '" . addslashes($old_civil_code) . "'";

        $result = mysql_query($query) or die(mysql_error());

        if ($result)
            return mysql_num_rows($result);
        else
            return 0;
    }

    /* Function to count officers with same civil code */

    public function same_civil_code($civilCode) {

        $query = "SELECT * FROM officers WHERE civilCode = '" . addslashes($civilCode) . "'";
        //or mobileNumber='".addslashes($mobileNumber)."' or email='".addslashes($email)."'";

        $result = mysql_query($query) or die(mysql_error());

        if ($result)
            return mysql_num_rows($result);
        else
            return 0;
    }

    public function same_email($email, $civilCode) {
        if (empty($civilCode))
            $query = "SELECT * FROM officers WHERE email = '" . addslashes($email) . "'";
        else
            $query = "SELECT * FROM officers WHERE email = '" . addslashes($email) . "' AND civilCode !='" . addslashes($civilCode) . "'";

        $result = mysql_query($query) or die(mysql_error());

        if ($result)
            return mysql_num_rows($result);
        else
            return 0;
    }

    public function same_mobileNumber($mobileNumber, $civilCode) {

        if (empty($civilCode))
            $query = "SELECT * FROM officers WHERE mobileNumber='" . addslashes($mobileNumber) . "'";
        else
            $query = "SELECT * FROM officers WHERE mobileNumber = '" . addslashes($mobileNumber) . "' AND civilCode !='" . addslashes($civilCode) . "'";

        $result = mysql_query($query) or die(mysql_error());

        if ($result)
            return mysql_num_rows($result);
        else
            return 0;
    }

    /* Get Change civil Code Listing */

    public function getChangedCivilCodeList($officer_name = '', $old_civil_code = '', $new_civil_code = '') {

        $cond = ' 1 = 1 ';

        if ($old_civil_code != '')
            $cond .= " AND  old_civil_code = '" . $old_civil_code . "' ";

        if ($new_civil_code != '')
            $cond .= " AND  new_civil_code = '" . $new_civil_code . "' ";

        $query = "select * from civil_code_history WHERE " . $cond . " order by created_on desc";

        $result = mysql_query($query) or die(mysql_error());

        $numfields = mysql_num_fields($result);

        $arr = array();

        for ($i = 0; $i < $numfields; $i ++) {

            $fieldname [$i] = mysql_field_name($result, $i);
        }

        while ($row = mysql_fetch_object($result)) {

            $tempOfficerVO = new stdClass ();

            for ($i = 0; $i < $numfields; $i ++) {

                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
            }

            $arr [count($arr)] = $tempOfficerVO;
        }

        return $arr;
    }

    public function accessCode() {

        $sql = "SELECT access_code FROM access_code WHERE id='1'";

        $value = mysql_fetch_array(mysql_query($sql));

        return $value;
    }

    public function updateCivil($civil_code, $id_officer) {

        $sql = "UPDATE officers,users SET officers.civilCode = '" . addslashes($civil_code) . "' , users.username = '" . addslashes($civil_code) . "' , modifiedBy='$_SESSION[userId]' WHERE officers.id = '" . addslashes($id_officer) . "' AND users.officerId = '" . addslashes($id_officer) . "' ";

        $result = mysql_query($sql) or die(mysql_error());

        $tmpcode = str_split($civil_code);
        $twocode = substr($civil_code, 0, 2);

        if (($tmpcode[0] == 0 && $tmpcode[1] <= 9) || ($twocode > 9 && $twocode < 50)) {
            $final_batch = "20" . $twocode;
        } else {
            $final_batch = "19" . $twocode;
        }

        $sql = "UPDATE officers SET officers.batch = '" . addslashes($final_batch) . "' WHERE officers.id = '" . addslashes($id_officer) . "' ";

        $result = mysql_query($sql) or die(mysql_error());

        return true;
    }

    public function checkDuplicateCivilCode($civil_code) {

        $query = "SELECT count(civilCode) as cnt FROM officers WHERE civilCode ='" . $civil_code . "'";
        $res = mysql_query($query) or die(mysql_error());
        $res1 = mysql_fetch_assoc($res);
        return ($res1[cnt]);
    }

    public function getDataUpdatedBeforeLastSixMonths($officerId) {
        $date = date('Y-m');
        $modifiedOn = '';
        $query = "SELECT ModifiedOn FROM postings where officerid='$officerId' order by id desc limit 1";
        if ($result = mysql_query($query)) {
            if ($row = mysql_fetch_object($result)) {
                $modifiedOn = $row->ModifiedOn;
            }
        }
        $explode_mod = explode('-', $modifiedOn);
        $explode = explode('-', $date);   ////now
//echo "<pre>"; print_r($explode_mod); die;
        if ($explode[0] > $explode_mod[0]) {
            return array("modifiedOn" => $modifiedOn, "lastModifiedYear" => $explode_mod[0]);
        } else if (($explode[1] - $explode_mod[1]) >= '6') {
            return array("modifiedOn" => $modifiedOn, "lastModifiedYear" => $explode_mod[1]);   //$explode_mod[1];
        } else {
            return '';
        }
    }
	
	public function checkUserToUpdatePwd($officerId) {
       
        $query = "SELECT need_to_change_pwd, pwd_modified_date FROM users where officerId='$officerId' ";
		if ($result = mysql_query($query)) {
            if ($row = mysql_fetch_object($result)) {
                $need_to_change_pwd = $row->need_to_change_pwd;
				$pwd_modified_date = $row->pwd_modified_date;
            }
        }
		if ($need_to_change_pwd == 1){
			return true;
		} else {
			return false;
		}
	}
	///added by Shalini on 24Nov2017
	public function updatePwdAfter3Months($officerId) {
        $date = date('Y-m');
        $modifiedOn = '';
        $query = "SELECT need_to_change_pwd , modifiedDate FROM users where officerId='$officerId' ";
        if ($result = mysql_query($query)) {
            if ($row = mysql_fetch_object($result)) {
                $need_to_change_pwd = $row->ModifiedOn;
            }
        }
        $explode_mod = explode('-', $modifiedOn);
        $explode = explode('-', $date);   ////now
//echo "<pre>"; print_r($explode_mod); die;
        if ($explode[0] > $explode_mod[0]) {
            return array("modifiedOn" => $modifiedOn, "lastModifiedYear" => $explode_mod[0]);
        } else if (($explode[1] - $explode_mod[1]) >= '6') {
            return array("modifiedOn" => $modifiedOn, "lastModifiedYear" => $explode_mod[1]);   //$explode_mod[1];
        } else {
            return '';
        }
    }

    public function getSearchResultsFlags() {
        // updated by kanika on 9.11.09 with status rpt changes
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $civilCode = $searchOfficerParamArray ['civilCode'];
        $name = $searchOfficerParamArray ['name'];
        $rankid = $searchOfficerParamArray ['rankid'];
        $grade = $searchOfficerParamArray ['grade'];

        $batch = $searchOfficerParamArray ['batch'];
        $domicileState = $searchOfficerParamArray ['domicileState'];
        $officerStatus = $searchOfficerParamArray ['officerStatus'];
        $region = $searchOfficerParamArray ['region'];
        $grade = $searchOfficerParamArray ['grade'];
        $flagid = $searchOfficerParamArray ['flagid'];
        $tempSearchQuery = "select distinct officers.* from officers 
			LEFT OUTER JOIN users ON officers.id=users.officerId 
			LEFT JOIN stg_postings s on officers.id=s.officerid 
			LEFT JOIN posts ps on ps.code=s.postid 
			LEFT JOIN officerflags on officerflags.flagid";

        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || ($domicileState != '-1' && $domicileState != '') || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1') {
            $tempSearchQuery = $tempSearchQuery . " where ";

            if ($civilCode != '') { // echo $civilCode." civil code ";
                $tempAppendStr = "officers.civilCode LIKE '%$civilCode%'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
                // echo $tempSubQuery." this is query ";
            }
            if ($name != '') {
                $mystring = $name;
                $findme = ' ';
                $pos = strpos($mystring, $findme);

                if ($pos === false) {
                    $tempAppendStr = "officers.name like '%$name%' AND officers.name!='$name'";
                } else {
                    $expname = explode(" ", $name);
                    $t = 0;
                    $qstring = "";
                    while ($t < count($expname)) {
                        if ($t == 0) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring = "(officers.name LIKE '%$newname%'";
                            }
                        } elseif ($t == count($expname) - 1) {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%')";
                            }
                        } else {
                            if ($expname [$t] != '') {
                                $newname = trim($expname [$t]);
                                $qstring .= " OR officers.name LIKE '%$newname%'";
                            }
                        }
                        $t ++;
                    }
                    $tempAppendStr = $qstring;
                    $tempAppendStr .= " AND officers.name!='$name'";
                }

                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($batch != '') {
                $tempAppendStr = "officers.batch = '$batch'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($domicileState != '-1' && $domicileState != '') {
                $tempAppendStr = "officers.domicileState ='$domicileState'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempAppendStr = " officers.rankid = '$rankid' AND s.isLastPosting=1 
				and ps.posttypeid in (2,17,3,18,16,23) ";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                if ($officerStatus == 0) {
                    $tempAppendStr = "(officers.officerStatus ='$officerStatus' OR officers.officerStatus is NULL) ";
                } else {
                    $tempAppendStr = "officers.officerStatus ='$officerStatus'";
                }
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($grade != '-1' && $grade != '') {
                $tempAppendStr = "officers.gradeid = '$grade'";
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
            if ($flagid != '-1') {
                $tempAppendStr = "officerflags.flagid = '$flagid'";
                //
                $cond_new = "AND officers.id IN (SELECT DISTINCT(officerid) FROM postings WHERE isLastPosting!=4)
							AND officers.id NOT IN (SELECT DISTINCT(officer_id) FROM transfer_order_officer WHERE status IN('NEW','RELIEVED'))";
                //
                $tempAppendStr = $tempAppendStr . $cond_new;
                $tempSubQuery = getFinalQueryStr($tempSubQuery, $tempAppendStr);
            }
        }

        if ($tempSubQuery != "") {
            if ($flagid != '-1') {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  AND officers.id=officerflags.officerid order by officers.civilCode";
            } else {
                $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
            }
        } else {
            $tempSearchQuery = $tempSearchQuery . $tempSubQuery . "  order by officers.id";
        }
        //echo $tempSearchQuery;die;
        $_SESSION ['searchQuery'] = $tempSearchQuery;

        $officerResult = mysql_query($tempSearchQuery) or die(mysql_error());

        // Array for areas
        $officerArray = array();

        // We find the fields number
        $numfields = mysql_num_fields($officerResult);

        // Now we put the names of fields in a Array
        for ($i = 0; $i < $numfields; $i ++) {
            $fieldname [$i] = mysql_field_name($officerResult, $i);
        }

        while ($row = mysql_fetch_object($officerResult)) {
            $tempOfficerVO = new OfficerVO ();
            if ($region == - 1) {
                // Finally we assign the new variables
                for ($i = 0; $i < $numfields; $i ++) {
                    $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                }
                $officerArray [count($officerArray)] = $tempOfficerVO;
            } else {
                $tempPostingVO = $tempPostingsDAO->getOptionStgPostingListForOfficer($row->id);
                $tempCityValue = $tempCityDAO->getRegionAreaByCity($tempPostingVO->getCity());
                $expcity = explode("|", $tempCityValue);
                if ($expcity [0] != "" or $expcity [0] != 0) {
                    if ($region == 6) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 180) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 9) {
                        if ($tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 355) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 14) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 7) {
                        if ($tempPostingVO->getCity() == 152 or $tempPostingVO->getCity() == 163 or $tempPostingVO->getCity() == 180 or $tempPostingVO->getCity() == 355) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == 15) {
                        if ($tempPostingVO->getCity() == 234 or $tempPostingVO->getCity() == 480) {
                            
                        } elseif ($region == $tempPostingVO->getRegion()) {
                            // Finally we assign the new variables
                            for ($i = 0; $i < $numfields; $i ++) {
                                $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                            }
                            $officerArray [count($officerArray)] = $tempOfficerVO;
                        }
                    } elseif ($region == $expcity [0]) {
                        // Finally we assign the new variables
                        for ($i = 0; $i < $numfields; $i ++) {
                            $tempOfficerVO->$fieldname [$i] = $row->$fieldname [$i];
                        }
                        $officerArray [count($officerArray)] = $tempOfficerVO;
                    }
                }
            }
        }
        //echo count($officerArray); die;
        //echo"<pre>";
        //print_r($officerArray); die; 
        $_SESSION ['officerSearchResults'] = serialize($officerArray);
        return $officerArray;
    }

    //added by niraj.lal.rahi
    public function same_employeeCode($employeeCode, $civilCode) {
		$query = "select * from officers where employeeCode='$employeeCode' and civilCode !='$civilCode'";
       /* if (!empty($civilCode))
            $query = "select * from officers where employeeCode='$employeeCode' and civilCode !='$civilCode'";
        else
            $query = "select * from officers where employeeCode='$employeeCode'"; */
		
        $result = mysql_query($query);
        return mysql_num_rows($result);
    }

    //added by niraj.lal.rahi
    public function getUpdatedprofile() {
        $record = array();
        $allow_edit = false;
        $emptyCounter = 0;
        $officerID = $_SESSION['officerid'];
        $query = "SELECT * FROM officers where id='$officerID'";
        $result = mysql_query($query);
        if (mysql_num_rows($result) >= 1) {
            while ($row = mysql_fetch_object($result)) {
//                $record[] = $employeeCode = $row->employeeCode;
                $record['email'] = $email = $row->email;
                $record['mobile'] = $mobileNumber = $row->mobileNumber;
                $record['modifiedon'] = $modifiedOn = $row->ModifiedOn;
            }
            $date = date('Y-m');
            $explode_mod = explode('-', $modifiedOn);
            $explode = explode('-', $date);
            if ($explode[0] > $explode_mod[0]) {
                $allow_edit = true;
            } else if (($explode[1] - $explode_mod[1]) >= '6') {
                $allow_edit = true;
            } else {
                $allow_edit = false;
            }
            if (empty($email) || empty($mobileNumber))  //empty($employeeCode) ||
                $allow_edit = true;
        }
        //$allow_edit = false;
        $record['allow_edit'] = $allow_edit;
//echo "<pre>"; print_r($record); die;
        return $record;
    }

    public function saveOfficerChangeDetails() {

        $officerid = $_REQUEST['id'];
        $query1 = "SELECT * FROM officers WHERE id='$officerid'";
        $result = mysql_query($query1);
        $result = mysql_fetch_object($result);
        if (count($result) > 0 && count($_REQUEST) > 0) {
            $buffer_array = array();
            //comparing changed value
            if ($result->employeeCode != $_REQUEST['employeeCode'])
                $buffer_array[] = array('Employee Code', $result->employeeCode, $_REQUEST['employeeCode']);
            if ($result->civilCode != $_REQUEST['civilCode'])
                $buffer_array[] = array('Civil Code', $result->civilCode, $_REQUEST['civilCode']);
            if ($result->name != $_REQUEST['name'])
                $buffer_array[] = array('Officer Name', $result->name, $_REQUEST['name']);
            if ($result->gender != $_REQUEST['gender']) {
                if (empty($result->gender) || $result->gender == '-1')
                    $result->gender = '-';
                $buffer_array[] = array('Gender', $result->gender, $_REQUEST['gender']);
            }
            if ($result->currentAddress != $_REQUEST['currentAddress'])
                $buffer_array[] = array('Current Address', $result->currentAddress, $_REQUEST['currentAddress']);
            if ($result->currentCity != $_REQUEST['currentCity'])
                $buffer_array[] = array('Current City', $result->currentCity, $_REQUEST['currentCity']);
            if ($result->currentPostalCode != $_REQUEST['currentPostalCode'])
                $buffer_array[] = array('Current Postal Code', $result->currentPostalCode, $_REQUEST['currentPostalCode']);
            if ($result->permanentAddress != $_REQUEST['permanentAddress'])
                $buffer_array[] = array('Permanent Address', $result->permanentAddress, $_REQUEST['permanentAddress']);
            if ($result->permanentCity != $_REQUEST['permanentCity'])
                $buffer_array[] = array('Permanent City', $result->permanentCity, $_REQUEST['permanentCity']);

            if ($result->permanentState != $_REQUEST['permanentState']) {
                if (!empty($result->permanentState)) {
                    $result->permanentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $result->permanentState))->name;
                    $permanentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['permanentState']))->name;
                } else {
                    $result->permanentState = '-';
                    $permanentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['permanentState']))->name;
                }
                $buffer_array[] = array('Permanent State', $result->permanentState, $permanentState);
            }
            if ($result->currentState != $_REQUEST['currentState']) {
                if (!empty($result->currentState)) {
                    $result->currentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $result->currentState))->name;
                    $currentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['currentState']))->name;
                } else {
                    $result->currentState = '-';
                    $currentState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['currentState']))->name;
                }
                $buffer_array[] = array('Current State', $result->currentState, $currentState);
            }

            if ($result->permanentPostalCode != $_REQUEST['permanentPostalCode'])
                $buffer_array[] = array('Permanent Postal Code', $result->permanentPostalCode, $_REQUEST['permanentPostalCode']);
            if ($result->email != $_REQUEST['email_text'] . $_REQUEST['at'] . $_REQUEST['domain'])
                $buffer_array[] = array('Email', $result->email, $_REQUEST['email_text'] . $_REQUEST['at'] . $_REQUEST['domain']);
            if ($result->mobileNumber != $_REQUEST['mobileNumber'])
                $buffer_array[] = array('Mobile', $result->mobileNumber, $_REQUEST['mobileNumber']);

            $result->dateOfBirth = date('d-m-Y', strtotime($result->dateOfBirth));
            if ($result->dateOfBirth != $_REQUEST['dateOfBirth'])
                $buffer_array[] = array('Date Of Birth', $result->dateOfBirth, $_REQUEST['dateOfBirth']);
            $result->retirementDate = date('d-m-Y', strtotime($result->retirementDate));
            if ($result->retirementDate != $_REQUEST['retirementDate'])
                $buffer_array[] = array('Retirement Date', $result->retirementDate, $_REQUEST['retirementDate']);
            $result->exitDate = date('d-m-Y', strtotime($result->exitDate));
            if ($result->exitDate != $_REQUEST['exitDate'])
                $buffer_array[] = array('Exit Date', $result->exitDate, $_REQUEST['exitDate']);

            if ($result->rankid != $_REQUEST['rankid']) {
                if (!empty($result->rankid)) {
                    $result->rankid = mysql_fetch_object(mysql_query("SELECT name FROM ranks WHERE id = " . $result->rankid))->name;
                    $rankid = mysql_fetch_object(mysql_query("SELECT name FROM ranks WHERE id = " . $_REQUEST['rankid']))->name;
                } else {
                    $result->rankid = '-';
                    $rankid = mysql_fetch_object(mysql_query("SELECT name FROM ranks WHERE id = " . $_REQUEST['rankid']))->name;
                }
                $buffer_array[] = array('Rank', $result->rankid, $rankid);
            }
            if ($result->gradeid != $_REQUEST['gradeid']) {
                if (!empty($result->gradeid)) {
                    $result->gradeid = mysql_fetch_object(mysql_query("SELECT name FROM grades WHERE id = " . $result->gradeid))->name;
                    $gradeid = mysql_fetch_object(mysql_query("SELECT name FROM grades WHERE id = " . $_REQUEST['grade']))->name;
                } else {
                    $result->gradeid = '-';
                    $gradeid = mysql_fetch_object(mysql_query("SELECT name FROM grades WHERE id = " . $_REQUEST['grade']))->name;
                }
                $buffer_array[] = array('Grade', $result->gradeid, $gradeid);
            }

            if ($result->domicileState != $_REQUEST['domicileState']) {
                if (!empty($result->domicileState)) {
                    $result->domicileState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $result->domicileState))->name;
                    $domicileState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['domicileState']))->name;
                } else {
                    $result->domicileState = '-';
                    $domicileState = mysql_fetch_object(mysql_query("SELECT name FROM states WHERE id = " . $_REQUEST['domicileState']))->name;
                }
                $buffer_array[] = array('Domicile State', $result->domicileState, $domicileState);
            }
        }
    }

    public function getDynamicSearchResultsRpt() {
        $officerArray = array();
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $selectStr = $totalStayDuration = '';
        // echo "<pre>"; print_r($searchOfficerParamArray); die;
        $params_list = $_SESSION['dispparams_list'];
        $civilCode = $searchOfficerParamArray ['civilCode'];  //mysql_real_escape_string(
        $name = mysql_real_escape_string($searchOfficerParamArray ['name']);
        $batch = mysql_real_escape_string($searchOfficerParamArray ['batch']);
        $rankid = mysql_real_escape_string($searchOfficerParamArray ['rankid']);
        $grade = mysql_real_escape_string($searchOfficerParamArray ['grade']);
        $region = mysql_real_escape_string($searchOfficerParamArray ['region']);
        $station = mysql_real_escape_string($searchOfficerParamArray ['station']);
       
       
        if(isset($searchOfficerParamArray ['searchparam'])){
              $searchparam = mysql_real_escape_string($searchOfficerParamArray['searchparam']);
              $otherRegion = mysql_real_escape_string($searchOfficerParamArray ['otherRegion']);
              $otherStation = mysql_real_escape_string($searchOfficerParamArray ['otherStation']);
              $contStayOption = (isset($searchOfficerParamArray ['contStayOption'])?$searchOfficerParamArray ['contStayOption']:'');
              $contStayDuration = (isset($searchOfficerParamArray ['contStayDuration'])?$searchOfficerParamArray ['contStayDuration']:'');
              if($searchOfficerParamArray ['searchparam'] == 'total_stay'){ 
                    $totalStayDuration = $searchOfficerParamArray ['searchparam'];
                } else {
                    $totalStayDuration = '';
                } 
        }
        
        $dispparams = $searchOfficerParamArray ['dispparams'];        
        $ddlSort = (isset($searchOfficerParamArray['ddlSort'])?$searchOfficerParamArray['ddlSort']:'');
        
        $course = mysql_real_escape_string($searchOfficerParamArray ['qualification_id']);
        $officerStatus = mysql_real_escape_string($searchOfficerParamArray ['officerStatus']);
        foreach ($dispparams as $value) {
            $key = array_search($value, $params_list);
            if ($key) {
                $headingArr[] = $key;
            }
        }
        ////////////if "all" exists in heading unset it 
        if (in_array("all", $dispparams)) {
            unset($dispparams[0]);
        }
        $selectStr .= implode(",", $dispparams);
        
        if (in_array("latest_order", $dispparams)) {
            $selectStr = str_replace(",latest_order", "", $selectStr);
            $selectStr .= " , concat(seq_no,'/',year,'/',dept) order_no ";
        }
        if (in_array("duration", $dispparams)) {
            $selectStr = str_replace(",duration", "", $selectStr);
        }
        $_SESSION ['headingArr'] = $headingArr;

        /*if ($searchparam == "total_stay") {
            $selectStr .= ", SUM(DATEDIFF(`toDate`, `fromDate`)) as totalStayDuration";
        } 
        deleted from query AND postings.isActive=1  AND  postings.`isLastposting` in (1) 
        */
        
        $tempSearchQuery = "SELECT $selectStr ,postings.officerid, posts.regionid,`postings`.`station`                       
                             FROM officers 
                             LEFT JOIN `postings` ON officers.id=`postings`.`officerid` and postings.id=(select ps.id from postings ps where ps.officerid=officers.id AND isActive=1 AND islastposting=1 order by fromDate desc limit 1)  
                             LEFT JOIN `posts` on `postings`.`postid`=posts.code
                             LEFT JOIN `posttypes` on `posts`.`posttypeid`=posttypes.id
                             LEFT JOIN `cities` on `postings`.`station`=`cities`.id
                             LEFT JOIN `regions`  ON `cities`.`regionid` = `regions`.`id`
                             LEFT JOIN `category` on `officers`.`categoryid`=`category`.id
                             LEFT JOIN `educations` on `officers`.`id`=`educations`.`officerid` 
                             LEFT JOIN `ranks` on `officers`.`rankid`=`ranks`.`id` 
                             LEFT JOIN `grades` on `officers`.`gradeid`=`grades`.`id` 
                             LEFT JOIN `states` on `officers`.`domicileState`=`states`.`id` 
                             LEFT JOIN `status` on `officers`.`officerStatus`=`status`.`id` 
                             LEFT JOIN `religion` on `officers`.`religionid`=`religion`.`id` 
                             LEFT JOIN `qualifications` on `qualifications`.id=`educations`.`new_courseid` 
                             LEFT JOIN `transfer_order_officer` on `officers`.`id`=`transfer_order_officer`.`officer_id`  AND transfer_order_officer.id=(select tdo.id from transfer_order_officer as tdo where tdo.officer_id=officers.id AND isCancelled=0 AND status='JOINED' order by tdo.id DESC limit 1) 
                             LEFT JOIN `transfer_orders` on `transfer_orders`.`id`=`transfer_order_officer`.`order_id` 
                            WHERE 1=1  ";
        
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1' || $station != '-1' || $course != '-1') {

            /*if ($civilCode != '') {
                $tempSearchQuery .= " AND `officers`.`civilCode` = '$civilCode'";
            } 
            if (count($civil_arr) != 1) {

            $temp_arr = array();

            foreach ($civil_arr as $val) {

                $temp_arr[] = trim($val);
            }

            $civil = implode("','", $temp_arr);

            $cond .= " AND civilCode IN ('" . $civil . "') ";
        } else {

            $cond .= " AND civilCode = '" . trim($civil_arr[0]) . "'";
        }   */
            if ($civilCode != '') {
                            
            $temp_civil_codes = explode( ',', $civilCode);
            if (count($civil_arr) != 1) {
            $temp_arr = array ();
            
                foreach ( $temp_civil_codes as $val ) {
                    $temp_arr [] = trim($val);
                }
            $civils = implode ( "','", $temp_arr );
            $tempSearchQuery .= " AND `officers`.`civilCode` IN ('" . $civils . "') ";
            
            }  else {
               $tempSearchQuery .= " AND `officers`.`civilCode` = '" . trim($temp_civil_codes[0]) . "'";
                }
            }
            
            if ($name != '') {
                $tempSearchQuery .= " AND `officers`.`name`  LIKE '%$name%'";
            }
            if ($batch != '') {
                $tempSearchQuery .= " AND `officers`.`batch` = '$batch'";
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempSearchQuery .= " AND `officers`.`rankid` = '$rankid'";
            }
            if ($grade != '-1' && $grade != '') {
                $tempSearchQuery .= " AND `officers`.`gradeid` = '$grade'";
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempSearchQuery .= " AND `officers`.`officerStatus` ='$officerStatus'";
            }

            /*if ($state != '-1' && $state != '') {
                $tempSearchQuery .= " AND `officers`.`currentState` ='$state'";
            } */

            if ($region != '-1') {  ////data for current region 
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$region' AND  postings.`isLastposting` in (1) ";
            }
            if ($station != '-1') {
                $tempSearchQuery .= " AND `postings`.`station` = '$station' AND  postings.`isLastposting` in (1) ";
            }
            if ($otherRegion != '-1') {
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$otherRegion' ";
                //AND `postings`.`isLastposting` in (0)
                //$tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($otherStation != '-1' && $otherStation != '') {
                $tempSearchQuery .= " AND `postings`.`station` = '$otherStation' "; // AND `postings`.`isLastposting` in (0)
//                $tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($course != '-1' && $course != '') {
                $tempSearchQuery .= " AND `educations`.`new_courseid` ='$course'";
            }
            /*if ($totalStayDuration != '') {
                $days1 = 365 * $totalStayDuration;
                $tempSearchQuery .= " AND dateDiff >= $days1";
            }*/
        }
        $tempSearchQuery .= " GROUP BY officers.id";
        if ($ddlSort != '') {
                if ($ddlSort == 1){
                    $tempSearchQuery .= " ORDER BY `officers`.name";
                } else if($ddlSort == 2){
                    $tempSearchQuery .= " ORDER BY `officers`.`civilCode`";
                }else if($ddlSort == 3){
                    $tempSearchQuery .= " ORDER BY `officers`.`batch`";
                }
            }
        //echo $tempSearchQuery;
        //die;

        $officerResult = mysql_query($tempSearchQuery);
        $returnArr = array();
        while ($row = mysql_fetch_array($officerResult)) {
            if ($row['Gender'] == -1) {
                $row['Gender'] = "-";
            }
            if (isset($row['DomicileState']) && ($row['DomicileState'] == -1 || $row['DomicileState'] == null) ) {
                $row['DomicileState'] = "-";
            }
            $returnArr[] = $row;
        }
        $_SESSION ['officerDynamicSearchResults'] = $returnArr;
        return $returnArr;
    }

    public function getDynamicSearchResultsRpt1() {
        $officerArray = array();
        $tempPostingsDAO = new PostingDAO ();
        $tempCityDAO = new CitiesDAO ();
        $searchOfficerParamArray = $_SESSION ['searchOfficerParamArray'];
        $selectStr = $totalStayDuration = '';
        // echo "<pre>"; print_r($searchOfficerParamArray); die;
        $params_list = $_SESSION['dispparams_list'];
        $civilCode = $searchOfficerParamArray ['civilCode'];  //mysql_real_escape_string(
        $name = mysql_real_escape_string($searchOfficerParamArray ['name']);
        $batch = mysql_real_escape_string($searchOfficerParamArray ['batch']);
        $rankid = mysql_real_escape_string($searchOfficerParamArray ['rankid']);
        $grade = mysql_real_escape_string($searchOfficerParamArray ['grade']);
        $region = mysql_real_escape_string($searchOfficerParamArray ['region']);
        $station = mysql_real_escape_string($searchOfficerParamArray ['station']);
       
       
        if(isset($searchOfficerParamArray ['searchparam'])){
              $searchparam = mysql_real_escape_string($searchOfficerParamArray['searchparam']);
              $otherRegion = mysql_real_escape_string($searchOfficerParamArray ['otherRegion']);
              $otherStation = mysql_real_escape_string($searchOfficerParamArray ['otherStation']);
              $contStayOption = (isset($searchOfficerParamArray ['contStayOption'])?$searchOfficerParamArray ['contStayOption']:'');
              $contStayDuration = (isset($searchOfficerParamArray ['contStayDuration'])?$searchOfficerParamArray ['contStayDuration']:'');
              if($searchOfficerParamArray ['searchparam'] == 'total_stay'){ 
                    $totalStayDuration = $searchOfficerParamArray ['searchparam'];
                } else {
                    $totalStayDuration = '';
                } 
        }
        
        $dispparams = $searchOfficerParamArray ['dispparams'];        
        $ddlSort = (isset($searchOfficerParamArray['ddlSort'])?$searchOfficerParamArray['ddlSort']:'');
        
        $course = mysql_real_escape_string($searchOfficerParamArray ['qualification_id']);
        $officerStatus = mysql_real_escape_string($searchOfficerParamArray ['officerStatus']);
        foreach ($dispparams as $value) {
            $key = array_search($value, $params_list);
            if ($key) {
                $headingArr[] = $key;
            }
        }
        ////////////if "all" exists in heading unset it 
        if (in_array("all", $dispparams)) {
            unset($dispparams[0]);
        }
        $selectStr .= implode(",", $dispparams);
        
        if (in_array("latest_order", $dispparams)) {
            $selectStr = str_replace(",latest_order", "", $selectStr);
            $selectStr .= " , concat(seq_no,'/',year,'/',dept) order_no ";
            /*$selectStr .= ", (SELECT concat(transfer_orders.seq_no,'/',transfer_orders.year,'/',transfer_orders.dept) FROM transfer_orders
                              INNER JOIN transfer_order_officer ON transfer_orders.id = transfer_order_officer.order_id
                              WHERE transfer_order_officer.officer_id = officers.id ORDER BY transfer_orders.id DESC LIMIT 1) AS order_no";*/
        }
        if (in_array("duration", $dispparams)) {
            $selectStr = str_replace(",duration", "", $selectStr);
        }
        $_SESSION ['headingArr'] = $headingArr;

        /*if ($searchparam == "total_stay") {
            $selectStr .= ", SUM(DATEDIFF(`toDate`, `fromDate`)) as totalStayDuration";
        } 
        deleted from query AND postings.isActive=1  AND  postings.`isLastposting` in (1) 
        */
        
        $tempSearchQuery = "SELECT $selectStr ,postings.officerid, posts.regionid,`postings`.`station`                       
                             FROM officers 
                             LEFT JOIN `postings` ON officers.id=`postings`.`officerid` and postings.id=(select ps.id from postings ps where ps.officerid=officers.id order by fromDate desc limit 1) 
                             LEFT JOIN `posts` on `postings`.`postid`=posts.code
                             LEFT JOIN `posttypes` on `posts`.`posttypeid`=posttypes.id
                             LEFT JOIN `cities` on `postings`.`station`=`cities`.id
                             LEFT JOIN `regions`  ON `cities`.`regionid` = `regions`.`id`
                             LEFT JOIN `category` on `officers`.`categoryid`=`category`.id
                             LEFT JOIN `educations` on `officers`.`id`=`educations`.`officerid` 
                             LEFT JOIN `ranks` on `officers`.`rankid`=`ranks`.`id` 
                             LEFT JOIN `grades` on `officers`.`gradeid`=`grades`.`id` 
                             LEFT JOIN `states` on `officers`.`domicileState`=`states`.`id` 
                             LEFT JOIN `status` on `officers`.`officerStatus`=`status`.`id` 
                             LEFT JOIN `religion` on `officers`.`religionid`=`religion`.`id` 
                             LEFT JOIN `qualifications` on `qualifications`.id=`educations`.`new_courseid` 
                             LEFT JOIN `transfer_order_officer` on `officers`.`id`=`transfer_order_officer`.`officer_id` AND transfer_order_officer.id=(select tdo.id from transfer_order_officer as tdo where tdo.officer_id=officers.id AND isCancelled=0 AND status='JOINED' order by tdo.id DESC limit 1) 
                             LEFT JOIN `transfer_orders` on `transfer_orders`.`id`=`transfer_order_officer`.`order_id` 
                            WHERE 1=1 ";
        
        // Check for where clause
        if ($civilCode != '' || $name != '' || $batch != '' || $rankid != '-1' || ($officerStatus != '-1' && $officerStatus != '') || $region != '-1' || $grade != '-1' || $station != '-1' || $course != '-1') {

            /*if ($civilCode != '') {
                $tempSearchQuery .= " AND `officers`.`civilCode` = '$civilCode'";
            } 
            if (count($civil_arr) != 1) {

            $temp_arr = array();

            foreach ($civil_arr as $val) {

                $temp_arr[] = trim($val);
            }

            $civil = implode("','", $temp_arr);

            $cond .= " AND civilCode IN ('" . $civil . "') ";
        } else {

            $cond .= " AND civilCode = '" . trim($civil_arr[0]) . "'";
        }   */
            if ($civilCode != '') {
                            
            $temp_civil_codes = explode( ',', $civilCode);
            if (count($civil_arr) != 1) {
            $temp_arr = array ();
            
                foreach ( $temp_civil_codes as $val ) {
                    $temp_arr [] = trim($val);
                }
            $civils = implode ( "','", $temp_arr );
            $tempSearchQuery .= " AND `officers`.`civilCode` IN ('" . $civils . "') ";
            
            }  else {
               $tempSearchQuery .= " AND `officers`.`civilCode` = '" . trim($temp_civil_codes[0]) . "'";
                }
            }
            
            if ($name != '') {
                $tempSearchQuery .= " AND `officers`.`name`  LIKE '%$name%'";
            }
            if ($batch != '') {
                $tempSearchQuery .= " AND `officers`.`batch` = '$batch'";
            }
            if ($rankid != '-1' && $rankid != '') {
                $tempSearchQuery .= " AND `officers`.`rankid` = '$rankid'";
            }
            if ($grade != '-1' && $grade != '') {
                $tempSearchQuery .= " AND `officers`.`gradeid` = '$grade'";
            }
            if ($officerStatus != '-1' && $officerStatus != '') {
                $tempSearchQuery .= " AND `officers`.`officerStatus` ='$officerStatus'";
            }

            /*if ($state != '-1' && $state != '') {
                $tempSearchQuery .= " AND `officers`.`currentState` ='$state'";
            } */

            if ($region != '-1') {  ////data for current region 
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$region' AND  postings.`isLastposting` in (1) ";
            }
            if ($station != '-1') {
                $tempSearchQuery .= " AND `postings`.`station` = '$station' AND  postings.`isLastposting` in (1) ";
            }
            if ($otherRegion != '-1') {
                $tempSearchQuery .= " AND  `posts`.`regionid` ='$otherRegion' ";
                //AND `postings`.`isLastposting` in (0)
                //$tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($otherStation != '-1' && $otherStation != '') {
                $tempSearchQuery .= " AND `postings`.`station` = '$otherStation' "; // AND `postings`.`isLastposting` in (0)
//                $tempSearchQuery .= " AND `officers`.`id` IN(SELECT officerid FROM postings INNER JOIN posts on `postings`.`postid`=posts.code WHERE regionid in ('$otherRegion'))";
            }
            if ($course != '-1' && $course != '') {
                $tempSearchQuery .= " AND `educations`.`new_courseid` ='$course'";
            }
            /*if ($totalStayDuration != '') {
                $days1 = 365 * $totalStayDuration;
                $tempSearchQuery .= " AND dateDiff >= $days1";
            }*/
        }
        $tempSearchQuery .= " GROUP BY officers.id";
        if ($ddlSort != '') {
                if ($ddlSort == 1){
                    $tempSearchQuery .= " ORDER BY `officers`.name";
                } else if($ddlSort == 2){
                    $tempSearchQuery .= " ORDER BY `officers`.`civilCode`";
                }else if($ddlSort == 3){
                    $tempSearchQuery .= " ORDER BY `officers`.`batch`";
                }
            }
        //echo $tempSearchQuery;
        //die;

        $officerResult = mysql_query($tempSearchQuery);
        $returnArr = array();
        while ($row = mysql_fetch_array($officerResult)) {
            if ($row['Gender'] == -1) {
                $row['Gender'] = "-";
            }
            if (isset($row['DomicileState']) && ($row['DomicileState'] == -1 || $row['DomicileState'] == null) ) {
                $row['DomicileState'] = "-";
            }
            $returnArr[] = $row;
        }
        $_SESSION ['officerDynamicSearchResults'] = $returnArr;
        return $returnArr;
    }
    function getOfficerLastPosting($officerID){
        $squery = "select id,postid,fromDate,toDate,isActive,islastposting from postings where officerid='".$officerID."' order by id desc limit 1";
        $sresults = mysql_query($squery);
        $srow = mysql_fetch_array($sresults);
        return 5;
        if ( ($srow['toDate']=='0000-00-00' || $srow['toDate']=='') && $srow['islastposting']=='4' ) {
            //return $srow['id'];
        } else {
            //return '';
        }
    }

}

/* End Class */


retriemt-<?php
$accessarray = array (
		'1',
		'14' 
);
include ('session/session.php');
unset ( $_SESSION ['officerVO'] );
$tempOfficerDAO = new OfficerDAO ();
$tempStgPostingsDAO = new StgPostingsDAO ();
$defaultStatus = false;
$rankid ='';
$officerList  = array();

/*if($_SERVER['REQUEST_METHOD'] !='POST' || $_SERVER['REQUEST_METHOD'] !='GET') {
		$_REQUEST['actionType']  = "";
} */

if (@$_REQUEST ['actionType'] == 'searchofficer') {
	$expenddate = explode ( "-", $_POST ['enddate'] );
	$lastmonthenddate = $expenddate [2] . "-" . $expenddate [1] . "-" . $expenddate [0];
	$expstartdate = explode ( "-", $_POST ['startdate'] );
	$lastmonthstartdate = $expstartdate [2] . "-" . $expstartdate [1] . "-" . $expstartdate [0];
	$officerList = $tempOfficerDAO->getRetirementReportSearchResults ( $lastmonthstartdate, $lastmonthenddate, $_POST ['rankid'],2 );
} elseif (@$_REQUEST ['actionType'] == 'changeservingstatus') {
	echo "<pre>"; print_r($_REQUEST); echo "</pre>";
	die('changeservingstatus');
	$tempOfficerDAO->updateServingStatus ( $_REQUEST ['id'] );
	$officer_data = $tempOfficerDAO->getOfficer ( $_REQUEST ['id'] );
	header ( 'location: retirement-report.php?confirmed=' . $_REQUEST ['id'] );
} elseif (@$_REQUEST ['actionType'] == 'changeallservingstatus') {
	echo "<pre>"; print_r($_REQUEST); echo "</pre>";
	die('changeallservingstatus');
	$expmainstring = explode ( ",", $_POST ['selstrpass'] );
	if (count ( $expmainstring ) > 0) {
		$t = 0;
		while ( $t < count ( $expmainstring ) ) {
			if ($expmainstring [$t] != '') {
				$tempOfficerDAO->updateServingStatus ( $expmainstring [$t] );
			}
			$t ++;
		}
	}
} else {
	// echo date('Y-m-d',strtotime('-1 second',strtotime('+0 month',strtotime(date('m').'/01/'.date('Y').' 00:00:00'))));
	$lastmonthenddate = date ( 'Y-m-d', strtotime ( '-1 second', strtotime ( '+0 month', strtotime ( date ( 'm' ) . '/01/' . date ( 'Y' ) . ' 00:00:00' ) ) ) );
	$lastmonthstartdate = substr ( $lastmonthenddate, 0, 8 ) . "01";
	//echo $lastmonthenddate.'++'.$lastmonthstartdate; die;
	$officerList = $tempOfficerDAO->getRetirementReportSearchResults ( $lastmonthstartdate, $lastmonthenddate,'',2 );
	$defaultStatus = true;
}
// array for the page
$tempArray = $officerList;
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Confirm Officer Exit</title>
<link href="css/style.css" rel="stylesheet" type="text/css" />
<script language='JavaScript' type='text/javascript'
	src='JScript/formValidator.js'></script>
<script src="js/jquery.js"></script>
<script>
            $(document).ready(function(){
                //For date of birth
                $('#startdate').datepicker({ yearRange: '1950:'+ <?php echo date('Y')+2;?> } );
                $('#enddate').datepicker({ yearRange: '1950:'+<?php echo date('Y')+2;?> } );
                <?php
																
if (isset ( $_GET ['confirmed'] ) && $_GET ['confirmed'] != '') {
																	$officer_data = $tempOfficerDAO->getOfficer ( $_GET ['confirmed'] );
																	?>
				alert('Officer (Civil Code: <?php echo $officer_data->getCivilCode(); ?>, Name: <?php echo $officer_data->getName(); ?>) confirmed to exit.');
				window.location = 'retirement-report.php';
                <?php } ?>
            });
        </script>
<script language='JavaScript' type='text/javascript'
	src='js/validate.js'></script>
<script>
            function validateForm(action){
                msg="";
                var currentTime = new Date();
                var month = currentTime.getMonth() + 1;
                var day = currentTime.getDate();
                var year = currentTime.getFullYear();
                var curdate = day + "-" + month + "-" + year;
                if(document.addeducationform.startdate.value=='')
                {
                    msg=msg+"Please select from date \n";
                }
                else if(document.addeducationform.enddate.value=='')
                {
                    msg=msg+"Please select to date \n";
                }
                if(document.addeducationform.startdate.value!='')
                {
                    if(!isDate2(document.addeducationform.startdate.value))
                    {

                    }
                    /*if(document.addeducationform.startdate.value!='')
                    {
                        if(!compareDate(curdate,document.addeducationform.startdate.value))
                        {
                            msg=msg+"Start Date should not be greater than today date. \n";
                        }
                    }*/
                    if(document.addeducationform.enddate.value!='')
                    {
                        if(!compareDate(document.addeducationform.enddate.value,document.addeducationform.startdate.value))
                        {
                            msg=msg+"End date should be greater than start date \n";
                        }
                    }
                }
                if(msg!="")
                {
                    alert(msg);
                    return false;
                }
                else
                {
                    document.addeducationform.submit();
                }
            }
        </script>
<script language="javascript">
        function getStrSel(id,cnt)
        {
            strsel = "";
            for (i = 0; i < cnt; i++)
            {
                isChecked = document.getElementById(id+i).checked;
                if(isChecked)
                {
                    if(strsel=="")
                    {
                        strsel=document.getElementById(id+'row'+i).value;
                    }
                    else
                    {
                        strsel=strsel+','+document.getElementById(id+'row'+i).value;
                    }
                }
            }
            if(strsel=="")
            {
                alert("Please select an officer to confirm retirement ");
                return false;
            }
            else
            {
                document.searchoptionform.selstrpass.value=strsel;
                //document.forms[myform].submit();
                return true;
            }
        }
        function setallcheckboxes(cnt,id,rowid)
        {
            isParentChecked = document.getElementById(id).checked;
            for(i = 0; i < cnt; i++)
            {
                 document.getElementById(rowid+i).checked =isParentChecked;

            }
        }
    </script>
<script LANGUAGE="JavaScript">
        <!-- Begin
        var checkflag = "false";
        function check(field)
        {
            if (checkflag == "false")
            {
                for (i = 0; i < field.length; i++)
                {
                    field[i].checked = true;
                }
                checkflag = "true";
                return "Uncheck All";
            }
            else
            {
                for (i = 0; i < field.length; i++)
                {
                    field[i].checked = false;
                }
                checkflag = "false";
                return "Check All";
            }
        }
        // End -->
        function deleteposting(ths,rowNum){
        	var delPostingOfficer=document.getElementById("delPostingOfficer").value;
        	if(document.getElementById("cb"+rowNum).checked===true){
        		if(delPostingOfficer==''){
        			document.getElementById("delPostingOfficer").value=document.getElementById("cbrow"+rowNum).value;
        		} else{
        			document.getElementById("delPostingOfficer").value=delPostingOfficer+','+document.getElementById("cbrow"+rowNum).value;
        		}        		
        	} else {
        		if(delPostingOfficer!=''){
        			delPostingOfficerArr=delPostingOfficer.split(',');
        			console.log(delPostingOfficerArr);
        			for (var i = delPostingOfficerArr.length - 1; i >= 0; i--) {
        				console.log(delPostingOfficerArr[i]+' '+document.getElementById("cbrow"+rowNum).value+' '+i);
        				if(delPostingOfficerArr[i]==document.getElementById("cbrow"+rowNum).value){
        					delete delPostingOfficerArr[i];
        				}
        			}
        		}
        		document.getElementById("delPostingOfficer").value=delPostingOfficerArr;
        	}
        }
    </script>
</head>
<body>
                <?php include('includes/header.php');?>
                <?php include('includes/topnav.php');?>
                <?php
																$todaydate = date ( "d-m-Y" );
																?>

                    <h1>
		<a href="dashboard.php">Officers</a> &rsaquo; Confirm Officer Exit
	</h1>
	<form action="#" method="post" enctype="multipart/form-data"
		name="addeducationform" id="addeducationform"
		onsubmit="return validateForm(this)">
		<input type="hidden" name="actionType" value="searchofficer" />
		<table border="0" cellpadding="0" cellspacing="0"
			class="formtable-long">
			<tr>
				<td colspan="4" class="formtable-hd">Search Officer</td>
			</tr>
			<tr>
				<td colspan="4" height="10"></td>
			</tr>
			<tr>
				<td width="100"><strong>Rank:</strong></td>
				<td width="250">
				<?php
						echo Dropdown::getOfficerRankList ( "list-menu", $rankid );
						?>
                                </td>
				<td></td>
				<td></td>
			</tr>
			<tr>
				<td colspan="4" height="10"></td>
			</tr>
			<tr>
				<td><strong>From Date:</strong></td>
				<link rel="stylesheet" href="css/ui.datepicker.css" type="text/css"
					media="screen" title="Flora (Default)">
					<script src="js/ui.datepicker.js"></script>
					<td><input name="startdate" id="startdate" type="text"
						class="text-field" value="<?php echo $todaydate; ?>" size="30" /></td>
					<td width="100"><strong>To Date:</strong></td>
					<td><input name="enddate" id="enddate" type="text"
						class="text-field" value="" size="30" /></td>
			
			</tr>
			<tr>
				<td colspan="4" height="5"></td>
			</tr>
			<tr>
				<td></td>
				<td></td>
				<td colspan="3"><a href="retirement-report.php"><img alt="Reset"
						src="gifs/reset-button.gif" border="0" width="75" height="21"
						align="right" hspace="5"></a><input type="image"
					src="gifs/search-button-orange.gif" width="75" height="21"
					align="right" /></td>
			</tr>
			<tr>
				<td colspan="4" height="20"></td>
			</tr>
		</table>
	</form>
	<table border="0" cellpadding="0" cellspacing="0" class="table">
		<tr>
			<td class="recordstable"><?php echo count($tempArray); ?> Records Found</td>
		</tr>
	</table>
	<form action="#" method="post" enctype="multipart/form-data"
		name="searchoptionform" id="searchoptionform"
		onsubmit="return getStrSel('cb','<?php echo count($tempArray); ?>')">
		<input type="hidden" name="actionType" value="changeallservingstatus" />
		<input type="hidden" name="selstrpass" value="" />
		<table border="0" cellpadding="0" cellspacing="0" class="table">
			<tr>
				<td width="100" class="table-hd"><input type="checkbox" name="cball"
					value="checkbox" id="cball"
					onclick="javascript:setallcheckboxes(<?php echo count($tempArray)?>,'cball','cb');" /></td>
				<td width="103" class="table-hd">Civil Code</td>
				<td width="280" class="table-hd">Name</td>
				<td width="90" class="table-hd">Rank</td>
				<td width="123" class="table-hd">Station</td>
				<td width="80" class="table-hd">Status</td>
				<td width="143" class="table-hd">DOB</td>
				<td width="143" class="table-hd">DOR</td>
				<td width="143" class="table-hd">Exit Date</td>
				<td width="173" class="table-hd">Actions</td>
			</tr>
                        <?php
							$allsmallapprove = "";
							if (count ( $tempArray ) > 0) {
								for($k = 0; $k < count ( $tempArray ); $k ++) {
									// Get the vo
									$tempOfficerVO = $tempArray [$k];
									$currentstation = '';
									$currentstation = $tempStgPostingsDAO->getCurrentStation ( $tempOfficerVO->getId () );
									// Change the row color based on whether it is even or odd
									if ($k % 2 == 0) {
										$className = "table-txt";
									} else {
										$className = "table-txt1";
									}
									$lastPostingSts=$tempOfficerDAO->getOfficerLastPosting($tempOfficerVO->getId());
						
						if(!empty($lastPostingSts)){
							$confirmationMsg='onclick="deleteposting(this,'.$k.')"';
						} else {
							$confirmationMsg='';
						}
						?>
                 <tr class="<?php echo $className?>">
					<input type=hidden value="<?php echo $tempOfficerVO->getId()?>"
					name="<?php echo 'cbrow'.$k?>" id="<?php echo 'cbrow'.$k?>">
					<td><input type=checkbox value="checkbox" name="<?php echo 'cb'.$k?>" id="<?php echo 'cb'.$k?>" <?php echo $confirmationMsg; ?> ></td>
					<td><?php echo $tempOfficerVO->getCivilCode()?></td>
					<td><?php echo $tempOfficerVO->getName()?></td>
					<td><?php echo getColumnName($tempOfficerVO->getRankid(),'ranks')?></td>
					<td><?php echo $currentstation; ?></td>
					<td><?php echo getColumnName($tempOfficerVO->getOfficerStatus(),'status')?></td>
					<td><?php echo getFormattedDate($tempOfficerVO->getDateOfBirth())?></td>
					<td><?php echo getFormattedDate($tempOfficerVO->getNewRetirementDate())?></td>
					<td><?php echo getFormattedDate($tempOfficerVO->getExitDate())?></td>
					<td><a
						href="?id=<?php echo $tempOfficerVO->getId()?>&actionType=changeservingstatus">Confirm</a></td>
			
			</tr>
					<?php
							$allsmallapprove .= $tempOfficerVO->getId () . "|";
						}
					?>
							
							<!-- this is for the export by abhishek on 9.11.09 for export functionlity -->
					<?php
																									
						unset ( $_SESSION ['report_header'] );
						unset ( $_SESSION ['report_values'] );
						// note that the header contain the three columns and its a array
						$_SESSION ['report_header'] = array (
								"S.No.",
								"Civil Code",
								"Name",
								"Rank",
								"Station",
								"Status",
								"DOB",
								"DOR",
								"Exit Date" 
						);  ///04/06/2018
						$sno = 1;
						if (count ( $tempArray ) > 0) {
							for($k = 0; $k < count ( $tempArray ); $k ++) {
								$tempOfficerVO = $tempArray [$k];
								$currentstation = '';
								$currentstation = $tempStgPostingsDAO->getCurrentStation ( $tempOfficerVO->getId () );
								$_SESSION ['report_values'] [$k] [0] = $sno;
								$_SESSION ['report_values'] [$k] [1] = $tempOfficerVO->getCivilCode();
								$_SESSION ['report_values'] [$k] [2] = $tempOfficerVO->getName();
								$_SESSION ['report_values'] [$k] [3] = getColumnName ( $tempOfficerVO->getRankid (), 'ranks' );
								$_SESSION ['report_values'] [$k] [4] = $currentstation;
								$_SESSION ['report_values'] [$k] [5] = getColumnName ( $tempOfficerVO->getOfficerStatus(), 'status' );
								$_SESSION ['report_values'] [$k] [6] = date("m/d/Y",strtotime($tempOfficerVO->getDateOfBirth() ));
								$_SESSION ['report_values'] [$k] [7] = date("m/d/Y",strtotime($tempOfficerVO->getNewRetirementDate() ));
								$_SESSION ['report_values'] [$k] [8] = date("m/d/Y",strtotime($tempOfficerVO->getExitDate()));
								$sno++;
							}
						}
						
						?>
             	<!-- this is for the export by ahbi -->

			<tr class="<?php echo $className?>">
				<td colspan="10"><input type="image" src="gifs/confirm-all.gif"> <a
						href="export_report.php?fn=Retirement_Report"><img
							src="gifs/export.gif" width="75" height="21" hspace="5"
							vspace="5" align="right" border="0" /></a></td>

			</tr>
				<?php
							} else {
				?>
                            <tr class="table-txt">
				<td colspan="10">No Results Available</td>
			</tr>
				<?php
						}
				?>
                    </table>
		<input type="hidden" name="delPostingOfficer" id="delPostingOfficer" value="" />

		<input type="hidden" name="allsmall" value="<?php echo $allsmallapprove; ?>" />
	</form>
                <?php include('includes/footer.php');?>

    </body>
</html>

